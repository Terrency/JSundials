package cn.catarc.jsundials;

import cn.catarc.jsundials.LibSundials_coreDllLibrary.SUNContext;
import cn.catarc.jsundials.LibSundials_coreDllLibrary.sunindextype;
import cn.catarc.jsundials.LibSundials_coreDllLibrary.sunrealtype;
import cn.catarc.jsundials.LibSundials_sunmatrixdenseDllLibrary.SUNMatrix;
import com.sun.jna.*;
import com.sun.jna.ptr.LongByReference;

import java.nio.LongBuffer;
/**
 * JNA Wrapper for library <b>lib\sundials_sunlinsoldense.dll</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface LibSundials_sunlinsoldenseDllLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "lib\\sundials_sunlinsoldense.dll";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(LibSundials_sunlinsoldenseDllLibrary.JNA_LIBRARY_NAME);
	public static final LibSundials_sunlinsoldenseDllLibrary INSTANCE = (LibSundials_sunlinsoldenseDllLibrary)Native.loadLibrary(LibSundials_sunlinsoldenseDllLibrary.JNA_LIBRARY_NAME, LibSundials_sunlinsoldenseDllLibrary.class);
	/**
	 * ----------------------------------------<br>
	 * Exported Functions for SUNLINSOL_DENSE<br>
	 * ----------------------------------------<br>
	 * Original signature : <code>SUNLinearSolver SUNLinSol_Dense(N_Vector, SUNMatrix, SUNContext)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:24</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSol_Dense(_generic_N_Vector, SUNMatrix, SUNContext)} and {@link #SUNLinSol_Dense(_generic_N_Vector, SUNMatrix, Pointer)} instead
	 */
	@Deprecated 
	SUNLinearSolver SUNLinSol_Dense(_generic_N_Vector y, SUNMatrix A, Pointer sunctx);
	/**
	 * ----------------------------------------<br>
	 * Exported Functions for SUNLINSOL_DENSE<br>
	 * ----------------------------------------<br>
	 * Original signature : <code>SUNLinearSolver SUNLinSol_Dense(N_Vector, SUNMatrix, SUNContext)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:24</i>
	 */
	SUNLinearSolver SUNLinSol_Dense(_generic_N_Vector y, SUNMatrix A, SUNContext sunctx);
	/**
	 * Original signature : <code>SUNLinearSolver_Type SUNLinSolGetType_Dense(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:27</i>
	 */
	SUNLinearSolver_Type SUNLinSolGetType_Dense(SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNLinearSolver_ID SUNLinSolGetID_Dense(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:30</i>
	 */
	SUNLinearSolver_ID SUNLinSolGetID_Dense(SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolInitialize_Dense(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:33</i>
	 */
	int SUNLinSolInitialize_Dense(SUNLinearSolver S);
	/**
	 * Original signature : <code>int SUNLinSolSetup_Dense(SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:36</i>
	 */
	int SUNLinSolSetup_Dense(SUNLinearSolver S, SUNMatrix A);
	/**
	 * Original signature : <code>int SUNLinSolSolve_Dense(SUNLinearSolver, SUNMatrix, N_Vector, N_Vector, sunrealtype)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:39</i>
	 */
	int SUNLinSolSolve_Dense(SUNLinearSolver S, SUNMatrix A, _generic_N_Vector x, _generic_N_Vector b, sunrealtype tol);
	/**
	 * Original signature : <code>sunindextype SUNLinSolLastFlag_Dense(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:43</i>
	 */
	sunindextype SUNLinSolLastFlag_Dense(SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSpace_Dense(SUNLinearSolver, long long*, long long*)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:46</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSpace_Dense(SUNLinearSolver, LongBuffer, LongBuffer)} and {@link #SUNLinSolSpace_Dense(SUNLinearSolver, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int SUNLinSolSpace_Dense(SUNLinearSolver S, LongByReference lenrwLS, LongByReference leniwLS);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSpace_Dense(SUNLinearSolver, long long*, long long*)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:46</i>
	 */
	int SUNLinSolSpace_Dense(SUNLinearSolver S, LongBuffer lenrwLS, LongBuffer leniwLS);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolFree_Dense(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:50</i>
	 */
	int SUNLinSolFree_Dense(SUNLinearSolver S);
	public static class SUNLinearSolver extends PointerType {
		public SUNLinearSolver(Pointer address) {
			super(address);
		}
		public SUNLinearSolver() {
			super();
		}
	};
	public static class SUNLinearSolver_Type extends PointerType {
		public SUNLinearSolver_Type(Pointer address) {
			super(address);
		}
		public SUNLinearSolver_Type() {
			super();
		}
	};
	public static class SUNLinearSolver_ID extends PointerType {
		public SUNLinearSolver_ID(Pointer address) {
			super(address);
		}
		public SUNLinearSolver_ID() {
			super();
		}
	};
}
