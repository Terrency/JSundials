package cn.catarc.jsundials.cvode;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\sundials\sundials_memory.h:22</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class SUNMemory_ extends Structure {
	/** C type : void* */
	public Pointer ptr;
	/**
	 * C type : SUNMemoryType
	 */
	public int type;
	public int own;
	public long bytes;
	public SUNMemory_() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("ptr", "type", "own", "bytes");
	}
	/**
	 * @param ptr C type : void*<br>
	 * @param type @see SUNMemoryType<br>
	 * C type : SUNMemoryType
	 */
	public SUNMemory_(Pointer ptr, int type, int own, long bytes) {
		super();
		this.ptr = ptr;
		this.type = type;
		this.own = own;
		this.bytes = bytes;
	}
	public SUNMemory_(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends SUNMemory_ implements Structure.ByReference {
		
	};
	public static class ByValue extends SUNMemory_ implements Structure.ByValue {
		
	};
}
