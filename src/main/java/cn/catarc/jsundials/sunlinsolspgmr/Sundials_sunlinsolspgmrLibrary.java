package cn.catarc.jsundials.sunlinsolspgmr;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.LongByReference;
import java.nio.LongBuffer;
/**
 * JNA Wrapper for library <b>sundials_sunlinsolspgmr</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Sundials_sunlinsolspgmrLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "sundials_sunlinsolspgmr";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Sundials_sunlinsolspgmrLibrary.JNA_LIBRARY_NAME);
	public static final Sundials_sunlinsolspgmrLibrary INSTANCE = (Sundials_sunlinsolspgmrLibrary)Native.loadLibrary(Sundials_sunlinsolspgmrLibrary.JNA_LIBRARY_NAME, Sundials_sunlinsolspgmrLibrary.class);
	/** <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h</i> */
	public static final int SUNSPGMR_MAXL_DEFAULT = (int)5;
	/** <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h</i> */
	public static final int SUNSPGMR_MAXRS_DEFAULT = (int)0;
	/**
	 * ---------------------------------------<br>
	 * Exported Functions for SUNLINSOL_SPGMR<br>
	 * ---------------------------------------<br>
	 * Original signature : <code>SUNLinearSolver SUNLinSol_SPGMR(N_Vector, int, int, SUNContext)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:51</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSol_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.N_Vector, int, int, cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNContext)} and {@link #SUNLinSol_SPGMR(com.sun.jna.Pointer, int, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Sundials_sunlinsolspgmrLibrary.SUNLinearSolver SUNLinSol_SPGMR(Pointer y, int pretype, int maxl, Pointer sunctx);
	/**
	 * ---------------------------------------<br>
	 * Exported Functions for SUNLINSOL_SPGMR<br>
	 * ---------------------------------------<br>
	 * Original signature : <code>SUNLinearSolver SUNLinSol_SPGMR(N_Vector, int, int, SUNContext)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:51</i>
	 */
	Sundials_sunlinsolspgmrLibrary.SUNLinearSolver SUNLinSol_SPGMR(Sundials_sunlinsolspgmrLibrary.N_Vector y, int pretype, int maxl, Sundials_sunlinsolspgmrLibrary.SUNContext sunctx);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSol_SPGMRSetPrecType(SUNLinearSolver, int)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:53</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSol_SPGMRSetPrecType(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver, int)} and {@link #SUNLinSol_SPGMRSetPrecType(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int SUNLinSol_SPGMRSetPrecType(Pointer S, int pretype);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSol_SPGMRSetPrecType(SUNLinearSolver, int)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:53</i>
	 */
	int SUNLinSol_SPGMRSetPrecType(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S, int pretype);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSol_SPGMRSetGSType(SUNLinearSolver, int)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:55</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSol_SPGMRSetGSType(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver, int)} and {@link #SUNLinSol_SPGMRSetGSType(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int SUNLinSol_SPGMRSetGSType(Pointer S, int gstype);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSol_SPGMRSetGSType(SUNLinearSolver, int)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:55</i>
	 */
	int SUNLinSol_SPGMRSetGSType(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S, int gstype);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSol_SPGMRSetMaxRestarts(SUNLinearSolver, int)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:57</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSol_SPGMRSetMaxRestarts(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver, int)} and {@link #SUNLinSol_SPGMRSetMaxRestarts(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int SUNLinSol_SPGMRSetMaxRestarts(Pointer S, int maxrs);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSol_SPGMRSetMaxRestarts(SUNLinearSolver, int)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:57</i>
	 */
	int SUNLinSol_SPGMRSetMaxRestarts(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S, int maxrs);
	/**
	 * Original signature : <code>SUNLinearSolver_Type SUNLinSolGetType_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:59</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolGetType_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolGetType_SPGMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolGetType_SPGMR(Pointer S);
	/**
	 * Original signature : <code>SUNLinearSolver_Type SUNLinSolGetType_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:59</i>
	 */
	int SUNLinSolGetType_SPGMR(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNLinearSolver_ID SUNLinSolGetID_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:60</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolGetID_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolGetID_SPGMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolGetID_SPGMR(Pointer S);
	/**
	 * Original signature : <code>SUNLinearSolver_ID SUNLinSolGetID_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:60</i>
	 */
	int SUNLinSolGetID_SPGMR(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolInitialize_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:61</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolInitialize_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolInitialize_SPGMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolInitialize_SPGMR(Pointer S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolInitialize_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:61</i>
	 */
	int SUNLinSolInitialize_SPGMR(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetATimes_SPGMR(SUNLinearSolver, void*, SUNATimesFn)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:62</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSetATimes_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver, com.sun.jna.Pointer, com.sun.jna.Pointer)} and {@link #SUNLinSolSetATimes_SPGMR(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolSetATimes_SPGMR(Pointer S, Pointer A_data, Pointer ATimes);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetATimes_SPGMR(SUNLinearSolver, void*, SUNATimesFn)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:62</i>
	 */
	int SUNLinSolSetATimes_SPGMR(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S, Pointer A_data, Pointer ATimes);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetPreconditioner_SPGMR(SUNLinearSolver, void*, SUNPSetupFn, SUNPSolveFn)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:65</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSetPreconditioner_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} and {@link #SUNLinSolSetPreconditioner_SPGMR(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolSetPreconditioner_SPGMR(Pointer S, Pointer P_data, Pointer Pset, Pointer Psol);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetPreconditioner_SPGMR(SUNLinearSolver, void*, SUNPSetupFn, SUNPSolveFn)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:65</i>
	 */
	int SUNLinSolSetPreconditioner_SPGMR(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S, Pointer P_data, Pointer Pset, Pointer Psol);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetScalingVectors_SPGMR(SUNLinearSolver, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:69</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSetScalingVectors_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver, cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.N_Vector, cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.N_Vector)} and {@link #SUNLinSolSetScalingVectors_SPGMR(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolSetScalingVectors_SPGMR(Pointer S, Pointer s1, Pointer s2);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetScalingVectors_SPGMR(SUNLinearSolver, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:69</i>
	 */
	int SUNLinSolSetScalingVectors_SPGMR(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S, Sundials_sunlinsolspgmrLibrary.N_Vector s1, Sundials_sunlinsolspgmrLibrary.N_Vector s2);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetZeroGuess_SPGMR(SUNLinearSolver, int)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:72</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSetZeroGuess_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver, int)} and {@link #SUNLinSolSetZeroGuess_SPGMR(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int SUNLinSolSetZeroGuess_SPGMR(Pointer S, int onff);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetZeroGuess_SPGMR(SUNLinearSolver, int)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:72</i>
	 */
	int SUNLinSolSetZeroGuess_SPGMR(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S, int onff);
	/**
	 * Original signature : <code>int SUNLinSolSetup_SPGMR(SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:74</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSetup_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver, cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNMatrix)} and {@link #SUNLinSolSetup_SPGMR(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolSetup_SPGMR(Pointer S, Pointer A);
	/**
	 * Original signature : <code>int SUNLinSolSetup_SPGMR(SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:74</i>
	 */
	int SUNLinSolSetup_SPGMR(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S, Sundials_sunlinsolspgmrLibrary.SUNMatrix A);
	/**
	 * Original signature : <code>int SUNLinSolSolve_SPGMR(SUNLinearSolver, SUNMatrix, N_Vector, N_Vector, sunrealtype)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:75</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSolve_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver, cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNMatrix, cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.N_Vector, cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.N_Vector, double)} and {@link #SUNLinSolSolve_SPGMR(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int SUNLinSolSolve_SPGMR(Pointer S, Pointer A, Pointer x, Pointer b, double tol);
	/**
	 * Original signature : <code>int SUNLinSolSolve_SPGMR(SUNLinearSolver, SUNMatrix, N_Vector, N_Vector, sunrealtype)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:75</i>
	 */
	int SUNLinSolSolve_SPGMR(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S, Sundials_sunlinsolspgmrLibrary.SUNMatrix A, Sundials_sunlinsolspgmrLibrary.N_Vector x, Sundials_sunlinsolspgmrLibrary.N_Vector b, double tol);
	/**
	 * Original signature : <code>int SUNLinSolNumIters_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:77</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolNumIters_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolNumIters_SPGMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolNumIters_SPGMR(Pointer S);
	/**
	 * Original signature : <code>int SUNLinSolNumIters_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:77</i>
	 */
	int SUNLinSolNumIters_SPGMR(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>sunrealtype SUNLinSolResNorm_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:78</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolResNorm_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolResNorm_SPGMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	double SUNLinSolResNorm_SPGMR(Pointer S);
	/**
	 * Original signature : <code>sunrealtype SUNLinSolResNorm_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:78</i>
	 */
	double SUNLinSolResNorm_SPGMR(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>N_Vector SUNLinSolResid_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:79</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolResid_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolResid_SPGMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Sundials_sunlinsolspgmrLibrary.N_Vector SUNLinSolResid_SPGMR(Pointer S);
	/**
	 * Original signature : <code>N_Vector SUNLinSolResid_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:79</i>
	 */
	Sundials_sunlinsolspgmrLibrary.N_Vector SUNLinSolResid_SPGMR(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>sunindextype SUNLinSolLastFlag_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:80</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolLastFlag_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolLastFlag_SPGMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	long SUNLinSolLastFlag_SPGMR(Pointer S);
	/**
	 * Original signature : <code>sunindextype SUNLinSolLastFlag_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:80</i>
	 */
	long SUNLinSolLastFlag_SPGMR(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSpace_SPGMR(SUNLinearSolver, long long*, long long*)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:81</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSpace_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver, java.nio.LongBuffer, java.nio.LongBuffer)} and {@link #SUNLinSolSpace_SPGMR(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int SUNLinSolSpace_SPGMR(Pointer S, LongByReference lenrwLS, LongByReference leniwLS);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSpace_SPGMR(SUNLinearSolver, long long*, long long*)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:81</i>
	 */
	int SUNLinSolSpace_SPGMR(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S, LongBuffer lenrwLS, LongBuffer leniwLS);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolFree_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:84</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolFree_SPGMR(cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolFree_SPGMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolFree_SPGMR(Pointer S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolFree_SPGMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:84</i>
	 */
	int SUNLinSolFree_SPGMR(Sundials_sunlinsolspgmrLibrary.SUNLinearSolver S);
	public static class SUNLinearSolver extends PointerType {
		public SUNLinearSolver(Pointer address) {
			super(address);
		}
		public SUNLinearSolver() {
			super();
		}
	};
	public static class SUNMatrix extends PointerType {
		public SUNMatrix(Pointer address) {
			super(address);
		}
		public SUNMatrix() {
			super();
		}
	};
	public static class SUNContext extends PointerType {
		public SUNContext(Pointer address) {
			super(address);
		}
		public SUNContext() {
			super();
		}
	};
	public static class N_Vector extends PointerType {
		public N_Vector(Pointer address) {
			super(address);
		}
		public N_Vector() {
			super();
		}
	};
}
