package cn.catarc.jsundials.sunlinsoldense;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.LongByReference;
import java.nio.LongBuffer;
/**
 * JNA Wrapper for library <b>sundials_sunlinsoldense</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Sundials_sunlinsoldenseLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "sundials_sunlinsoldense";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Sundials_sunlinsoldenseLibrary.JNA_LIBRARY_NAME);
	public static final Sundials_sunlinsoldenseLibrary INSTANCE = (Sundials_sunlinsoldenseLibrary)Native.loadLibrary(Sundials_sunlinsoldenseLibrary.JNA_LIBRARY_NAME, Sundials_sunlinsoldenseLibrary.class);
	/**
	 * ----------------------------------------<br>
	 * Exported Functions for SUNLINSOL_DENSE<br>
	 * ----------------------------------------<br>
	 * Original signature : <code>SUNLinearSolver SUNLinSol_Dense(N_Vector, SUNMatrix, SUNContext)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:58</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSol_Dense(cn.catarc.jsundials.sunlinsoldense.Sundials_sunlinsoldenseLibrary.N_Vector, cn.catarc.jsundials.sunlinsoldense.Sundials_sunlinsoldenseLibrary.SUNMatrix, cn.catarc.jsundials.sunlinsoldense.Sundials_sunlinsoldenseLibrary.SUNContext)} and {@link #SUNLinSol_Dense(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Sundials_sunlinsoldenseLibrary.SUNLinearSolver SUNLinSol_Dense(Pointer y, Pointer A, Pointer sunctx);
	/**
	 * ----------------------------------------<br>
	 * Exported Functions for SUNLINSOL_DENSE<br>
	 * ----------------------------------------<br>
	 * Original signature : <code>SUNLinearSolver SUNLinSol_Dense(N_Vector, SUNMatrix, SUNContext)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:58</i>
	 */
	Sundials_sunlinsoldenseLibrary.SUNLinearSolver SUNLinSol_Dense(Sundials_sunlinsoldenseLibrary.N_Vector y, Sundials_sunlinsoldenseLibrary.SUNMatrix A, Sundials_sunlinsoldenseLibrary.SUNContext sunctx);
	/**
	 * Original signature : <code>SUNLinearSolver_Type SUNLinSolGetType_Dense(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:61</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolGetType_Dense(cn.catarc.jsundials.sunlinsoldense.Sundials_sunlinsoldenseLibrary.SUNLinearSolver)} and {@link #SUNLinSolGetType_Dense(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolGetType_Dense(Pointer S);
	/**
	 * Original signature : <code>SUNLinearSolver_Type SUNLinSolGetType_Dense(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:61</i>
	 */
	int SUNLinSolGetType_Dense(Sundials_sunlinsoldenseLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNLinearSolver_ID SUNLinSolGetID_Dense(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:64</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolGetID_Dense(cn.catarc.jsundials.sunlinsoldense.Sundials_sunlinsoldenseLibrary.SUNLinearSolver)} and {@link #SUNLinSolGetID_Dense(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolGetID_Dense(Pointer S);
	/**
	 * Original signature : <code>SUNLinearSolver_ID SUNLinSolGetID_Dense(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:64</i>
	 */
	int SUNLinSolGetID_Dense(Sundials_sunlinsoldenseLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolInitialize_Dense(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:67</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolInitialize_Dense(cn.catarc.jsundials.sunlinsoldense.Sundials_sunlinsoldenseLibrary.SUNLinearSolver)} and {@link #SUNLinSolInitialize_Dense(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolInitialize_Dense(Pointer S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolInitialize_Dense(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:67</i>
	 */
	int SUNLinSolInitialize_Dense(Sundials_sunlinsoldenseLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>int SUNLinSolSetup_Dense(SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:70</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSetup_Dense(cn.catarc.jsundials.sunlinsoldense.Sundials_sunlinsoldenseLibrary.SUNLinearSolver, cn.catarc.jsundials.sunlinsoldense.Sundials_sunlinsoldenseLibrary.SUNMatrix)} and {@link #SUNLinSolSetup_Dense(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolSetup_Dense(Pointer S, Pointer A);
	/**
	 * Original signature : <code>int SUNLinSolSetup_Dense(SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:70</i>
	 */
	int SUNLinSolSetup_Dense(Sundials_sunlinsoldenseLibrary.SUNLinearSolver S, Sundials_sunlinsoldenseLibrary.SUNMatrix A);
	/**
	 * Original signature : <code>int SUNLinSolSolve_Dense(SUNLinearSolver, SUNMatrix, N_Vector, N_Vector, sunrealtype)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:73</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSolve_Dense(cn.catarc.jsundials.sunlinsoldense.Sundials_sunlinsoldenseLibrary.SUNLinearSolver, cn.catarc.jsundials.sunlinsoldense.Sundials_sunlinsoldenseLibrary.SUNMatrix, cn.catarc.jsundials.sunlinsoldense.Sundials_sunlinsoldenseLibrary.N_Vector, cn.catarc.jsundials.sunlinsoldense.Sundials_sunlinsoldenseLibrary.N_Vector, double)} and {@link #SUNLinSolSolve_Dense(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int SUNLinSolSolve_Dense(Pointer S, Pointer A, Pointer x, Pointer b, double tol);
	/**
	 * Original signature : <code>int SUNLinSolSolve_Dense(SUNLinearSolver, SUNMatrix, N_Vector, N_Vector, sunrealtype)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:73</i>
	 */
	int SUNLinSolSolve_Dense(Sundials_sunlinsoldenseLibrary.SUNLinearSolver S, Sundials_sunlinsoldenseLibrary.SUNMatrix A, Sundials_sunlinsoldenseLibrary.N_Vector x, Sundials_sunlinsoldenseLibrary.N_Vector b, double tol);
	/**
	 * Original signature : <code>sunindextype SUNLinSolLastFlag_Dense(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:77</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolLastFlag_Dense(cn.catarc.jsundials.sunlinsoldense.Sundials_sunlinsoldenseLibrary.SUNLinearSolver)} and {@link #SUNLinSolLastFlag_Dense(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	long SUNLinSolLastFlag_Dense(Pointer S);
	/**
	 * Original signature : <code>sunindextype SUNLinSolLastFlag_Dense(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:77</i>
	 */
	long SUNLinSolLastFlag_Dense(Sundials_sunlinsoldenseLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSpace_Dense(SUNLinearSolver, long long*, long long*)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:80</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSpace_Dense(cn.catarc.jsundials.sunlinsoldense.Sundials_sunlinsoldenseLibrary.SUNLinearSolver, java.nio.LongBuffer, java.nio.LongBuffer)} and {@link #SUNLinSolSpace_Dense(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int SUNLinSolSpace_Dense(Pointer S, LongByReference lenrwLS, LongByReference leniwLS);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSpace_Dense(SUNLinearSolver, long long*, long long*)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:80</i>
	 */
	int SUNLinSolSpace_Dense(Sundials_sunlinsoldenseLibrary.SUNLinearSolver S, LongBuffer lenrwLS, LongBuffer leniwLS);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolFree_Dense(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:84</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolFree_Dense(cn.catarc.jsundials.sunlinsoldense.Sundials_sunlinsoldenseLibrary.SUNLinearSolver)} and {@link #SUNLinSolFree_Dense(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolFree_Dense(Pointer S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolFree_Dense(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_dense.h:84</i>
	 */
	int SUNLinSolFree_Dense(Sundials_sunlinsoldenseLibrary.SUNLinearSolver S);
	public static class SUNLinearSolver extends PointerType {
		public SUNLinearSolver(Pointer address) {
			super(address);
		}
		public SUNLinearSolver() {
			super();
		}
	};
	public static class SUNMatrix extends PointerType {
		public SUNMatrix(Pointer address) {
			super(address);
		}
		public SUNMatrix() {
			super();
		}
	};
	public static class SUNContext extends PointerType {
		public SUNContext(Pointer address) {
			super(address);
		}
		public SUNContext() {
			super();
		}
	};
	public static class N_Vector extends PointerType {
		public N_Vector(Pointer address) {
			super(address);
		}
		public N_Vector() {
			super();
		}
	};
}
