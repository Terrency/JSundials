package cn.catarc.jsundials.sunlinsolspgmr;
import cn.catarc.jsundials.sunlinsolspgmr.Sundials_sunlinsolspgmrLibrary.N_Vector;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.PointerByReference;
import java.util.Arrays;
import java.util.List;
/**
 * ----------------------------------------<br>
 * SPGMR Implementation of SUNLinearSolver<br>
 * ----------------------------------------<br>
 * <i>native declaration : include\sunlinsol\sunlinsol_spgmr.h:15</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class _SUNLinearSolverContent_SPGMR extends Structure {
	public int maxl;
	public int pretype;
	public int gstype;
	public int max_restarts;
	public int zeroguess;
	public int numiters;
	/** C type : sunrealtype */
	public double resnorm;
	public int last_flag;
	/** C type : SUNATimesFn */
	public Pointer ATimes;
	/** C type : void* */
	public Pointer ATData;
	/** C type : SUNPSetupFn */
	public Pointer Psetup;
	/** C type : SUNPSolveFn */
	public Pointer Psolve;
	/** C type : void* */
	public Pointer PData;
	/** C type : N_Vector */
	public N_Vector s1;
	/** C type : N_Vector */
	public N_Vector s2;
	/** C type : N_Vector* */
	public PointerByReference V;
	/** C type : sunrealtype** */
	public PointerByReference Hes;
	/** C type : sunrealtype* */
	public DoubleByReference givens;
	/** C type : N_Vector */
	public N_Vector xcor;
	/** C type : sunrealtype* */
	public DoubleByReference yg;
	/** C type : N_Vector */
	public N_Vector vtemp;
	/** C type : sunrealtype* */
	public DoubleByReference cv;
	/** C type : N_Vector* */
	public PointerByReference Xv;
	public _SUNLinearSolverContent_SPGMR() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("maxl", "pretype", "gstype", "max_restarts", "zeroguess", "numiters", "resnorm", "last_flag", "ATimes", "ATData", "Psetup", "Psolve", "PData", "s1", "s2", "V", "Hes", "givens", "xcor", "yg", "vtemp", "cv", "Xv");
	}
	public _SUNLinearSolverContent_SPGMR(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends _SUNLinearSolverContent_SPGMR implements Structure.ByReference {
		
	};
	public static class ByValue extends _SUNLinearSolverContent_SPGMR implements Structure.ByValue {
		
	};
}
