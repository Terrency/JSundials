package cn.catarc.jsundials;

import cn.catarc.jsundials.LibSundials_coreDllLibrary.sunindextype;
import cn.catarc.jsundials.LibSundials_coreDllLibrary.sunrealtype;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\sundials\sundials_direct.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class _DlsMat extends Structure {
	public int type;
	/** C type : sunindextype */
	public sunindextype M;
	/** C type : sunindextype */
	public sunindextype N;
	/** C type : sunindextype */
	public sunindextype ldim;
	/** C type : sunindextype */
	public sunindextype mu;
	/** C type : sunindextype */
	public sunindextype ml;
	/** C type : sunindextype */
	public sunindextype s_mu;
	/** C type : sunrealtype* */
	public sunrealtype data;
	/** C type : sunindextype */
	public sunindextype ldata;
	/** C type : sunrealtype** */
	public sunrealtype[] cols;
	public _DlsMat() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("type", "M", "N", "ldim", "mu", "ml", "s_mu", "data", "ldata", "cols");
	}
	public _DlsMat(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends _DlsMat implements Structure.ByReference {
		
	};
	public static class ByValue extends _DlsMat implements Structure.ByValue {
		
	};
}
