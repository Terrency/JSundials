package cn.catarc.jsundials.sunlinsolband;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.LongByReference;
import java.nio.LongBuffer;
/**
 * JNA Wrapper for library <b>sundials_sunlinsolband</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Sundials_sunlinsolbandLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "sundials_sunlinsolband";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Sundials_sunlinsolbandLibrary.JNA_LIBRARY_NAME);
	public static final Sundials_sunlinsolbandLibrary INSTANCE = (Sundials_sunlinsolbandLibrary)Native.loadLibrary(Sundials_sunlinsolbandLibrary.JNA_LIBRARY_NAME, Sundials_sunlinsolbandLibrary.class);
	/**
	 * --------------------------------------<br>
	 * Exported Functions for SUNLINSOL_BAND<br>
	 * --------------------------------------<br>
	 * Original signature : <code>SUNLinearSolver SUNLinSol_Band(N_Vector, SUNMatrix, SUNContext)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:53</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSol_Band(cn.catarc.jsundials.sunlinsolband.Sundials_sunlinsolbandLibrary.N_Vector, cn.catarc.jsundials.sunlinsolband.Sundials_sunlinsolbandLibrary.SUNMatrix, cn.catarc.jsundials.sunlinsolband.Sundials_sunlinsolbandLibrary.SUNContext)} and {@link #SUNLinSol_Band(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Sundials_sunlinsolbandLibrary.SUNLinearSolver SUNLinSol_Band(Pointer y, Pointer A, Pointer sunctx);
	/**
	 * --------------------------------------<br>
	 * Exported Functions for SUNLINSOL_BAND<br>
	 * --------------------------------------<br>
	 * Original signature : <code>SUNLinearSolver SUNLinSol_Band(N_Vector, SUNMatrix, SUNContext)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:53</i>
	 */
	Sundials_sunlinsolbandLibrary.SUNLinearSolver SUNLinSol_Band(Sundials_sunlinsolbandLibrary.N_Vector y, Sundials_sunlinsolbandLibrary.SUNMatrix A, Sundials_sunlinsolbandLibrary.SUNContext sunctx);
	/**
	 * Original signature : <code>SUNLinearSolver_Type SUNLinSolGetType_Band(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:56</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolGetType_Band(cn.catarc.jsundials.sunlinsolband.Sundials_sunlinsolbandLibrary.SUNLinearSolver)} and {@link #SUNLinSolGetType_Band(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolGetType_Band(Pointer S);
	/**
	 * Original signature : <code>SUNLinearSolver_Type SUNLinSolGetType_Band(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:56</i>
	 */
	int SUNLinSolGetType_Band(Sundials_sunlinsolbandLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNLinearSolver_ID SUNLinSolGetID_Band(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:59</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolGetID_Band(cn.catarc.jsundials.sunlinsolband.Sundials_sunlinsolbandLibrary.SUNLinearSolver)} and {@link #SUNLinSolGetID_Band(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolGetID_Band(Pointer S);
	/**
	 * Original signature : <code>SUNLinearSolver_ID SUNLinSolGetID_Band(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:59</i>
	 */
	int SUNLinSolGetID_Band(Sundials_sunlinsolbandLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolInitialize_Band(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:62</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolInitialize_Band(cn.catarc.jsundials.sunlinsolband.Sundials_sunlinsolbandLibrary.SUNLinearSolver)} and {@link #SUNLinSolInitialize_Band(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolInitialize_Band(Pointer S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolInitialize_Band(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:62</i>
	 */
	int SUNLinSolInitialize_Band(Sundials_sunlinsolbandLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>int SUNLinSolSetup_Band(SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:65</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSetup_Band(cn.catarc.jsundials.sunlinsolband.Sundials_sunlinsolbandLibrary.SUNLinearSolver, cn.catarc.jsundials.sunlinsolband.Sundials_sunlinsolbandLibrary.SUNMatrix)} and {@link #SUNLinSolSetup_Band(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolSetup_Band(Pointer S, Pointer A);
	/**
	 * Original signature : <code>int SUNLinSolSetup_Band(SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:65</i>
	 */
	int SUNLinSolSetup_Band(Sundials_sunlinsolbandLibrary.SUNLinearSolver S, Sundials_sunlinsolbandLibrary.SUNMatrix A);
	/**
	 * Original signature : <code>int SUNLinSolSolve_Band(SUNLinearSolver, SUNMatrix, N_Vector, N_Vector, sunrealtype)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:68</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSolve_Band(cn.catarc.jsundials.sunlinsolband.Sundials_sunlinsolbandLibrary.SUNLinearSolver, cn.catarc.jsundials.sunlinsolband.Sundials_sunlinsolbandLibrary.SUNMatrix, cn.catarc.jsundials.sunlinsolband.Sundials_sunlinsolbandLibrary.N_Vector, cn.catarc.jsundials.sunlinsolband.Sundials_sunlinsolbandLibrary.N_Vector, double)} and {@link #SUNLinSolSolve_Band(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int SUNLinSolSolve_Band(Pointer S, Pointer A, Pointer x, Pointer b, double tol);
	/**
	 * Original signature : <code>int SUNLinSolSolve_Band(SUNLinearSolver, SUNMatrix, N_Vector, N_Vector, sunrealtype)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:68</i>
	 */
	int SUNLinSolSolve_Band(Sundials_sunlinsolbandLibrary.SUNLinearSolver S, Sundials_sunlinsolbandLibrary.SUNMatrix A, Sundials_sunlinsolbandLibrary.N_Vector x, Sundials_sunlinsolbandLibrary.N_Vector b, double tol);
	/**
	 * Original signature : <code>sunindextype SUNLinSolLastFlag_Band(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:72</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolLastFlag_Band(cn.catarc.jsundials.sunlinsolband.Sundials_sunlinsolbandLibrary.SUNLinearSolver)} and {@link #SUNLinSolLastFlag_Band(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	long SUNLinSolLastFlag_Band(Pointer S);
	/**
	 * Original signature : <code>sunindextype SUNLinSolLastFlag_Band(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:72</i>
	 */
	long SUNLinSolLastFlag_Band(Sundials_sunlinsolbandLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSpace_Band(SUNLinearSolver, long long*, long long*)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:75</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSpace_Band(cn.catarc.jsundials.sunlinsolband.Sundials_sunlinsolbandLibrary.SUNLinearSolver, java.nio.LongBuffer, java.nio.LongBuffer)} and {@link #SUNLinSolSpace_Band(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int SUNLinSolSpace_Band(Pointer S, LongByReference lenrwLS, LongByReference leniwLS);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSpace_Band(SUNLinearSolver, long long*, long long*)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:75</i>
	 */
	int SUNLinSolSpace_Band(Sundials_sunlinsolbandLibrary.SUNLinearSolver S, LongBuffer lenrwLS, LongBuffer leniwLS);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolFree_Band(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:79</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolFree_Band(cn.catarc.jsundials.sunlinsolband.Sundials_sunlinsolbandLibrary.SUNLinearSolver)} and {@link #SUNLinSolFree_Band(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolFree_Band(Pointer S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolFree_Band(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_band.h:79</i>
	 */
	int SUNLinSolFree_Band(Sundials_sunlinsolbandLibrary.SUNLinearSolver S);
	public static class SUNLinearSolver extends PointerType {
		public SUNLinearSolver(Pointer address) {
			super(address);
		}
		public SUNLinearSolver() {
			super();
		}
	};
	public static class SUNMatrix extends PointerType {
		public SUNMatrix(Pointer address) {
			super(address);
		}
		public SUNMatrix() {
			super();
		}
	};
	public static class SUNContext extends PointerType {
		public SUNContext(Pointer address) {
			super(address);
		}
		public SUNContext() {
			super();
		}
	};
	public static class N_Vector extends PointerType {
		public N_Vector(Pointer address) {
			super(address);
		}
		public N_Vector() {
			super();
		}
	};
}
