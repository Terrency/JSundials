package cn.catarc.jsundials.arkode;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.PointerByReference;
import java.util.Arrays;
import java.util.List;
/**
 * ---------------------------------------------------------------<br>
 * MRI coupling data structure and associated utility routines<br>
 * ---------------------------------------------------------------<br>
 * <i>native declaration : include\arkode\arkode_mristep.h:61</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class MRIStepCouplingMem extends Structure {
	/** number of MRI coupling matrices */
	public int nmat;
	/** size of coupling matrices (stages * stages) */
	public int stages;
	/** method order of accuracy */
	public int q;
	/** embedding order of accuracy */
	public int p;
	/**
	 * stage abscissae<br>
	 * C type : sunrealtype*
	 */
	public DoubleByReference c;
	/**
	 * explicit coupling matrices [nmat][stages][stages]<br>
	 * C type : sunrealtype***
	 */
	public PointerByReference W;
	/**
	 * implicit coupling matrices [nmat][stages][stages]<br>
	 * C type : sunrealtype***
	 */
	public PointerByReference G;
	public MRIStepCouplingMem() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("nmat", "stages", "q", "p", "c", "W", "G");
	}
	/**
	 * @param nmat number of MRI coupling matrices<br>
	 * @param stages size of coupling matrices (stages * stages)<br>
	 * @param q method order of accuracy<br>
	 * @param p embedding order of accuracy<br>
	 * @param c stage abscissae<br>
	 * C type : sunrealtype*<br>
	 * @param W explicit coupling matrices [nmat][stages][stages]<br>
	 * C type : sunrealtype***<br>
	 * @param G implicit coupling matrices [nmat][stages][stages]<br>
	 * C type : sunrealtype***
	 */
	public MRIStepCouplingMem(int nmat, int stages, int q, int p, DoubleByReference c, PointerByReference W, PointerByReference G) {
		super();
		this.nmat = nmat;
		this.stages = stages;
		this.q = q;
		this.p = p;
		this.c = c;
		this.W = W;
		this.G = G;
	}
	public MRIStepCouplingMem(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends MRIStepCouplingMem implements Structure.ByReference {
		
	};
	public static class ByValue extends MRIStepCouplingMem implements Structure.ByValue {
		
	};
}
