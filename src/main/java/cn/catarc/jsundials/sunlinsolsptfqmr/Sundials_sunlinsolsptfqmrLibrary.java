package cn.catarc.jsundials.sunlinsolsptfqmr;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.LongByReference;
import java.nio.LongBuffer;
/**
 * JNA Wrapper for library <b>sundials_sunlinsolsptfqmr</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Sundials_sunlinsolsptfqmrLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "sundials_sunlinsolsptfqmr";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Sundials_sunlinsolsptfqmrLibrary.JNA_LIBRARY_NAME);
	public static final Sundials_sunlinsolsptfqmrLibrary INSTANCE = (Sundials_sunlinsolsptfqmrLibrary)Native.loadLibrary(Sundials_sunlinsolsptfqmrLibrary.JNA_LIBRARY_NAME, Sundials_sunlinsolsptfqmrLibrary.class);
	/** <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h</i> */
	public static final int SUNSPTFQMR_MAXL_DEFAULT = (int)5;
	/**
	 * -------------------------------------<br>
	 * Exported Functions SUNLINSOL_SPTFQMR<br>
	 * --------------------------------------<br>
	 * Original signature : <code>SUNLinearSolver SUNLinSol_SPTFQMR(N_Vector, int, int, SUNContext)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:48</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSol_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.N_Vector, int, int, cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNContext)} and {@link #SUNLinSol_SPTFQMR(com.sun.jna.Pointer, int, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver SUNLinSol_SPTFQMR(Pointer y, int pretype, int maxl, Pointer sunctx);
	/**
	 * -------------------------------------<br>
	 * Exported Functions SUNLINSOL_SPTFQMR<br>
	 * --------------------------------------<br>
	 * Original signature : <code>SUNLinearSolver SUNLinSol_SPTFQMR(N_Vector, int, int, SUNContext)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:48</i>
	 */
	Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver SUNLinSol_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.N_Vector y, int pretype, int maxl, Sundials_sunlinsolsptfqmrLibrary.SUNContext sunctx);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSol_SPTFQMRSetPrecType(SUNLinearSolver, int)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:50</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSol_SPTFQMRSetPrecType(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver, int)} and {@link #SUNLinSol_SPTFQMRSetPrecType(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int SUNLinSol_SPTFQMRSetPrecType(Pointer S, int pretype);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSol_SPTFQMRSetPrecType(SUNLinearSolver, int)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:50</i>
	 */
	int SUNLinSol_SPTFQMRSetPrecType(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S, int pretype);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSol_SPTFQMRSetMaxl(SUNLinearSolver, int)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:52</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSol_SPTFQMRSetMaxl(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver, int)} and {@link #SUNLinSol_SPTFQMRSetMaxl(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int SUNLinSol_SPTFQMRSetMaxl(Pointer S, int maxl);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSol_SPTFQMRSetMaxl(SUNLinearSolver, int)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:52</i>
	 */
	int SUNLinSol_SPTFQMRSetMaxl(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S, int maxl);
	/**
	 * Original signature : <code>SUNLinearSolver_Type SUNLinSolGetType_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:53</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolGetType_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolGetType_SPTFQMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolGetType_SPTFQMR(Pointer S);
	/**
	 * Original signature : <code>SUNLinearSolver_Type SUNLinSolGetType_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:53</i>
	 */
	int SUNLinSolGetType_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNLinearSolver_ID SUNLinSolGetID_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:54</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolGetID_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolGetID_SPTFQMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolGetID_SPTFQMR(Pointer S);
	/**
	 * Original signature : <code>SUNLinearSolver_ID SUNLinSolGetID_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:54</i>
	 */
	int SUNLinSolGetID_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolInitialize_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:55</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolInitialize_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolInitialize_SPTFQMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolInitialize_SPTFQMR(Pointer S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolInitialize_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:55</i>
	 */
	int SUNLinSolInitialize_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetATimes_SPTFQMR(SUNLinearSolver, void*, SUNATimesFn)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:56</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSetATimes_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver, com.sun.jna.Pointer, com.sun.jna.Pointer)} and {@link #SUNLinSolSetATimes_SPTFQMR(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolSetATimes_SPTFQMR(Pointer S, Pointer A_data, Pointer ATimes);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetATimes_SPTFQMR(SUNLinearSolver, void*, SUNATimesFn)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:56</i>
	 */
	int SUNLinSolSetATimes_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S, Pointer A_data, Pointer ATimes);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetPreconditioner_SPTFQMR(SUNLinearSolver, void*, SUNPSetupFn, SUNPSolveFn)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:59</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSetPreconditioner_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} and {@link #SUNLinSolSetPreconditioner_SPTFQMR(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolSetPreconditioner_SPTFQMR(Pointer S, Pointer P_data, Pointer Pset, Pointer Psol);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetPreconditioner_SPTFQMR(SUNLinearSolver, void*, SUNPSetupFn, SUNPSolveFn)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:59</i>
	 */
	int SUNLinSolSetPreconditioner_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S, Pointer P_data, Pointer Pset, Pointer Psol);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetScalingVectors_SPTFQMR(SUNLinearSolver, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:63</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSetScalingVectors_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver, cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.N_Vector, cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.N_Vector)} and {@link #SUNLinSolSetScalingVectors_SPTFQMR(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolSetScalingVectors_SPTFQMR(Pointer S, Pointer s1, Pointer s2);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetScalingVectors_SPTFQMR(SUNLinearSolver, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:63</i>
	 */
	int SUNLinSolSetScalingVectors_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S, Sundials_sunlinsolsptfqmrLibrary.N_Vector s1, Sundials_sunlinsolsptfqmrLibrary.N_Vector s2);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetZeroGuess_SPTFQMR(SUNLinearSolver, int)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:66</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSetZeroGuess_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver, int)} and {@link #SUNLinSolSetZeroGuess_SPTFQMR(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int SUNLinSolSetZeroGuess_SPTFQMR(Pointer S, int onoff);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSetZeroGuess_SPTFQMR(SUNLinearSolver, int)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:66</i>
	 */
	int SUNLinSolSetZeroGuess_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S, int onoff);
	/**
	 * Original signature : <code>int SUNLinSolSetup_SPTFQMR(SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:68</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSetup_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver, cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNMatrix)} and {@link #SUNLinSolSetup_SPTFQMR(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolSetup_SPTFQMR(Pointer S, Pointer A);
	/**
	 * Original signature : <code>int SUNLinSolSetup_SPTFQMR(SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:68</i>
	 */
	int SUNLinSolSetup_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S, Sundials_sunlinsolsptfqmrLibrary.SUNMatrix A);
	/**
	 * Original signature : <code>int SUNLinSolSolve_SPTFQMR(SUNLinearSolver, SUNMatrix, N_Vector, N_Vector, sunrealtype)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:69</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSolve_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver, cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNMatrix, cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.N_Vector, cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.N_Vector, double)} and {@link #SUNLinSolSolve_SPTFQMR(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	@Deprecated 
	int SUNLinSolSolve_SPTFQMR(Pointer S, Pointer A, Pointer x, Pointer b, double tol);
	/**
	 * Original signature : <code>int SUNLinSolSolve_SPTFQMR(SUNLinearSolver, SUNMatrix, N_Vector, N_Vector, sunrealtype)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:69</i>
	 */
	int SUNLinSolSolve_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S, Sundials_sunlinsolsptfqmrLibrary.SUNMatrix A, Sundials_sunlinsolsptfqmrLibrary.N_Vector x, Sundials_sunlinsolsptfqmrLibrary.N_Vector b, double tol);
	/**
	 * Original signature : <code>int SUNLinSolNumIters_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:72</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolNumIters_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolNumIters_SPTFQMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolNumIters_SPTFQMR(Pointer S);
	/**
	 * Original signature : <code>int SUNLinSolNumIters_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:72</i>
	 */
	int SUNLinSolNumIters_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>sunrealtype SUNLinSolResNorm_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:73</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolResNorm_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolResNorm_SPTFQMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	double SUNLinSolResNorm_SPTFQMR(Pointer S);
	/**
	 * Original signature : <code>sunrealtype SUNLinSolResNorm_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:73</i>
	 */
	double SUNLinSolResNorm_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>N_Vector SUNLinSolResid_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:74</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolResid_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolResid_SPTFQMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Sundials_sunlinsolsptfqmrLibrary.N_Vector SUNLinSolResid_SPTFQMR(Pointer S);
	/**
	 * Original signature : <code>N_Vector SUNLinSolResid_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:74</i>
	 */
	Sundials_sunlinsolsptfqmrLibrary.N_Vector SUNLinSolResid_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>sunindextype SUNLinSolLastFlag_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:75</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolLastFlag_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolLastFlag_SPTFQMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	long SUNLinSolLastFlag_SPTFQMR(Pointer S);
	/**
	 * Original signature : <code>sunindextype SUNLinSolLastFlag_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:75</i>
	 */
	long SUNLinSolLastFlag_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSpace_SPTFQMR(SUNLinearSolver, long long*, long long*)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:76</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolSpace_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver, java.nio.LongBuffer, java.nio.LongBuffer)} and {@link #SUNLinSolSpace_SPTFQMR(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int SUNLinSolSpace_SPTFQMR(Pointer S, LongByReference lenrwLS, LongByReference leniwLS);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolSpace_SPTFQMR(SUNLinearSolver, long long*, long long*)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:76</i>
	 */
	int SUNLinSolSpace_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S, LongBuffer lenrwLS, LongBuffer leniwLS);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolFree_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:79</i><br>
	 * @deprecated use the safer methods {@link #SUNLinSolFree_SPTFQMR(cn.catarc.jsundials.sunlinsolsptfqmr.Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver)} and {@link #SUNLinSolFree_SPTFQMR(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int SUNLinSolFree_SPTFQMR(Pointer S);
	/**
	 * Original signature : <code>SUNErrCode SUNLinSolFree_SPTFQMR(SUNLinearSolver)</code><br>
	 * <i>native declaration : include\sunlinsol\sunlinsol_sptfqmr.h:79</i>
	 */
	int SUNLinSolFree_SPTFQMR(Sundials_sunlinsolsptfqmrLibrary.SUNLinearSolver S);
	public static class SUNLinearSolver extends PointerType {
		public SUNLinearSolver(Pointer address) {
			super(address);
		}
		public SUNLinearSolver() {
			super();
		}
	};
	public static class SUNMatrix extends PointerType {
		public SUNMatrix(Pointer address) {
			super(address);
		}
		public SUNMatrix() {
			super();
		}
	};
	public static class SUNContext extends PointerType {
		public SUNContext(Pointer address) {
			super(address);
		}
		public SUNContext() {
			super();
		}
	};
	public static class N_Vector extends PointerType {
		public N_Vector(Pointer address) {
			super(address);
		}
		public N_Vector() {
			super();
		}
	};
}
