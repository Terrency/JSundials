package cn.catarc.jsundials.cvodes;

import com.sun.jna.*;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.LongByReference;
import com.sun.jna.ptr.PointerByReference;

import java.nio.DoubleBuffer;
import java.nio.IntBuffer;
import java.nio.LongBuffer;
/**
 * JNA Wrapper for library <b>sundials_cvodes</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Sundials_cvodesLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "sundials_cvodes";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Sundials_cvodesLibrary.JNA_LIBRARY_NAME);
	public static final Sundials_cvodesLibrary INSTANCE = (Sundials_cvodesLibrary)Native.loadLibrary(Sundials_cvodesLibrary.JNA_LIBRARY_NAME, Sundials_cvodesLibrary.class);
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public static final int CVLS_SUCCESS = (int)0;
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public static final int CVLS_MEM_NULL = (int)-1;
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public static final int CVLS_LMEM_NULL = (int)-2;
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public static final int CVLS_ILL_INPUT = (int)-3;
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public static final int CVLS_MEM_FAIL = (int)-4;
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public static final int CVLS_PMEM_NULL = (int)-5;
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public static final int CVLS_JACFUNC_UNRECVR = (int)-6;
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public static final int CVLS_JACFUNC_RECVR = (int)-7;
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public static final int CVLS_SUNMAT_FAIL = (int)-8;
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public static final int CVLS_SUNLS_FAIL = (int)-9;
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public static final int CVLS_NO_ADJ = (int)-101;
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public static final int CVLS_LMEMB_NULL = (int)-102;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_ADAMS = (int)1;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_BDF = (int)2;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_NORMAL = (int)1;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_ONE_STEP = (int)2;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_SIMULTANEOUS = (int)1;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_STAGGERED = (int)2;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_STAGGERED1 = (int)3;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_CENTERED = (int)1;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_FORWARD = (int)2;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_HERMITE = (int)1;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_POLYNOMIAL = (int)2;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_SUCCESS = (int)0;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_TSTOP_RETURN = (int)1;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_ROOT_RETURN = (int)2;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_WARNING = (int)99;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_TOO_MUCH_WORK = (int)-1;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_TOO_MUCH_ACC = (int)-2;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_ERR_FAILURE = (int)-3;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_CONV_FAILURE = (int)-4;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_LINIT_FAIL = (int)-5;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_LSETUP_FAIL = (int)-6;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_LSOLVE_FAIL = (int)-7;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_RHSFUNC_FAIL = (int)-8;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_FIRST_RHSFUNC_ERR = (int)-9;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_REPTD_RHSFUNC_ERR = (int)-10;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_UNREC_RHSFUNC_ERR = (int)-11;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_RTFUNC_FAIL = (int)-12;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_NLS_INIT_FAIL = (int)-13;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_NLS_SETUP_FAIL = (int)-14;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_CONSTR_FAIL = (int)-15;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_NLS_FAIL = (int)-16;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_MEM_FAIL = (int)-20;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_MEM_NULL = (int)-21;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_ILL_INPUT = (int)-22;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_NO_MALLOC = (int)-23;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_BAD_K = (int)-24;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_BAD_T = (int)-25;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_BAD_DKY = (int)-26;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_TOO_CLOSE = (int)-27;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_VECTOROP_ERR = (int)-28;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_NO_QUAD = (int)-30;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_QRHSFUNC_FAIL = (int)-31;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_FIRST_QRHSFUNC_ERR = (int)-32;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_REPTD_QRHSFUNC_ERR = (int)-33;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_UNREC_QRHSFUNC_ERR = (int)-34;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_NO_SENS = (int)-40;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_SRHSFUNC_FAIL = (int)-41;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_FIRST_SRHSFUNC_ERR = (int)-42;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_REPTD_SRHSFUNC_ERR = (int)-43;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_UNREC_SRHSFUNC_ERR = (int)-44;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_BAD_IS = (int)-45;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_NO_QUADSENS = (int)-50;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_QSRHSFUNC_FAIL = (int)-51;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_FIRST_QSRHSFUNC_ERR = (int)-52;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_REPTD_QSRHSFUNC_ERR = (int)-53;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_UNREC_QSRHSFUNC_ERR = (int)-54;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_CONTEXT_ERR = (int)-55;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_PROJ_MEM_NULL = (int)-56;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_PROJFUNC_FAIL = (int)-57;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_REPTD_PROJFUNC_ERR = (int)-58;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_BAD_TINTERP = (int)-59;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_UNRECOGNIZED_ERR = (int)-99;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_NO_ADJ = (int)-101;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_NO_FWD = (int)-102;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_NO_BCK = (int)-103;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_BAD_TB0 = (int)-104;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_REIFWD_FAIL = (int)-105;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_FWD_FAIL = (int)-106;
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public static final int CV_GETY_BADT = (int)-107;
	/** <i>native declaration : include\cvodes\cvodes_diag.h</i> */
	public static final int CVDIAG_SUCCESS = (int)0;
	/** <i>native declaration : include\cvodes\cvodes_diag.h</i> */
	public static final int CVDIAG_MEM_NULL = (int)-1;
	/** <i>native declaration : include\cvodes\cvodes_diag.h</i> */
	public static final int CVDIAG_LMEM_NULL = (int)-2;
	/** <i>native declaration : include\cvodes\cvodes_diag.h</i> */
	public static final int CVDIAG_ILL_INPUT = (int)-3;
	/** <i>native declaration : include\cvodes\cvodes_diag.h</i> */
	public static final int CVDIAG_MEM_FAIL = (int)-4;
	/** <i>native declaration : include\cvodes\cvodes_diag.h</i> */
	public static final int CVDIAG_INV_FAIL = (int)-5;
	/** <i>native declaration : include\cvodes\cvodes_diag.h</i> */
	public static final int CVDIAG_RHSFUNC_UNRECVR = (int)-6;
	/** <i>native declaration : include\cvodes\cvodes_diag.h</i> */
	public static final int CVDIAG_RHSFUNC_RECVR = (int)-7;
	/** <i>native declaration : include\cvodes\cvodes_diag.h</i> */
	public static final int CVDIAG_NO_ADJ = (int)-101;
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsJacFn extends Callback {
		int apply(double t, Pointer y, Pointer fy, Pointer Jac, Pointer user_data, Pointer tmp1, Pointer tmp2, Pointer tmp3);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsPrecSetupFn extends Callback {
		int apply(double t, Pointer y, Pointer fy, int jok, IntByReference jcurPtr, double gamma, Pointer user_data);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsPrecSolveFn extends Callback {
		int apply(double t, Pointer y, Pointer fy, Pointer r, Pointer z, double gamma, double delta, int lr, Pointer user_data);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsJacTimesSetupFn extends Callback {
		int apply(double t, Pointer y, Pointer fy, Pointer user_data);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsJacTimesVecFn extends Callback {
		int apply(Pointer v, Pointer Jv, double t, Pointer y, Pointer fy, Pointer user_data, Pointer tmp);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsLinSysFn extends Callback {
		int apply(double t, Pointer y, Pointer fy, Pointer A, int jok, IntByReference jcur, double gamma, Pointer user_data, Pointer tmp1, Pointer tmp2, Pointer tmp3);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsJacFnB extends Callback {
		int apply(double t, Pointer y, Pointer yB, Pointer fyB, Pointer JB, Pointer user_dataB, Pointer tmp1B, Pointer tmp2B, Pointer tmp3B);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsJacFnBS extends Callback {
		int apply(double t, Pointer y, Pointer yS, Pointer yB, Pointer fyB, Pointer JB, Pointer user_dataB, Pointer tmp1B, Pointer tmp2B, Pointer tmp3B);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsPrecSetupFnB extends Callback {
		int apply(double t, Pointer y, Pointer yB, Pointer fyB, int jokB, IntByReference jcurPtrB, double gammaB, Pointer user_dataB);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsPrecSetupFnBS extends Callback {
		int apply(double t, Pointer y, Pointer yS, Pointer yB, Pointer fyB, int jokB, IntByReference jcurPtrB, double gammaB, Pointer user_dataB);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsPrecSolveFnB extends Callback {
		int apply(double t, Pointer y, Pointer yB, Pointer fyB, Pointer rB, Pointer zB, double gammaB, double deltaB, int lrB, Pointer user_dataB);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsPrecSolveFnBS extends Callback {
		int apply(double t, Pointer y, Pointer yS, Pointer yB, Pointer fyB, Pointer rB, Pointer zB, double gammaB, double deltaB, int lrB, Pointer user_dataB);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsJacTimesSetupFnB extends Callback {
		int apply(double t, Pointer y, Pointer yB, Pointer fyB, Pointer jac_dataB);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsJacTimesSetupFnBS extends Callback {
		int apply(double t, Pointer y, Pointer yS, Pointer yB, Pointer fyB, Pointer jac_dataB);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsJacTimesVecFnB extends Callback {
		int apply(Pointer vB, Pointer JvB, double t, Pointer y, Pointer yB, Pointer fyB, Pointer jac_dataB, Pointer tmpB);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsJacTimesVecFnBS extends Callback {
		int apply(Pointer vB, Pointer JvB, double t, Pointer y, Pointer yS, Pointer yB, Pointer fyB, Pointer jac_dataB, Pointer tmpB);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsLinSysFnB extends Callback {
		int apply(double t, Pointer y, Pointer yB, Pointer fyB, Pointer AB, int jokB, IntByReference jcurB, double gammaB, Pointer user_dataB, Pointer tmp1B, Pointer tmp2B, Pointer tmp3B);
	};
	/** <i>native declaration : include\cvodes\cvodes_ls.h</i> */
	public interface CVLsLinSysFnBS extends Callback {
		int apply(double t, Pointer y, Pointer yS, Pointer yB, Pointer fyB, Pointer AB, int jokB, IntByReference jcurB, double gammaB, Pointer user_dataB, Pointer tmp1B, Pointer tmp2B, Pointer tmp3B);
	};
	/** <i>native declaration : include\cvodes\cvodes_proj.h</i> */
	public interface CVProjFn extends Callback {
		int apply(double t, Pointer ycur, Pointer corr, double epsProj, Pointer err, Pointer user_data);
	};
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public interface CVRhsFn extends Callback {
		int apply(double t, Pointer y, Pointer ydot, Pointer user_data);
	};
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public interface CVRootFn extends Callback {
		int apply(double t, Pointer y, DoubleByReference gout, Pointer user_data);
	};
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public interface CVEwtFn extends Callback {
		int apply(Pointer y, Pointer ewt, Pointer user_data);
	};
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public interface CVMonitorFn extends Callback {
		int apply(Pointer cvode_mem, Pointer user_data);
	};
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public interface CVQuadRhsFn extends Callback {
		int apply(double t, Pointer y, Pointer yQdot, Pointer user_data);
	};
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public interface CVSensRhsFn extends Callback {
		int apply(int Ns, double t, Pointer y, Pointer ydot, Pointer yS, Pointer ySdot, Pointer user_data, Pointer tmp1, Pointer tmp2);
	};
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public interface CVSensRhs1Fn extends Callback {
		int apply(int Ns, double t, Pointer y, Pointer ydot, int iS, Pointer yS, Pointer ySdot, Pointer user_data, Pointer tmp1, Pointer tmp2);
	};
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public interface CVQuadSensRhsFn extends Callback {
		int apply(int Ns, double t, Pointer y, Pointer yS, Pointer yQdot, Pointer yQSdot, Pointer user_data, Pointer tmp, Pointer tmpQ);
	};
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public interface CVRhsFnB extends Callback {
		int apply(double t, Pointer y, Pointer yB, Pointer yBdot, Pointer user_dataB);
	};
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public interface CVRhsFnBS extends Callback {
		int apply(double t, Pointer y, Pointer yS, Pointer yB, Pointer yBdot, Pointer user_dataB);
	};
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public interface CVQuadRhsFnB extends Callback {
		int apply(double t, Pointer y, Pointer yB, Pointer qBdot, Pointer user_dataB);
	};
	/** <i>native declaration : include\cvodes\cvodes.h</i> */
	public interface CVQuadRhsFnBS extends Callback {
		int apply(double t, Pointer y, Pointer yS, Pointer yB, Pointer qBdot, Pointer user_dataB);
	};
	/** <i>native declaration : include\cvodes\cvodes_bbdpre.h</i> */
	public interface CVLocalFn extends Callback {
		int apply(long Nlocal, double t, Pointer y, Pointer g, Pointer user_data);
	};
	/** <i>native declaration : include\cvodes\cvodes_bbdpre.h</i> */
	public interface CVCommFn extends Callback {
		int apply(long Nlocal, double t, Pointer y, Pointer user_data);
	};
	/** <i>native declaration : include\cvodes\cvodes_bbdpre.h</i> */
	public interface CVLocalFnB extends Callback {
		int apply(long NlocalB, double t, Pointer y, Pointer yB, Pointer gB, Pointer user_dataB);
	};
	/** <i>native declaration : include\cvodes\cvodes_bbdpre.h</i> */
	public interface CVCommFnB extends Callback {
		int apply(long NlocalB, double t, Pointer y, Pointer yB, Pointer user_dataB);
	};
	/**
	 * =================================================================<br>
	 * CVLS Exported functions<br>
	 * =================================================================<br>
	 * Original signature : <code>int CVodeSetLinearSolver(void*, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:62</i><br>
	 * @deprecated use the safer methods {@link #CVodeSetLinearSolver(Pointer, SUNLinearSolver, SUNMatrix)} and {@link #CVodeSetLinearSolver(Pointer, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int CVodeSetLinearSolver(Pointer cvode_mem, Pointer LS, Pointer A);
	/**
	 * =================================================================<br>
	 * CVLS Exported functions<br>
	 * =================================================================<br>
	 * Original signature : <code>int CVodeSetLinearSolver(void*, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:62</i>
	 */
	int CVodeSetLinearSolver(Pointer cvode_mem, SUNLinearSolver LS, SUNMatrix A);
	/**
	 * -----------------------------------------------------------------<br>
	 * Optional inputs to the CVLS linear solver interface<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int CVodeSetJacFn(void*, CVLsJacFn)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:69</i>
	 */
	int CVodeSetJacFn(Pointer cvode_mem, CVLsJacFn jac);
	/**
	 * Original signature : <code>int CVodeSetJacEvalFrequency(void*, long long)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:70</i>
	 */
	int CVodeSetJacEvalFrequency(Pointer cvode_mem, long msbj);
	/**
	 * Original signature : <code>int CVodeSetLinearSolutionScaling(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:71</i>
	 */
	int CVodeSetLinearSolutionScaling(Pointer cvode_mem, int onoff);
	/**
	 * Original signature : <code>int CVodeSetDeltaGammaMaxBadJac(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:73</i>
	 */
	int CVodeSetDeltaGammaMaxBadJac(Pointer cvode_mem, double dgmax_jbad);
	/**
	 * Original signature : <code>int CVodeSetEpsLin(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:75</i>
	 */
	int CVodeSetEpsLin(Pointer cvode_mem, double eplifac);
	/**
	 * Original signature : <code>int CVodeSetLSNormFactor(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:76</i>
	 */
	int CVodeSetLSNormFactor(Pointer arkode_mem, double nrmfac);
	/**
	 * Original signature : <code>int CVodeSetPreconditioner(void*, CVLsPrecSetupFn, CVLsPrecSolveFn)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:77</i>
	 */
	int CVodeSetPreconditioner(Pointer cvode_mem, CVLsPrecSetupFn pset, CVLsPrecSolveFn psolve);
	/**
	 * Original signature : <code>int CVodeSetJacTimes(void*, CVLsJacTimesSetupFn, CVLsJacTimesVecFn)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:79</i>
	 */
	int CVodeSetJacTimes(Pointer cvode_mem, CVLsJacTimesSetupFn jtsetup, CVLsJacTimesVecFn jtimes);
	/**
	 * Original signature : <code>int CVodeSetLinSysFn(void*, CVLsLinSysFn)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:81</i>
	 */
	int CVodeSetLinSysFn(Pointer cvode_mem, CVLsLinSysFn linsys);
	/**
	 * -----------------------------------------------------------------<br>
	 * Optional outputs from the CVLS linear solver interface<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int CVodeGetJac(void*, SUNMatrix*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:87</i><br>
	 * @deprecated use the safer method {@link #CVodeGetJac(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeGetJac(Pointer cvode_mem, Pointer J);
	/**
	 * -----------------------------------------------------------------<br>
	 * Optional outputs from the CVLS linear solver interface<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int CVodeGetJac(void*, SUNMatrix*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:87</i>
	 */
	int CVodeGetJac(Pointer cvode_mem, PointerByReference J);
	/**
	 * Original signature : <code>int CVodeGetJacTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:88</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetJacTime(Pointer, DoubleBuffer)} and {@link #CVodeGetJacTime(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int CVodeGetJacTime(Pointer cvode_mem, DoubleByReference t_J);
	/**
	 * Original signature : <code>int CVodeGetJacTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:88</i>
	 */
	int CVodeGetJacTime(Pointer cvode_mem, DoubleBuffer t_J);
	/**
	 * Original signature : <code>int CVodeGetJacNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:89</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetJacNumSteps(Pointer, LongBuffer)} and {@link #CVodeGetJacNumSteps(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetJacNumSteps(Pointer cvode_mem, LongByReference nst_J);
	/**
	 * Original signature : <code>int CVodeGetJacNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:89</i>
	 */
	int CVodeGetJacNumSteps(Pointer cvode_mem, LongBuffer nst_J);
	/**
	 * Original signature : <code>int CVodeGetLinWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:90</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetLinWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #CVodeGetLinWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetLinWorkSpace(Pointer cvode_mem, LongByReference lenrwLS, LongByReference leniwLS);
	/**
	 * Original signature : <code>int CVodeGetLinWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:90</i>
	 */
	int CVodeGetLinWorkSpace(Pointer cvode_mem, LongBuffer lenrwLS, LongBuffer leniwLS);
	/**
	 * Original signature : <code>int CVodeGetNumJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:92</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumJacEvals(Pointer, LongBuffer)} and {@link #CVodeGetNumJacEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumJacEvals(Pointer cvode_mem, LongByReference njevals);
	/**
	 * Original signature : <code>int CVodeGetNumJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:92</i>
	 */
	int CVodeGetNumJacEvals(Pointer cvode_mem, LongBuffer njevals);
	/**
	 * Original signature : <code>int CVodeGetNumPrecEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:93</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumPrecEvals(Pointer, LongBuffer)} and {@link #CVodeGetNumPrecEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumPrecEvals(Pointer cvode_mem, LongByReference npevals);
	/**
	 * Original signature : <code>int CVodeGetNumPrecEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:93</i>
	 */
	int CVodeGetNumPrecEvals(Pointer cvode_mem, LongBuffer npevals);
	/**
	 * Original signature : <code>int CVodeGetNumPrecSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:94</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumPrecSolves(Pointer, LongBuffer)} and {@link #CVodeGetNumPrecSolves(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumPrecSolves(Pointer cvode_mem, LongByReference npsolves);
	/**
	 * Original signature : <code>int CVodeGetNumPrecSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:94</i>
	 */
	int CVodeGetNumPrecSolves(Pointer cvode_mem, LongBuffer npsolves);
	/**
	 * Original signature : <code>int CVodeGetNumLinIters(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:95</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumLinIters(Pointer, LongBuffer)} and {@link #CVodeGetNumLinIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumLinIters(Pointer cvode_mem, LongByReference nliters);
	/**
	 * Original signature : <code>int CVodeGetNumLinIters(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:95</i>
	 */
	int CVodeGetNumLinIters(Pointer cvode_mem, LongBuffer nliters);
	/**
	 * Original signature : <code>int CVodeGetNumLinConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:96</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumLinConvFails(Pointer, LongBuffer)} and {@link #CVodeGetNumLinConvFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumLinConvFails(Pointer cvode_mem, LongByReference nlcfails);
	/**
	 * Original signature : <code>int CVodeGetNumLinConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:96</i>
	 */
	int CVodeGetNumLinConvFails(Pointer cvode_mem, LongBuffer nlcfails);
	/**
	 * Original signature : <code>int CVodeGetNumJTSetupEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:97</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumJTSetupEvals(Pointer, LongBuffer)} and {@link #CVodeGetNumJTSetupEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumJTSetupEvals(Pointer cvode_mem, LongByReference njtsetups);
	/**
	 * Original signature : <code>int CVodeGetNumJTSetupEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:97</i>
	 */
	int CVodeGetNumJTSetupEvals(Pointer cvode_mem, LongBuffer njtsetups);
	/**
	 * Original signature : <code>int CVodeGetNumJtimesEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:98</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumJtimesEvals(Pointer, LongBuffer)} and {@link #CVodeGetNumJtimesEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumJtimesEvals(Pointer cvode_mem, LongByReference njvevals);
	/**
	 * Original signature : <code>int CVodeGetNumJtimesEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:98</i>
	 */
	int CVodeGetNumJtimesEvals(Pointer cvode_mem, LongBuffer njvevals);
	/**
	 * Original signature : <code>int CVodeGetNumLinRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:99</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumLinRhsEvals(Pointer, LongBuffer)} and {@link #CVodeGetNumLinRhsEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumLinRhsEvals(Pointer cvode_mem, LongByReference nfevalsLS);
	/**
	 * Original signature : <code>int CVodeGetNumLinRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:99</i>
	 */
	int CVodeGetNumLinRhsEvals(Pointer cvode_mem, LongBuffer nfevalsLS);
	/**
	 * Original signature : <code>int CVodeGetLinSolveStats(void*, long long*, long long*, long long*, long long*, long long*, long long*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:100</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetLinSolveStats(Pointer, LongBuffer, LongBuffer, LongBuffer, LongBuffer, LongBuffer, LongBuffer, LongBuffer, LongBuffer)} and {@link #CVodeGetLinSolveStats(Pointer, LongByReference, LongByReference, LongByReference, LongByReference, LongByReference, LongByReference, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetLinSolveStats(Pointer cvode_mem, LongByReference njevals, LongByReference nfevalsLS, LongByReference nliters, LongByReference nlcfails, LongByReference npevals, LongByReference npsolves, LongByReference njtsetups, LongByReference njtimes);
	/**
	 * Original signature : <code>int CVodeGetLinSolveStats(void*, long long*, long long*, long long*, long long*, long long*, long long*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:100</i>
	 */
	int CVodeGetLinSolveStats(Pointer cvode_mem, LongBuffer njevals, LongBuffer nfevalsLS, LongBuffer nliters, LongBuffer nlcfails, LongBuffer npevals, LongBuffer npsolves, LongBuffer njtsetups, LongBuffer njtimes);
	/**
	 * Original signature : <code>int CVodeGetLastLinFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:105</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetLastLinFlag(Pointer, LongBuffer)} and {@link #CVodeGetLastLinFlag(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetLastLinFlag(Pointer cvode_mem, LongByReference flag);
	/**
	 * Original signature : <code>int CVodeGetLastLinFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:105</i>
	 */
	int CVodeGetLastLinFlag(Pointer cvode_mem, LongBuffer flag);
	/**
	 * Original signature : <code>char* CVodeGetLinReturnFlagName(long long)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:106</i>
	 */
	Pointer CVodeGetLinReturnFlagName(long flag);
	/**
	 * =================================================================<br>
	 * CVLS Exported functions<br>
	 * =================================================================<br>
	 * Original signature : <code>int CVodeSetLinearSolverB(void*, int, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:174</i><br>
	 * @deprecated use the safer methods {@link #CVodeSetLinearSolverB(Pointer, int, SUNLinearSolver, SUNMatrix)} and {@link #CVodeSetLinearSolverB(Pointer, int, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int CVodeSetLinearSolverB(Pointer cvode_mem, int which, Pointer LS, Pointer A);
	/**
	 * =================================================================<br>
	 * CVLS Exported functions<br>
	 * =================================================================<br>
	 * Original signature : <code>int CVodeSetLinearSolverB(void*, int, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:174</i>
	 */
	int CVodeSetLinearSolverB(Pointer cvode_mem, int which, SUNLinearSolver LS, SUNMatrix A);
	/**
	 * -----------------------------------------------------------------<br>
	 * Each CVodeSet***B or CVodeSet***BS function below links the<br>
	 * main CVODES integrator with the corresponding CVSLS<br>
	 * optional input function for the backward integration.<br>
	 * The 'which' argument is the int returned by CVodeCreateB.<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int CVodeSetJacFnB(void*, int, CVLsJacFnB)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:184</i>
	 */
	int CVodeSetJacFnB(Pointer cvode_mem, int which, CVLsJacFnB jacB);
	/**
	 * Original signature : <code>int CVodeSetJacFnBS(void*, int, CVLsJacFnBS)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:185</i>
	 */
	int CVodeSetJacFnBS(Pointer cvode_mem, int which, CVLsJacFnBS jacBS);
	/**
	 * Original signature : <code>int CVodeSetEpsLinB(void*, int, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:188</i>
	 */
	int CVodeSetEpsLinB(Pointer cvode_mem, int which, double eplifacB);
	/**
	 * Original signature : <code>int CVodeSetLSNormFactorB(void*, int, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:191</i>
	 */
	int CVodeSetLSNormFactorB(Pointer arkode_mem, int which, double nrmfacB);
	/**
	 * Original signature : <code>int CVodeSetLinearSolutionScalingB(void*, int, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:194</i>
	 */
	int CVodeSetLinearSolutionScalingB(Pointer cvode_mem, int which, int onoffB);
	/**
	 * Original signature : <code>int CVodeSetPreconditionerB(void*, int, CVLsPrecSetupFnB, CVLsPrecSolveFnB)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:197</i>
	 */
	int CVodeSetPreconditionerB(Pointer cvode_mem, int which, CVLsPrecSetupFnB psetB, CVLsPrecSolveFnB psolveB);
	/**
	 * Original signature : <code>int CVodeSetPreconditionerBS(void*, int, CVLsPrecSetupFnBS, CVLsPrecSolveFnBS)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:200</i>
	 */
	int CVodeSetPreconditionerBS(Pointer cvode_mem, int which, CVLsPrecSetupFnBS psetBS, CVLsPrecSolveFnBS psolveBS);
	/**
	 * Original signature : <code>int CVodeSetJacTimesB(void*, int, CVLsJacTimesSetupFnB, CVLsJacTimesVecFnB)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:204</i>
	 */
	int CVodeSetJacTimesB(Pointer cvode_mem, int which, CVLsJacTimesSetupFnB jtsetupB, CVLsJacTimesVecFnB jtimesB);
	/**
	 * Original signature : <code>int CVodeSetJacTimesBS(void*, int, CVLsJacTimesSetupFnBS, CVLsJacTimesVecFnBS)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:207</i>
	 */
	int CVodeSetJacTimesBS(Pointer cvode_mem, int which, CVLsJacTimesSetupFnBS jtsetupBS, CVLsJacTimesVecFnBS jtimesBS);
	/**
	 * Original signature : <code>int CVodeSetLinSysFnB(void*, int, CVLsLinSysFnB)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:211</i>
	 */
	int CVodeSetLinSysFnB(Pointer cvode_mem, int which, CVLsLinSysFnB linsys);
	/**
	 * Original signature : <code>int CVodeSetLinSysFnBS(void*, int, CVLsLinSysFnBS)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_ls.h:213</i>
	 */
	int CVodeSetLinSysFnBS(Pointer cvode_mem, int which, CVLsLinSysFnBS linsys);
	/**
	 * Projection initialization functions<br>
	 * Original signature : <code>int CVodeSetProjFn(void*, CVProjFn)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_proj.h:18</i>
	 */
	int CVodeSetProjFn(Pointer cvode_mem, CVProjFn pfun);
	/**
	 * Optional input functions<br>
	 * Original signature : <code>int CVodeSetProjErrEst(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_proj.h:21</i>
	 */
	int CVodeSetProjErrEst(Pointer cvode_mem, int onoff);
	/**
	 * Original signature : <code>int CVodeSetProjFrequency(void*, long long)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_proj.h:22</i>
	 */
	int CVodeSetProjFrequency(Pointer cvode_mem, long proj_freq);
	/**
	 * Original signature : <code>int CVodeSetMaxNumProjFails(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_proj.h:23</i>
	 */
	int CVodeSetMaxNumProjFails(Pointer cvode_mem, int max_fails);
	/**
	 * Original signature : <code>int CVodeSetEpsProj(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_proj.h:24</i>
	 */
	int CVodeSetEpsProj(Pointer cvode_mem, double eps);
	/**
	 * Original signature : <code>int CVodeSetProjFailEta(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_proj.h:25</i>
	 */
	int CVodeSetProjFailEta(Pointer cvode_mem, double eta);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int CVodeGetNumProjEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_proj.h:28</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumProjEvals(Pointer, LongBuffer)} and {@link #CVodeGetNumProjEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumProjEvals(Pointer cvode_mem, LongByReference nproj);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int CVodeGetNumProjEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_proj.h:28</i>
	 */
	int CVodeGetNumProjEvals(Pointer cvode_mem, LongBuffer nproj);
	/**
	 * Original signature : <code>int CVodeGetNumProjFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_proj.h:29</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumProjFails(Pointer, LongBuffer)} and {@link #CVodeGetNumProjFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumProjFails(Pointer cvode_mem, LongByReference nprf);
	/**
	 * Original signature : <code>int CVodeGetNumProjFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_proj.h:29</i>
	 */
	int CVodeGetNumProjFails(Pointer cvode_mem, LongBuffer nprf);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>void* CVodeCreate(int, SUNContext)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:174</i><br>
	 * @deprecated use the safer methods {@link #CVodeCreate(int, SUNContext)} and {@link #CVodeCreate(int, Pointer)} instead
	 */
	@Deprecated 
	Pointer CVodeCreate(int lmm, Pointer sunctx);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>void* CVodeCreate(int, SUNContext)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:174</i>
	 */
	Pointer CVodeCreate(int lmm, SUNContext sunctx);
	/**
	 * Original signature : <code>int CVodeInit(void*, CVRhsFn, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:176</i><br>
	 * @deprecated use the safer methods {@link #CVodeInit(Pointer, CVRhsFn, double, N_Vector)} and {@link #CVodeInit(Pointer, CVRhsFn, double, Pointer)} instead
	 */
	@Deprecated 
	int CVodeInit(Pointer cvode_mem, CVRhsFn f, double t0, Pointer y0);
	/**
	 * Original signature : <code>int CVodeInit(void*, CVRhsFn, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:176</i>
	 */
	int CVodeInit(Pointer cvode_mem, CVRhsFn f, double t0, N_Vector y0);
	/**
	 * Original signature : <code>int CVodeReInit(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:178</i><br>
	 * @deprecated use the safer methods {@link #CVodeReInit(Pointer, double, N_Vector)} and {@link #CVodeReInit(Pointer, double, Pointer)} instead
	 */
	@Deprecated 
	int CVodeReInit(Pointer cvode_mem, double t0, Pointer y0);
	/**
	 * Original signature : <code>int CVodeReInit(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:178</i>
	 */
	int CVodeReInit(Pointer cvode_mem, double t0, N_Vector y0);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int CVodeSStolerances(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:181</i>
	 */
	int CVodeSStolerances(Pointer cvode_mem, double reltol, double abstol);
	/**
	 * Original signature : <code>int CVodeSVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:183</i><br>
	 * @deprecated use the safer methods {@link #CVodeSVtolerances(Pointer, double, N_Vector)} and {@link #CVodeSVtolerances(Pointer, double, Pointer)} instead
	 */
	@Deprecated 
	int CVodeSVtolerances(Pointer cvode_mem, double reltol, Pointer abstol);
	/**
	 * Original signature : <code>int CVodeSVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:183</i>
	 */
	int CVodeSVtolerances(Pointer cvode_mem, double reltol, N_Vector abstol);
	/**
	 * Original signature : <code>int CVodeWFtolerances(void*, CVEwtFn)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:185</i>
	 */
	int CVodeWFtolerances(Pointer cvode_mem, CVEwtFn efun);
	/**
	 * Optional input functions<br>
	 * Original signature : <code>int CVodeSetConstraints(void*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:189</i><br>
	 * @deprecated use the safer methods {@link #CVodeSetConstraints(Pointer, N_Vector)} and {@link #CVodeSetConstraints(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int CVodeSetConstraints(Pointer cvode_mem, Pointer constraints);
	/**
	 * Optional input functions<br>
	 * Original signature : <code>int CVodeSetConstraints(void*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:189</i>
	 */
	int CVodeSetConstraints(Pointer cvode_mem, N_Vector constraints);
	/**
	 * Original signature : <code>int CVodeSetDeltaGammaMaxLSetup(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:190</i>
	 */
	int CVodeSetDeltaGammaMaxLSetup(Pointer cvode_mem, double dgmax_lsetup);
	/**
	 * Original signature : <code>int CVodeSetInitStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:192</i>
	 */
	int CVodeSetInitStep(Pointer cvode_mem, double hin);
	/**
	 * Original signature : <code>int CVodeSetLSetupFrequency(void*, long long)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:193</i>
	 */
	int CVodeSetLSetupFrequency(Pointer cvode_mem, long msbp);
	/**
	 * Original signature : <code>int CVodeSetMaxConvFails(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:194</i>
	 */
	int CVodeSetMaxConvFails(Pointer cvode_mem, int maxncf);
	/**
	 * Original signature : <code>int CVodeSetMaxErrTestFails(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:195</i>
	 */
	int CVodeSetMaxErrTestFails(Pointer cvode_mem, int maxnef);
	/**
	 * Original signature : <code>int CVodeSetMaxHnilWarns(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:196</i>
	 */
	int CVodeSetMaxHnilWarns(Pointer cvode_mem, int mxhnil);
	/**
	 * Original signature : <code>int CVodeSetMaxNonlinIters(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:197</i>
	 */
	int CVodeSetMaxNonlinIters(Pointer cvode_mem, int maxcor);
	/**
	 * Original signature : <code>int CVodeSetMaxNumSteps(void*, long long)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:198</i>
	 */
	int CVodeSetMaxNumSteps(Pointer cvode_mem, long mxsteps);
	/**
	 * Original signature : <code>int CVodeSetMaxOrd(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:199</i>
	 */
	int CVodeSetMaxOrd(Pointer cvode_mem, int maxord);
	/**
	 * Original signature : <code>int CVodeSetMaxStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:200</i>
	 */
	int CVodeSetMaxStep(Pointer cvode_mem, double hmax);
	/**
	 * Original signature : <code>int CVodeSetMinStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:201</i>
	 */
	int CVodeSetMinStep(Pointer cvode_mem, double hmin);
	/**
	 * Original signature : <code>int CVodeSetMonitorFn(void*, CVMonitorFn)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:202</i>
	 */
	int CVodeSetMonitorFn(Pointer cvode_mem, CVMonitorFn fn);
	/**
	 * Original signature : <code>int CVodeSetMonitorFrequency(void*, long long)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:203</i>
	 */
	int CVodeSetMonitorFrequency(Pointer cvode_mem, long nst);
	/**
	 * Original signature : <code>int CVodeSetNlsRhsFn(void*, CVRhsFn)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:204</i>
	 */
	int CVodeSetNlsRhsFn(Pointer cvode_mem, CVRhsFn f);
	/**
	 * Original signature : <code>int CVodeSetNonlinConvCoef(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:205</i>
	 */
	int CVodeSetNonlinConvCoef(Pointer cvode_mem, double nlscoef);
	/**
	 * Original signature : <code>int CVodeSetNonlinearSolver(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:206</i><br>
	 * @deprecated use the safer methods {@link #CVodeSetNonlinearSolver(Pointer, SUNNonlinearSolver)} and {@link #CVodeSetNonlinearSolver(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int CVodeSetNonlinearSolver(Pointer cvode_mem, Pointer NLS);
	/**
	 * Original signature : <code>int CVodeSetNonlinearSolver(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:206</i>
	 */
	int CVodeSetNonlinearSolver(Pointer cvode_mem, SUNNonlinearSolver NLS);
	/**
	 * Original signature : <code>int CVodeSetStabLimDet(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:208</i>
	 */
	int CVodeSetStabLimDet(Pointer cvode_mem, int stldet);
	/**
	 * Original signature : <code>int CVodeSetStopTime(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:209</i>
	 */
	int CVodeSetStopTime(Pointer cvode_mem, double tstop);
	/**
	 * Original signature : <code>int CVodeSetInterpolateStopTime(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:210</i>
	 */
	int CVodeSetInterpolateStopTime(Pointer cvode_mem, int interp);
	/**
	 * Original signature : <code>int CVodeClearStopTime(void*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:212</i>
	 */
	int CVodeClearStopTime(Pointer cvode_mem);
	/**
	 * Original signature : <code>int CVodeSetUserData(void*, void*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:213</i>
	 */
	int CVodeSetUserData(Pointer cvode_mem, Pointer user_data);
	/**
	 * Optional step adaptivity input functions<br>
	 * Original signature : <code>int CVodeSetEtaFixedStepBounds(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:216</i>
	 */
	int CVodeSetEtaFixedStepBounds(Pointer cvode_mem, double eta_min_fx, double eta_max_fx);
	/**
	 * Original signature : <code>int CVodeSetEtaMaxFirstStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:219</i>
	 */
	int CVodeSetEtaMaxFirstStep(Pointer cvode_mem, double eta_max_fs);
	/**
	 * Original signature : <code>int CVodeSetEtaMaxEarlyStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:221</i>
	 */
	int CVodeSetEtaMaxEarlyStep(Pointer cvode_mem, double eta_max_es);
	/**
	 * Original signature : <code>int CVodeSetNumStepsEtaMaxEarlyStep(void*, long long)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:223</i>
	 */
	int CVodeSetNumStepsEtaMaxEarlyStep(Pointer cvode_mem, long small_nst);
	/**
	 * Original signature : <code>int CVodeSetEtaMax(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:225</i>
	 */
	int CVodeSetEtaMax(Pointer cvode_mem, double eta_max_gs);
	/**
	 * Original signature : <code>int CVodeSetEtaMin(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:227</i>
	 */
	int CVodeSetEtaMin(Pointer cvode_mem, double eta_min);
	/**
	 * Original signature : <code>int CVodeSetEtaMinErrFail(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:229</i>
	 */
	int CVodeSetEtaMinErrFail(Pointer cvode_mem, double eta_min_ef);
	/**
	 * Original signature : <code>int CVodeSetEtaMaxErrFail(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:231</i>
	 */
	int CVodeSetEtaMaxErrFail(Pointer cvode_mem, double eta_max_ef);
	/**
	 * Original signature : <code>int CVodeSetNumFailsEtaMaxErrFail(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:233</i>
	 */
	int CVodeSetNumFailsEtaMaxErrFail(Pointer cvode_mem, int small_nef);
	/**
	 * Original signature : <code>int CVodeSetEtaConvFail(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:235</i>
	 */
	int CVodeSetEtaConvFail(Pointer cvode_mem, double eta_cf);
	/**
	 * Rootfinding initialization function<br>
	 * Original signature : <code>int CVodeRootInit(void*, int, CVRootFn)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:239</i>
	 */
	int CVodeRootInit(Pointer cvode_mem, int nrtfn, CVRootFn g);
	/**
	 * Rootfinding optional input functions<br>
	 * Original signature : <code>int CVodeSetRootDirection(void*, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:242</i><br>
	 * @deprecated use the safer methods {@link #CVodeSetRootDirection(Pointer, IntBuffer)} and {@link #CVodeSetRootDirection(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int CVodeSetRootDirection(Pointer cvode_mem, IntByReference rootdir);
	/**
	 * Rootfinding optional input functions<br>
	 * Original signature : <code>int CVodeSetRootDirection(void*, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:242</i>
	 */
	int CVodeSetRootDirection(Pointer cvode_mem, IntBuffer rootdir);
	/**
	 * Original signature : <code>int CVodeSetNoInactiveRootWarn(void*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:243</i>
	 */
	int CVodeSetNoInactiveRootWarn(Pointer cvode_mem);
	/**
	 * Solver function<br>
	 * Original signature : <code>int CVode(void*, sunrealtype, N_Vector, sunrealtype*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:246</i><br>
	 * @deprecated use the safer methods {@link #CVode(Pointer, double, N_Vector, DoubleBuffer, int)} and {@link #CVode(Pointer, double, Pointer, DoubleByReference, int)} instead
	 */
	@Deprecated 
	int CVode(Pointer cvode_mem, double tout, Pointer yout, DoubleByReference tret, int itask);
	/**
	 * Solver function<br>
	 * Original signature : <code>int CVode(void*, sunrealtype, N_Vector, sunrealtype*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:246</i>
	 */
	int CVode(Pointer cvode_mem, double tout, N_Vector yout, DoubleBuffer tret, int itask);
	/**
	 * Utility functions to update/compute y based on ycor<br>
	 * Original signature : <code>int CVodeComputeState(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:250</i><br>
	 * @deprecated use the safer methods {@link #CVodeComputeState(Pointer, N_Vector, N_Vector)} and {@link #CVodeComputeState(Pointer, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int CVodeComputeState(Pointer cvode_mem, Pointer ycor, Pointer y);
	/**
	 * Utility functions to update/compute y based on ycor<br>
	 * Original signature : <code>int CVodeComputeState(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:250</i>
	 */
	int CVodeComputeState(Pointer cvode_mem, N_Vector ycor, N_Vector y);
	/**
	 * Original signature : <code>int CVodeComputeStateSens(void*, N_Vector*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:251</i><br>
	 * @deprecated use the safer method {@link #CVodeComputeStateSens(Pointer, PointerByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeComputeStateSens(Pointer cvode_mem, Pointer yScor, Pointer yS);
	/**
	 * Original signature : <code>int CVodeComputeStateSens(void*, N_Vector*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:251</i>
	 */
	int CVodeComputeStateSens(Pointer cvode_mem, PointerByReference yScor, PointerByReference yS);
	/**
	 * Original signature : <code>int CVodeComputeStateSens1(void*, int, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:253</i><br>
	 * @deprecated use the safer methods {@link #CVodeComputeStateSens1(Pointer, int, N_Vector, N_Vector)} and {@link #CVodeComputeStateSens1(Pointer, int, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int CVodeComputeStateSens1(Pointer cvode_mem, int idx, Pointer yScor1, Pointer yS1);
	/**
	 * Original signature : <code>int CVodeComputeStateSens1(void*, int, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:253</i>
	 */
	int CVodeComputeStateSens1(Pointer cvode_mem, int idx, N_Vector yScor1, N_Vector yS1);
	/**
	 * Dense output function<br>
	 * Original signature : <code>int CVodeGetDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:257</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetDky(Pointer, double, int, N_Vector)} and {@link #CVodeGetDky(Pointer, double, int, Pointer)} instead
	 */
	@Deprecated 
	int CVodeGetDky(Pointer cvode_mem, double t, int k, Pointer dky);
	/**
	 * Dense output function<br>
	 * Original signature : <code>int CVodeGetDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:257</i>
	 */
	int CVodeGetDky(Pointer cvode_mem, double t, int k, N_Vector dky);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int CVodeGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:261</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #CVodeGetWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetWorkSpace(Pointer cvode_mem, LongByReference lenrw, LongByReference leniw);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int CVodeGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:261</i>
	 */
	int CVodeGetWorkSpace(Pointer cvode_mem, LongBuffer lenrw, LongBuffer leniw);
	/**
	 * Original signature : <code>int CVodeGetNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:263</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumSteps(Pointer, LongBuffer)} and {@link #CVodeGetNumSteps(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumSteps(Pointer cvode_mem, LongByReference nsteps);
	/**
	 * Original signature : <code>int CVodeGetNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:263</i>
	 */
	int CVodeGetNumSteps(Pointer cvode_mem, LongBuffer nsteps);
	/**
	 * Original signature : <code>int CVodeGetNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:264</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumRhsEvals(Pointer, LongBuffer)} and {@link #CVodeGetNumRhsEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumRhsEvals(Pointer cvode_mem, LongByReference nfevals);
	/**
	 * Original signature : <code>int CVodeGetNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:264</i>
	 */
	int CVodeGetNumRhsEvals(Pointer cvode_mem, LongBuffer nfevals);
	/**
	 * Original signature : <code>int CVodeGetNumLinSolvSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:265</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumLinSolvSetups(Pointer, LongBuffer)} and {@link #CVodeGetNumLinSolvSetups(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumLinSolvSetups(Pointer cvode_mem, LongByReference nlinsetups);
	/**
	 * Original signature : <code>int CVodeGetNumLinSolvSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:265</i>
	 */
	int CVodeGetNumLinSolvSetups(Pointer cvode_mem, LongBuffer nlinsetups);
	/**
	 * Original signature : <code>int CVodeGetNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:267</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumErrTestFails(Pointer, LongBuffer)} and {@link #CVodeGetNumErrTestFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumErrTestFails(Pointer cvode_mem, LongByReference netfails);
	/**
	 * Original signature : <code>int CVodeGetNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:267</i>
	 */
	int CVodeGetNumErrTestFails(Pointer cvode_mem, LongBuffer netfails);
	/**
	 * Original signature : <code>int CVodeGetLastOrder(void*, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:268</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetLastOrder(Pointer, IntBuffer)} and {@link #CVodeGetLastOrder(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int CVodeGetLastOrder(Pointer cvode_mem, IntByReference qlast);
	/**
	 * Original signature : <code>int CVodeGetLastOrder(void*, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:268</i>
	 */
	int CVodeGetLastOrder(Pointer cvode_mem, IntBuffer qlast);
	/**
	 * Original signature : <code>int CVodeGetCurrentOrder(void*, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:269</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetCurrentOrder(Pointer, IntBuffer)} and {@link #CVodeGetCurrentOrder(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int CVodeGetCurrentOrder(Pointer cvode_mem, IntByReference qcur);
	/**
	 * Original signature : <code>int CVodeGetCurrentOrder(void*, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:269</i>
	 */
	int CVodeGetCurrentOrder(Pointer cvode_mem, IntBuffer qcur);
	/**
	 * Original signature : <code>int CVodeGetCurrentGamma(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:270</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetCurrentGamma(Pointer, DoubleBuffer)} and {@link #CVodeGetCurrentGamma(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int CVodeGetCurrentGamma(Pointer cvode_mem, DoubleByReference gamma);
	/**
	 * Original signature : <code>int CVodeGetCurrentGamma(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:270</i>
	 */
	int CVodeGetCurrentGamma(Pointer cvode_mem, DoubleBuffer gamma);
	/**
	 * Original signature : <code>int CVodeGetNumStabLimOrderReds(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:271</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumStabLimOrderReds(Pointer, LongBuffer)} and {@link #CVodeGetNumStabLimOrderReds(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumStabLimOrderReds(Pointer cvode_mem, LongByReference nslred);
	/**
	 * Original signature : <code>int CVodeGetNumStabLimOrderReds(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:271</i>
	 */
	int CVodeGetNumStabLimOrderReds(Pointer cvode_mem, LongBuffer nslred);
	/**
	 * Original signature : <code>int CVodeGetActualInitStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:273</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetActualInitStep(Pointer, DoubleBuffer)} and {@link #CVodeGetActualInitStep(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int CVodeGetActualInitStep(Pointer cvode_mem, DoubleByReference hinused);
	/**
	 * Original signature : <code>int CVodeGetActualInitStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:273</i>
	 */
	int CVodeGetActualInitStep(Pointer cvode_mem, DoubleBuffer hinused);
	/**
	 * Original signature : <code>int CVodeGetLastStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:274</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetLastStep(Pointer, DoubleBuffer)} and {@link #CVodeGetLastStep(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int CVodeGetLastStep(Pointer cvode_mem, DoubleByReference hlast);
	/**
	 * Original signature : <code>int CVodeGetLastStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:274</i>
	 */
	int CVodeGetLastStep(Pointer cvode_mem, DoubleBuffer hlast);
	/**
	 * Original signature : <code>int CVodeGetCurrentStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:275</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetCurrentStep(Pointer, DoubleBuffer)} and {@link #CVodeGetCurrentStep(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int CVodeGetCurrentStep(Pointer cvode_mem, DoubleByReference hcur);
	/**
	 * Original signature : <code>int CVodeGetCurrentStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:275</i>
	 */
	int CVodeGetCurrentStep(Pointer cvode_mem, DoubleBuffer hcur);
	/**
	 * Original signature : <code>int CVodeGetCurrentState(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:276</i><br>
	 * @deprecated use the safer method {@link #CVodeGetCurrentState(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeGetCurrentState(Pointer cvode_mem, Pointer y);
	/**
	 * Original signature : <code>int CVodeGetCurrentState(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:276</i>
	 */
	int CVodeGetCurrentState(Pointer cvode_mem, PointerByReference y);
	/**
	 * Original signature : <code>int CVodeGetCurrentStateSens(void*, N_Vector**)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:277</i>
	 */
	int CVodeGetCurrentStateSens(Pointer cvode_mem, PointerByReference yS);
	/**
	 * Original signature : <code>int CVodeGetCurrentSensSolveIndex(void*, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:278</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetCurrentSensSolveIndex(Pointer, IntBuffer)} and {@link #CVodeGetCurrentSensSolveIndex(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int CVodeGetCurrentSensSolveIndex(Pointer cvode_mem, IntByReference index);
	/**
	 * Original signature : <code>int CVodeGetCurrentSensSolveIndex(void*, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:278</i>
	 */
	int CVodeGetCurrentSensSolveIndex(Pointer cvode_mem, IntBuffer index);
	/**
	 * Original signature : <code>int CVodeGetCurrentTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:279</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetCurrentTime(Pointer, DoubleBuffer)} and {@link #CVodeGetCurrentTime(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int CVodeGetCurrentTime(Pointer cvode_mem, DoubleByReference tcur);
	/**
	 * Original signature : <code>int CVodeGetCurrentTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:279</i>
	 */
	int CVodeGetCurrentTime(Pointer cvode_mem, DoubleBuffer tcur);
	/**
	 * Original signature : <code>int CVodeGetTolScaleFactor(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:280</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetTolScaleFactor(Pointer, DoubleBuffer)} and {@link #CVodeGetTolScaleFactor(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int CVodeGetTolScaleFactor(Pointer cvode_mem, DoubleByReference tolsfac);
	/**
	 * Original signature : <code>int CVodeGetTolScaleFactor(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:280</i>
	 */
	int CVodeGetTolScaleFactor(Pointer cvode_mem, DoubleBuffer tolsfac);
	/**
	 * Original signature : <code>int CVodeGetErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:281</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetErrWeights(Pointer, N_Vector)} and {@link #CVodeGetErrWeights(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int CVodeGetErrWeights(Pointer cvode_mem, Pointer eweight);
	/**
	 * Original signature : <code>int CVodeGetErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:281</i>
	 */
	int CVodeGetErrWeights(Pointer cvode_mem, N_Vector eweight);
	/**
	 * Original signature : <code>int CVodeGetEstLocalErrors(void*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:282</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetEstLocalErrors(Pointer, N_Vector)} and {@link #CVodeGetEstLocalErrors(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int CVodeGetEstLocalErrors(Pointer cvode_mem, Pointer ele);
	/**
	 * Original signature : <code>int CVodeGetEstLocalErrors(void*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:282</i>
	 */
	int CVodeGetEstLocalErrors(Pointer cvode_mem, N_Vector ele);
	/**
	 * Original signature : <code>int CVodeGetNumGEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:283</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumGEvals(Pointer, LongBuffer)} and {@link #CVodeGetNumGEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumGEvals(Pointer cvode_mem, LongByReference ngevals);
	/**
	 * Original signature : <code>int CVodeGetNumGEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:283</i>
	 */
	int CVodeGetNumGEvals(Pointer cvode_mem, LongBuffer ngevals);
	/**
	 * Original signature : <code>int CVodeGetRootInfo(void*, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:284</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetRootInfo(Pointer, IntBuffer)} and {@link #CVodeGetRootInfo(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int CVodeGetRootInfo(Pointer cvode_mem, IntByReference rootsfound);
	/**
	 * Original signature : <code>int CVodeGetRootInfo(void*, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:284</i>
	 */
	int CVodeGetRootInfo(Pointer cvode_mem, IntBuffer rootsfound);
	/**
	 * Original signature : <code>int CVodeGetIntegratorStats(void*, long long*, long long*, long long*, long long*, int*, int*, sunrealtype*, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:285</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetIntegratorStats(Pointer, LongBuffer, LongBuffer, LongBuffer, LongBuffer, IntBuffer, IntBuffer, DoubleBuffer, DoubleBuffer, DoubleBuffer, DoubleBuffer)} and {@link #CVodeGetIntegratorStats(Pointer, LongByReference, LongByReference, LongByReference, LongByReference, IntByReference, IntByReference, DoubleByReference, DoubleByReference, DoubleByReference, DoubleByReference)} instead
	 */
	@Deprecated 
	int CVodeGetIntegratorStats(Pointer cvode_mem, LongByReference nsteps, LongByReference nfevals, LongByReference nlinsetups, LongByReference netfails, IntByReference qlast, IntByReference qcur, DoubleByReference hinused, DoubleByReference hlast, DoubleByReference hcur, DoubleByReference tcur);
	/**
	 * Original signature : <code>int CVodeGetIntegratorStats(void*, long long*, long long*, long long*, long long*, int*, int*, sunrealtype*, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:285</i>
	 */
	int CVodeGetIntegratorStats(Pointer cvode_mem, LongBuffer nsteps, LongBuffer nfevals, LongBuffer nlinsetups, LongBuffer netfails, IntBuffer qlast, IntBuffer qcur, DoubleBuffer hinused, DoubleBuffer hlast, DoubleBuffer hcur, DoubleBuffer tcur);
	/**
	 * Original signature : <code>int CVodeGetNonlinearSystemData(void*, sunrealtype*, N_Vector*, N_Vector*, N_Vector*, sunrealtype*, sunrealtype*, N_Vector*, void**)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:289</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNonlinearSystemData(Pointer, DoubleBuffer, PointerByReference, PointerByReference, PointerByReference, DoubleBuffer, DoubleBuffer, PointerByReference, PointerByReference)} and {@link #CVodeGetNonlinearSystemData(Pointer, DoubleByReference, PointerByReference, PointerByReference, PointerByReference, DoubleByReference, DoubleByReference, PointerByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNonlinearSystemData(Pointer cvode_mem, DoubleByReference tcur, Pointer ypred, Pointer yn, Pointer fn, DoubleByReference gamma, DoubleByReference rl1, Pointer zn1, PointerByReference user_data);
	/**
	 * Original signature : <code>int CVodeGetNonlinearSystemData(void*, sunrealtype*, N_Vector*, N_Vector*, N_Vector*, sunrealtype*, sunrealtype*, N_Vector*, void**)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:289</i>
	 */
	int CVodeGetNonlinearSystemData(Pointer cvode_mem, DoubleBuffer tcur, PointerByReference ypred, PointerByReference yn, PointerByReference fn, DoubleBuffer gamma, DoubleBuffer rl1, PointerByReference zn1, PointerByReference user_data);
	/**
	 * Original signature : <code>int CVodeGetNonlinearSystemData(void*, sunrealtype*, N_Vector*, N_Vector*, N_Vector*, sunrealtype*, sunrealtype*, N_Vector*, void**)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:289</i>
	 */
	int CVodeGetNonlinearSystemData(Pointer cvode_mem, DoubleByReference tcur, PointerByReference ypred, PointerByReference yn, PointerByReference fn, DoubleByReference gamma, DoubleByReference rl1, PointerByReference zn1, PointerByReference user_data);
	/**
	 * Original signature : <code>int CVodeGetNonlinearSystemDataSens(void*, sunrealtype*, N_Vector**, N_Vector**, sunrealtype*, sunrealtype*, N_Vector**, void**)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:295</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNonlinearSystemDataSens(Pointer, DoubleBuffer, PointerByReference, PointerByReference, DoubleBuffer, DoubleBuffer, PointerByReference, PointerByReference)} and {@link #CVodeGetNonlinearSystemDataSens(Pointer, DoubleByReference, PointerByReference, PointerByReference, DoubleByReference, DoubleByReference, PointerByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNonlinearSystemDataSens(Pointer cvode_mem, DoubleByReference tcur, PointerByReference ySpred, PointerByReference ySn, DoubleByReference gamma, DoubleByReference rl1, PointerByReference zn1, PointerByReference user_data);
	/**
	 * Original signature : <code>int CVodeGetNonlinearSystemDataSens(void*, sunrealtype*, N_Vector**, N_Vector**, sunrealtype*, sunrealtype*, N_Vector**, void**)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:295</i>
	 */
	int CVodeGetNonlinearSystemDataSens(Pointer cvode_mem, DoubleBuffer tcur, PointerByReference ySpred, PointerByReference ySn, DoubleBuffer gamma, DoubleBuffer rl1, PointerByReference zn1, PointerByReference user_data);
	/**
	 * Original signature : <code>int CVodeGetNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:298</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumNonlinSolvIters(Pointer, LongBuffer)} and {@link #CVodeGetNumNonlinSolvIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumNonlinSolvIters(Pointer cvode_mem, LongByReference nniters);
	/**
	 * Original signature : <code>int CVodeGetNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:298</i>
	 */
	int CVodeGetNumNonlinSolvIters(Pointer cvode_mem, LongBuffer nniters);
	/**
	 * Original signature : <code>int CVodeGetNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:300</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumNonlinSolvConvFails(Pointer, LongBuffer)} and {@link #CVodeGetNumNonlinSolvConvFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumNonlinSolvConvFails(Pointer cvode_mem, LongByReference nnfails);
	/**
	 * Original signature : <code>int CVodeGetNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:300</i>
	 */
	int CVodeGetNumNonlinSolvConvFails(Pointer cvode_mem, LongBuffer nnfails);
	/**
	 * Original signature : <code>int CVodeGetNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:302</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNonlinSolvStats(Pointer, LongBuffer, LongBuffer)} and {@link #CVodeGetNonlinSolvStats(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNonlinSolvStats(Pointer cvode_mem, LongByReference nniters, LongByReference nnfails);
	/**
	 * Original signature : <code>int CVodeGetNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:302</i>
	 */
	int CVodeGetNonlinSolvStats(Pointer cvode_mem, LongBuffer nniters, LongBuffer nnfails);
	/**
	 * Original signature : <code>int CVodeGetNumStepSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:304</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumStepSolveFails(Pointer, LongBuffer)} and {@link #CVodeGetNumStepSolveFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumStepSolveFails(Pointer cvode_mem, LongByReference nncfails);
	/**
	 * Original signature : <code>int CVodeGetNumStepSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:304</i>
	 */
	int CVodeGetNumStepSolveFails(Pointer cvode_mem, LongBuffer nncfails);
	/**
	 * Original signature : <code>int CVodeGetUserData(void*, void**)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:306</i>
	 */
	int CVodeGetUserData(Pointer cvode_mem, PointerByReference user_data);
	/**
	 * Original signature : <code>int CVodePrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:307</i><br>
	 * @deprecated use the safer method {@link #CVodePrintAllStats(Pointer, PointerByReference, int)} instead
	 */
	@Deprecated 
	int CVodePrintAllStats(Pointer cvode_mem, Pointer outfile, int fmt);
	/**
	 * Original signature : <code>int CVodePrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:307</i>
	 */
	int CVodePrintAllStats(Pointer cvode_mem, PointerByReference outfile, int fmt);
	/**
	 * Original signature : <code>char* CVodeGetReturnFlagName(long long)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:309</i>
	 */
	Pointer CVodeGetReturnFlagName(long flag);
	/**
	 * Free function<br>
	 * Original signature : <code>void CVodeFree(void**)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:312</i>
	 */
	void CVodeFree(PointerByReference cvode_mem);
	/**
	 * CVLS interface function that depends on CVRhsFn<br>
	 * Original signature : <code>int CVodeSetJacTimesRhsFn(void*, CVRhsFn)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:315</i>
	 */
	int CVodeSetJacTimesRhsFn(Pointer cvode_mem, CVRhsFn jtimesRhsFn);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>int CVodeQuadInit(void*, CVQuadRhsFn, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:322</i><br>
	 * @deprecated use the safer methods {@link #CVodeQuadInit(Pointer, CVQuadRhsFn, N_Vector)} and {@link #CVodeQuadInit(Pointer, CVQuadRhsFn, Pointer)} instead
	 */
	@Deprecated 
	int CVodeQuadInit(Pointer cvode_mem, CVQuadRhsFn fQ, Pointer yQ0);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>int CVodeQuadInit(void*, CVQuadRhsFn, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:322</i>
	 */
	int CVodeQuadInit(Pointer cvode_mem, CVQuadRhsFn fQ, N_Vector yQ0);
	/**
	 * Original signature : <code>int CVodeQuadReInit(void*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:323</i><br>
	 * @deprecated use the safer methods {@link #CVodeQuadReInit(Pointer, N_Vector)} and {@link #CVodeQuadReInit(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int CVodeQuadReInit(Pointer cvode_mem, Pointer yQ0);
	/**
	 * Original signature : <code>int CVodeQuadReInit(void*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:323</i>
	 */
	int CVodeQuadReInit(Pointer cvode_mem, N_Vector yQ0);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int CVodeQuadSStolerances(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:326</i>
	 */
	int CVodeQuadSStolerances(Pointer cvode_mem, double reltolQ, double abstolQ);
	/**
	 * Original signature : <code>int CVodeQuadSVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:328</i><br>
	 * @deprecated use the safer methods {@link #CVodeQuadSVtolerances(Pointer, double, N_Vector)} and {@link #CVodeQuadSVtolerances(Pointer, double, Pointer)} instead
	 */
	@Deprecated 
	int CVodeQuadSVtolerances(Pointer cvode_mem, double reltolQ, Pointer abstolQ);
	/**
	 * Original signature : <code>int CVodeQuadSVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:328</i>
	 */
	int CVodeQuadSVtolerances(Pointer cvode_mem, double reltolQ, N_Vector abstolQ);
	/**
	 * Optional input specification functions<br>
	 * Original signature : <code>int CVodeSetQuadErrCon(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:332</i>
	 */
	int CVodeSetQuadErrCon(Pointer cvode_mem, int errconQ);
	/**
	 * Extraction and Dense Output Functions for Forward Problems<br>
	 * Original signature : <code>int CVodeGetQuad(void*, sunrealtype*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:335</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetQuad(Pointer, DoubleBuffer, N_Vector)} and {@link #CVodeGetQuad(Pointer, DoubleByReference, Pointer)} instead
	 */
	@Deprecated 
	int CVodeGetQuad(Pointer cvode_mem, DoubleByReference tret, Pointer yQout);
	/**
	 * Extraction and Dense Output Functions for Forward Problems<br>
	 * Original signature : <code>int CVodeGetQuad(void*, sunrealtype*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:335</i>
	 */
	int CVodeGetQuad(Pointer cvode_mem, DoubleBuffer tret, N_Vector yQout);
	/**
	 * Original signature : <code>int CVodeGetQuadDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:337</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetQuadDky(Pointer, double, int, N_Vector)} and {@link #CVodeGetQuadDky(Pointer, double, int, Pointer)} instead
	 */
	@Deprecated 
	int CVodeGetQuadDky(Pointer cvode_mem, double t, int k, Pointer dky);
	/**
	 * Original signature : <code>int CVodeGetQuadDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:337</i>
	 */
	int CVodeGetQuadDky(Pointer cvode_mem, double t, int k, N_Vector dky);
	/**
	 * Optional output specification functions<br>
	 * Original signature : <code>int CVodeGetQuadNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:341</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetQuadNumRhsEvals(Pointer, LongBuffer)} and {@link #CVodeGetQuadNumRhsEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetQuadNumRhsEvals(Pointer cvode_mem, LongByReference nfQevals);
	/**
	 * Optional output specification functions<br>
	 * Original signature : <code>int CVodeGetQuadNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:341</i>
	 */
	int CVodeGetQuadNumRhsEvals(Pointer cvode_mem, LongBuffer nfQevals);
	/**
	 * Original signature : <code>int CVodeGetQuadNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:342</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetQuadNumErrTestFails(Pointer, LongBuffer)} and {@link #CVodeGetQuadNumErrTestFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetQuadNumErrTestFails(Pointer cvode_mem, LongByReference nQetfails);
	/**
	 * Original signature : <code>int CVodeGetQuadNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:342</i>
	 */
	int CVodeGetQuadNumErrTestFails(Pointer cvode_mem, LongBuffer nQetfails);
	/**
	 * Original signature : <code>int CVodeGetQuadErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:344</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetQuadErrWeights(Pointer, N_Vector)} and {@link #CVodeGetQuadErrWeights(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int CVodeGetQuadErrWeights(Pointer cvode_mem, Pointer eQweight);
	/**
	 * Original signature : <code>int CVodeGetQuadErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:344</i>
	 */
	int CVodeGetQuadErrWeights(Pointer cvode_mem, N_Vector eQweight);
	/**
	 * Original signature : <code>int CVodeGetQuadStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:345</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetQuadStats(Pointer, LongBuffer, LongBuffer)} and {@link #CVodeGetQuadStats(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetQuadStats(Pointer cvode_mem, LongByReference nfQevals, LongByReference nQetfails);
	/**
	 * Original signature : <code>int CVodeGetQuadStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:345</i>
	 */
	int CVodeGetQuadStats(Pointer cvode_mem, LongBuffer nfQevals, LongBuffer nQetfails);
	/**
	 * Free function<br>
	 * Original signature : <code>void CVodeQuadFree(void*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:349</i>
	 */
	void CVodeQuadFree(Pointer cvode_mem);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>int CVodeSensInit(void*, int, int, CVSensRhsFn, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:356</i><br>
	 * @deprecated use the safer method {@link #CVodeSensInit(Pointer, int, int, CVSensRhsFn, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeSensInit(Pointer cvode_mem, int Ns, int ism, CVSensRhsFn fS, Pointer yS0);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>int CVodeSensInit(void*, int, int, CVSensRhsFn, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:356</i>
	 */
	int CVodeSensInit(Pointer cvode_mem, int Ns, int ism, CVSensRhsFn fS, PointerByReference yS0);
	/**
	 * Original signature : <code>int CVodeSensInit1(void*, int, int, CVSensRhs1Fn, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:358</i><br>
	 * @deprecated use the safer method {@link #CVodeSensInit1(Pointer, int, int, CVSensRhs1Fn, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeSensInit1(Pointer cvode_mem, int Ns, int ism, CVSensRhs1Fn fS1, Pointer yS0);
	/**
	 * Original signature : <code>int CVodeSensInit1(void*, int, int, CVSensRhs1Fn, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:358</i>
	 */
	int CVodeSensInit1(Pointer cvode_mem, int Ns, int ism, CVSensRhs1Fn fS1, PointerByReference yS0);
	/**
	 * Original signature : <code>int CVodeSensReInit(void*, int, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:360</i><br>
	 * @deprecated use the safer method {@link #CVodeSensReInit(Pointer, int, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeSensReInit(Pointer cvode_mem, int ism, Pointer yS0);
	/**
	 * Original signature : <code>int CVodeSensReInit(void*, int, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:360</i>
	 */
	int CVodeSensReInit(Pointer cvode_mem, int ism, PointerByReference yS0);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int CVodeSensSStolerances(void*, sunrealtype, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:363</i><br>
	 * @deprecated use the safer methods {@link #CVodeSensSStolerances(Pointer, double, DoubleBuffer)} and {@link #CVodeSensSStolerances(Pointer, double, DoubleByReference)} instead
	 */
	@Deprecated 
	int CVodeSensSStolerances(Pointer cvode_mem, double reltolS, DoubleByReference abstolS);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int CVodeSensSStolerances(void*, sunrealtype, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:363</i>
	 */
	int CVodeSensSStolerances(Pointer cvode_mem, double reltolS, DoubleBuffer abstolS);
	/**
	 * Original signature : <code>int CVodeSensSVtolerances(void*, sunrealtype, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:365</i><br>
	 * @deprecated use the safer method {@link #CVodeSensSVtolerances(Pointer, double, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeSensSVtolerances(Pointer cvode_mem, double reltolS, Pointer abstolS);
	/**
	 * Original signature : <code>int CVodeSensSVtolerances(void*, sunrealtype, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:365</i>
	 */
	int CVodeSensSVtolerances(Pointer cvode_mem, double reltolS, PointerByReference abstolS);
	/**
	 * Original signature : <code>int CVodeSensEEtolerances(void*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:367</i>
	 */
	int CVodeSensEEtolerances(Pointer cvode_mem);
	/**
	 * Optional input specification functions<br>
	 * Original signature : <code>int CVodeSetSensDQMethod(void*, int, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:370</i>
	 */
	int CVodeSetSensDQMethod(Pointer cvode_mem, int DQtype, double DQrhomax);
	/**
	 * Original signature : <code>int CVodeSetSensErrCon(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:372</i>
	 */
	int CVodeSetSensErrCon(Pointer cvode_mem, int errconS);
	/**
	 * Original signature : <code>int CVodeSetSensMaxNonlinIters(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:373</i>
	 */
	int CVodeSetSensMaxNonlinIters(Pointer cvode_mem, int maxcorS);
	/**
	 * Original signature : <code>int CVodeSetSensParams(void*, sunrealtype*, sunrealtype*, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:374</i><br>
	 * @deprecated use the safer methods {@link #CVodeSetSensParams(Pointer, DoubleBuffer, DoubleBuffer, IntBuffer)} and {@link #CVodeSetSensParams(Pointer, DoubleByReference, DoubleByReference, IntByReference)} instead
	 */
	@Deprecated 
	int CVodeSetSensParams(Pointer cvode_mem, DoubleByReference p, DoubleByReference pbar, IntByReference plist);
	/**
	 * Original signature : <code>int CVodeSetSensParams(void*, sunrealtype*, sunrealtype*, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:374</i>
	 */
	int CVodeSetSensParams(Pointer cvode_mem, DoubleBuffer p, DoubleBuffer pbar, IntBuffer plist);
	/**
	 * Integrator nonlinear solver specification functions<br>
	 * Original signature : <code>int CVodeSetNonlinearSolverSensSim(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:378</i><br>
	 * @deprecated use the safer methods {@link #CVodeSetNonlinearSolverSensSim(Pointer, SUNNonlinearSolver)} and {@link #CVodeSetNonlinearSolverSensSim(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int CVodeSetNonlinearSolverSensSim(Pointer cvode_mem, Pointer NLS);
	/**
	 * Integrator nonlinear solver specification functions<br>
	 * Original signature : <code>int CVodeSetNonlinearSolverSensSim(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:378</i>
	 */
	int CVodeSetNonlinearSolverSensSim(Pointer cvode_mem, SUNNonlinearSolver NLS);
	/**
	 * Original signature : <code>int CVodeSetNonlinearSolverSensStg(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:380</i><br>
	 * @deprecated use the safer methods {@link #CVodeSetNonlinearSolverSensStg(Pointer, SUNNonlinearSolver)} and {@link #CVodeSetNonlinearSolverSensStg(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int CVodeSetNonlinearSolverSensStg(Pointer cvode_mem, Pointer NLS);
	/**
	 * Original signature : <code>int CVodeSetNonlinearSolverSensStg(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:380</i>
	 */
	int CVodeSetNonlinearSolverSensStg(Pointer cvode_mem, SUNNonlinearSolver NLS);
	/**
	 * Original signature : <code>int CVodeSetNonlinearSolverSensStg1(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:382</i><br>
	 * @deprecated use the safer methods {@link #CVodeSetNonlinearSolverSensStg1(Pointer, SUNNonlinearSolver)} and {@link #CVodeSetNonlinearSolverSensStg1(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int CVodeSetNonlinearSolverSensStg1(Pointer cvode_mem, Pointer NLS);
	/**
	 * Original signature : <code>int CVodeSetNonlinearSolverSensStg1(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:382</i>
	 */
	int CVodeSetNonlinearSolverSensStg1(Pointer cvode_mem, SUNNonlinearSolver NLS);
	/**
	 * Enable/disable sensitivities<br>
	 * Original signature : <code>int CVodeSensToggleOff(void*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:386</i>
	 */
	int CVodeSensToggleOff(Pointer cvode_mem);
	/**
	 * Extraction and dense output functions<br>
	 * Original signature : <code>int CVodeGetSens(void*, sunrealtype*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:389</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetSens(Pointer, DoubleBuffer, PointerByReference)} and {@link #CVodeGetSens(Pointer, DoubleByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeGetSens(Pointer cvode_mem, DoubleByReference tret, Pointer ySout);
	/**
	 * Extraction and dense output functions<br>
	 * Original signature : <code>int CVodeGetSens(void*, sunrealtype*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:389</i>
	 */
	int CVodeGetSens(Pointer cvode_mem, DoubleBuffer tret, PointerByReference ySout);
	/**
	 * Extraction and dense output functions<br>
	 * Original signature : <code>int CVodeGetSens(void*, sunrealtype*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:389</i>
	 */
	int CVodeGetSens(Pointer cvode_mem, DoubleByReference tret, PointerByReference ySout);
	/**
	 * Original signature : <code>int CVodeGetSens1(void*, sunrealtype*, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:391</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetSens1(Pointer, DoubleBuffer, int, N_Vector)} and {@link #CVodeGetSens1(Pointer, DoubleByReference, int, Pointer)} instead
	 */
	@Deprecated 
	int CVodeGetSens1(Pointer cvode_mem, DoubleByReference tret, int is, Pointer ySout);
	/**
	 * Original signature : <code>int CVodeGetSens1(void*, sunrealtype*, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:391</i>
	 */
	int CVodeGetSens1(Pointer cvode_mem, DoubleBuffer tret, int is, N_Vector ySout);
	/**
	 * Original signature : <code>int CVodeGetSensDky(void*, sunrealtype, int, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:394</i><br>
	 * @deprecated use the safer method {@link #CVodeGetSensDky(Pointer, double, int, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeGetSensDky(Pointer cvode_mem, double t, int k, Pointer dkyA);
	/**
	 * Original signature : <code>int CVodeGetSensDky(void*, sunrealtype, int, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:394</i>
	 */
	int CVodeGetSensDky(Pointer cvode_mem, double t, int k, PointerByReference dkyA);
	/**
	 * Original signature : <code>int CVodeGetSensDky1(void*, sunrealtype, int, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:396</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetSensDky1(Pointer, double, int, int, N_Vector)} and {@link #CVodeGetSensDky1(Pointer, double, int, int, Pointer)} instead
	 */
	@Deprecated 
	int CVodeGetSensDky1(Pointer cvode_mem, double t, int k, int is, Pointer dky);
	/**
	 * Original signature : <code>int CVodeGetSensDky1(void*, sunrealtype, int, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:396</i>
	 */
	int CVodeGetSensDky1(Pointer cvode_mem, double t, int k, int is, N_Vector dky);
	/**
	 * Optional output specification functions<br>
	 * Original signature : <code>int CVodeGetSensNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:400</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetSensNumRhsEvals(Pointer, LongBuffer)} and {@link #CVodeGetSensNumRhsEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetSensNumRhsEvals(Pointer cvode_mem, LongByReference nfSevals);
	/**
	 * Optional output specification functions<br>
	 * Original signature : <code>int CVodeGetSensNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:400</i>
	 */
	int CVodeGetSensNumRhsEvals(Pointer cvode_mem, LongBuffer nfSevals);
	/**
	 * Original signature : <code>int CVodeGetNumRhsEvalsSens(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:401</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumRhsEvalsSens(Pointer, LongBuffer)} and {@link #CVodeGetNumRhsEvalsSens(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumRhsEvalsSens(Pointer cvode_mem, LongByReference nfevalsS);
	/**
	 * Original signature : <code>int CVodeGetNumRhsEvalsSens(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:401</i>
	 */
	int CVodeGetNumRhsEvalsSens(Pointer cvode_mem, LongBuffer nfevalsS);
	/**
	 * Original signature : <code>int CVodeGetSensNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:402</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetSensNumErrTestFails(Pointer, LongBuffer)} and {@link #CVodeGetSensNumErrTestFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetSensNumErrTestFails(Pointer cvode_mem, LongByReference nSetfails);
	/**
	 * Original signature : <code>int CVodeGetSensNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:402</i>
	 */
	int CVodeGetSensNumErrTestFails(Pointer cvode_mem, LongBuffer nSetfails);
	/**
	 * Original signature : <code>int CVodeGetSensNumLinSolvSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:404</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetSensNumLinSolvSetups(Pointer, LongBuffer)} and {@link #CVodeGetSensNumLinSolvSetups(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetSensNumLinSolvSetups(Pointer cvode_mem, LongByReference nlinsetupsS);
	/**
	 * Original signature : <code>int CVodeGetSensNumLinSolvSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:404</i>
	 */
	int CVodeGetSensNumLinSolvSetups(Pointer cvode_mem, LongBuffer nlinsetupsS);
	/**
	 * Original signature : <code>int CVodeGetSensErrWeights(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:406</i><br>
	 * @deprecated use the safer method {@link #CVodeGetSensErrWeights(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeGetSensErrWeights(Pointer cvode_mem, Pointer eSweight);
	/**
	 * Original signature : <code>int CVodeGetSensErrWeights(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:406</i>
	 */
	int CVodeGetSensErrWeights(Pointer cvode_mem, PointerByReference eSweight);
	/**
	 * Original signature : <code>int CVodeGetSensStats(void*, long long*, long long*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:407</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetSensStats(Pointer, LongBuffer, LongBuffer, LongBuffer, LongBuffer)} and {@link #CVodeGetSensStats(Pointer, LongByReference, LongByReference, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetSensStats(Pointer cvode_mem, LongByReference nfSevals, LongByReference nfevalsS, LongByReference nSetfails, LongByReference nlinsetupsS);
	/**
	 * Original signature : <code>int CVodeGetSensStats(void*, long long*, long long*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:407</i>
	 */
	int CVodeGetSensStats(Pointer cvode_mem, LongBuffer nfSevals, LongBuffer nfevalsS, LongBuffer nSetfails, LongBuffer nlinsetupsS);
	/**
	 * Original signature : <code>int CVodeGetSensNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:410</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetSensNumNonlinSolvIters(Pointer, LongBuffer)} and {@link #CVodeGetSensNumNonlinSolvIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetSensNumNonlinSolvIters(Pointer cvode_mem, LongByReference nSniters);
	/**
	 * Original signature : <code>int CVodeGetSensNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:410</i>
	 */
	int CVodeGetSensNumNonlinSolvIters(Pointer cvode_mem, LongBuffer nSniters);
	/**
	 * Original signature : <code>int CVodeGetSensNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:412</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetSensNumNonlinSolvConvFails(Pointer, LongBuffer)} and {@link #CVodeGetSensNumNonlinSolvConvFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetSensNumNonlinSolvConvFails(Pointer cvode_mem, LongByReference nSnfails);
	/**
	 * Original signature : <code>int CVodeGetSensNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:412</i>
	 */
	int CVodeGetSensNumNonlinSolvConvFails(Pointer cvode_mem, LongBuffer nSnfails);
	/**
	 * Original signature : <code>int CVodeGetSensNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:414</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetSensNonlinSolvStats(Pointer, LongBuffer, LongBuffer)} and {@link #CVodeGetSensNonlinSolvStats(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetSensNonlinSolvStats(Pointer cvode_mem, LongByReference nSniters, LongByReference nSnfails);
	/**
	 * Original signature : <code>int CVodeGetSensNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:414</i>
	 */
	int CVodeGetSensNonlinSolvStats(Pointer cvode_mem, LongBuffer nSniters, LongBuffer nSnfails);
	/**
	 * Original signature : <code>int CVodeGetNumStepSensSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:417</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumStepSensSolveFails(Pointer, LongBuffer)} and {@link #CVodeGetNumStepSensSolveFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumStepSensSolveFails(Pointer cvode_mem, LongByReference nSncfails);
	/**
	 * Original signature : <code>int CVodeGetNumStepSensSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:417</i>
	 */
	int CVodeGetNumStepSensSolveFails(Pointer cvode_mem, LongBuffer nSncfails);
	/**
	 * Original signature : <code>int CVodeGetStgrSensNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:419</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetStgrSensNumNonlinSolvIters(Pointer, LongBuffer)} and {@link #CVodeGetStgrSensNumNonlinSolvIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetStgrSensNumNonlinSolvIters(Pointer cvode_mem, LongByReference nSTGR1niters);
	/**
	 * Original signature : <code>int CVodeGetStgrSensNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:419</i>
	 */
	int CVodeGetStgrSensNumNonlinSolvIters(Pointer cvode_mem, LongBuffer nSTGR1niters);
	/**
	 * Original signature : <code>int CVodeGetStgrSensNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:421</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetStgrSensNumNonlinSolvConvFails(Pointer, LongBuffer)} and {@link #CVodeGetStgrSensNumNonlinSolvConvFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetStgrSensNumNonlinSolvConvFails(Pointer cvode_mem, LongByReference nSTGR1nfails);
	/**
	 * Original signature : <code>int CVodeGetStgrSensNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:421</i>
	 */
	int CVodeGetStgrSensNumNonlinSolvConvFails(Pointer cvode_mem, LongBuffer nSTGR1nfails);
	/**
	 * Original signature : <code>int CVodeGetStgrSensNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:423</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetStgrSensNonlinSolvStats(Pointer, LongBuffer, LongBuffer)} and {@link #CVodeGetStgrSensNonlinSolvStats(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetStgrSensNonlinSolvStats(Pointer cvode_mem, LongByReference nSTGR1niters, LongByReference nSTGR1nfails);
	/**
	 * Original signature : <code>int CVodeGetStgrSensNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:423</i>
	 */
	int CVodeGetStgrSensNonlinSolvStats(Pointer cvode_mem, LongBuffer nSTGR1niters, LongBuffer nSTGR1nfails);
	/**
	 * Original signature : <code>int CVodeGetNumStepStgrSensSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:426</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetNumStepStgrSensSolveFails(Pointer, LongBuffer)} and {@link #CVodeGetNumStepStgrSensSolveFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetNumStepStgrSensSolveFails(Pointer cvode_mem, LongByReference nSTGR1ncfails);
	/**
	 * Original signature : <code>int CVodeGetNumStepStgrSensSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:426</i>
	 */
	int CVodeGetNumStepStgrSensSolveFails(Pointer cvode_mem, LongBuffer nSTGR1ncfails);
	/**
	 * Free function<br>
	 * Original signature : <code>void CVodeSensFree(void*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:430</i>
	 */
	void CVodeSensFree(Pointer cvode_mem);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>int CVodeQuadSensInit(void*, CVQuadSensRhsFn, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:437</i><br>
	 * @deprecated use the safer method {@link #CVodeQuadSensInit(Pointer, CVQuadSensRhsFn, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeQuadSensInit(Pointer cvode_mem, CVQuadSensRhsFn fQS, Pointer yQS0);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>int CVodeQuadSensInit(void*, CVQuadSensRhsFn, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:437</i>
	 */
	int CVodeQuadSensInit(Pointer cvode_mem, CVQuadSensRhsFn fQS, PointerByReference yQS0);
	/**
	 * Original signature : <code>int CVodeQuadSensReInit(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:439</i><br>
	 * @deprecated use the safer method {@link #CVodeQuadSensReInit(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeQuadSensReInit(Pointer cvode_mem, Pointer yQS0);
	/**
	 * Original signature : <code>int CVodeQuadSensReInit(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:439</i>
	 */
	int CVodeQuadSensReInit(Pointer cvode_mem, PointerByReference yQS0);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int CVodeQuadSensSStolerances(void*, sunrealtype, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:442</i><br>
	 * @deprecated use the safer methods {@link #CVodeQuadSensSStolerances(Pointer, double, DoubleBuffer)} and {@link #CVodeQuadSensSStolerances(Pointer, double, DoubleByReference)} instead
	 */
	@Deprecated 
	int CVodeQuadSensSStolerances(Pointer cvode_mem, double reltolQS, DoubleByReference abstolQS);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int CVodeQuadSensSStolerances(void*, sunrealtype, sunrealtype*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:442</i>
	 */
	int CVodeQuadSensSStolerances(Pointer cvode_mem, double reltolQS, DoubleBuffer abstolQS);
	/**
	 * Original signature : <code>int CVodeQuadSensSVtolerances(void*, sunrealtype, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:445</i><br>
	 * @deprecated use the safer method {@link #CVodeQuadSensSVtolerances(Pointer, double, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeQuadSensSVtolerances(Pointer cvode_mem, double reltolQS, Pointer abstolQS);
	/**
	 * Original signature : <code>int CVodeQuadSensSVtolerances(void*, sunrealtype, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:445</i>
	 */
	int CVodeQuadSensSVtolerances(Pointer cvode_mem, double reltolQS, PointerByReference abstolQS);
	/**
	 * Original signature : <code>int CVodeQuadSensEEtolerances(void*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:448</i>
	 */
	int CVodeQuadSensEEtolerances(Pointer cvode_mem);
	/**
	 * Optional input specification functions<br>
	 * Original signature : <code>int CVodeSetQuadSensErrCon(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:451</i>
	 */
	int CVodeSetQuadSensErrCon(Pointer cvode_mem, int errconQS);
	/**
	 * Extraction and dense output functions<br>
	 * Original signature : <code>int CVodeGetQuadSens(void*, sunrealtype*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:455</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetQuadSens(Pointer, DoubleBuffer, PointerByReference)} and {@link #CVodeGetQuadSens(Pointer, DoubleByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeGetQuadSens(Pointer cvode_mem, DoubleByReference tret, Pointer yQSout);
	/**
	 * Extraction and dense output functions<br>
	 * Original signature : <code>int CVodeGetQuadSens(void*, sunrealtype*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:455</i>
	 */
	int CVodeGetQuadSens(Pointer cvode_mem, DoubleBuffer tret, PointerByReference yQSout);
	/**
	 * Extraction and dense output functions<br>
	 * Original signature : <code>int CVodeGetQuadSens(void*, sunrealtype*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:455</i>
	 */
	int CVodeGetQuadSens(Pointer cvode_mem, DoubleByReference tret, PointerByReference yQSout);
	/**
	 * Original signature : <code>int CVodeGetQuadSens1(void*, sunrealtype*, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:457</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetQuadSens1(Pointer, DoubleBuffer, int, N_Vector)} and {@link #CVodeGetQuadSens1(Pointer, DoubleByReference, int, Pointer)} instead
	 */
	@Deprecated 
	int CVodeGetQuadSens1(Pointer cvode_mem, DoubleByReference tret, int is, Pointer yQSout);
	/**
	 * Original signature : <code>int CVodeGetQuadSens1(void*, sunrealtype*, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:457</i>
	 */
	int CVodeGetQuadSens1(Pointer cvode_mem, DoubleBuffer tret, int is, N_Vector yQSout);
	/**
	 * Original signature : <code>int CVodeGetQuadSensDky(void*, sunrealtype, int, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:460</i><br>
	 * @deprecated use the safer method {@link #CVodeGetQuadSensDky(Pointer, double, int, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeGetQuadSensDky(Pointer cvode_mem, double t, int k, Pointer dkyQS_all);
	/**
	 * Original signature : <code>int CVodeGetQuadSensDky(void*, sunrealtype, int, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:460</i>
	 */
	int CVodeGetQuadSensDky(Pointer cvode_mem, double t, int k, PointerByReference dkyQS_all);
	/**
	 * Original signature : <code>int CVodeGetQuadSensDky1(void*, sunrealtype, int, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:462</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetQuadSensDky1(Pointer, double, int, int, N_Vector)} and {@link #CVodeGetQuadSensDky1(Pointer, double, int, int, Pointer)} instead
	 */
	@Deprecated 
	int CVodeGetQuadSensDky1(Pointer cvode_mem, double t, int k, int is, Pointer dkyQS);
	/**
	 * Original signature : <code>int CVodeGetQuadSensDky1(void*, sunrealtype, int, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:462</i>
	 */
	int CVodeGetQuadSensDky1(Pointer cvode_mem, double t, int k, int is, N_Vector dkyQS);
	/**
	 * Optional output specification functions<br>
	 * Original signature : <code>int CVodeGetQuadSensNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:466</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetQuadSensNumRhsEvals(Pointer, LongBuffer)} and {@link #CVodeGetQuadSensNumRhsEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetQuadSensNumRhsEvals(Pointer cvode_mem, LongByReference nfQSevals);
	/**
	 * Optional output specification functions<br>
	 * Original signature : <code>int CVodeGetQuadSensNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:466</i>
	 */
	int CVodeGetQuadSensNumRhsEvals(Pointer cvode_mem, LongBuffer nfQSevals);
	/**
	 * Original signature : <code>int CVodeGetQuadSensNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:468</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetQuadSensNumErrTestFails(Pointer, LongBuffer)} and {@link #CVodeGetQuadSensNumErrTestFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetQuadSensNumErrTestFails(Pointer cvode_mem, LongByReference nQSetfails);
	/**
	 * Original signature : <code>int CVodeGetQuadSensNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:468</i>
	 */
	int CVodeGetQuadSensNumErrTestFails(Pointer cvode_mem, LongBuffer nQSetfails);
	/**
	 * Original signature : <code>int CVodeGetQuadSensErrWeights(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:470</i><br>
	 * @deprecated use the safer method {@link #CVodeGetQuadSensErrWeights(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int CVodeGetQuadSensErrWeights(Pointer cvode_mem, Pointer eQSweight);
	/**
	 * Original signature : <code>int CVodeGetQuadSensErrWeights(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:470</i>
	 */
	int CVodeGetQuadSensErrWeights(Pointer cvode_mem, PointerByReference eQSweight);
	/**
	 * Original signature : <code>int CVodeGetQuadSensStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:472</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetQuadSensStats(Pointer, LongBuffer, LongBuffer)} and {@link #CVodeGetQuadSensStats(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int CVodeGetQuadSensStats(Pointer cvode_mem, LongByReference nfQSevals, LongByReference nQSetfails);
	/**
	 * Original signature : <code>int CVodeGetQuadSensStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:472</i>
	 */
	int CVodeGetQuadSensStats(Pointer cvode_mem, LongBuffer nfQSevals, LongBuffer nQSetfails);
	/**
	 * Free function<br>
	 * Original signature : <code>void CVodeQuadSensFree(void*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:476</i>
	 */
	void CVodeQuadSensFree(Pointer cvode_mem);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>int CVodeAdjInit(void*, long long, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:484</i>
	 */
	int CVodeAdjInit(Pointer cvode_mem, long steps, int interp);
	/**
	 * Original signature : <code>int CVodeAdjReInit(void*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:486</i>
	 */
	int CVodeAdjReInit(Pointer cvode_mem);
	/**
	 * Original signature : <code>void CVodeAdjFree(void*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:488</i>
	 */
	void CVodeAdjFree(Pointer cvode_mem);
	/**
	 * Backward Problem Setup Functions<br>
	 * Original signature : <code>int CVodeCreateB(void*, int, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:492</i><br>
	 * @deprecated use the safer methods {@link #CVodeCreateB(Pointer, int, IntBuffer)} and {@link #CVodeCreateB(Pointer, int, IntByReference)} instead
	 */
	@Deprecated 
	int CVodeCreateB(Pointer cvode_mem, int lmmB, IntByReference which);
	/**
	 * Backward Problem Setup Functions<br>
	 * Original signature : <code>int CVodeCreateB(void*, int, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:492</i>
	 */
	int CVodeCreateB(Pointer cvode_mem, int lmmB, IntBuffer which);
	/**
	 * Original signature : <code>int CVodeInitB(void*, int, CVRhsFnB, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:494</i><br>
	 * @deprecated use the safer methods {@link #CVodeInitB(Pointer, int, CVRhsFnB, double, N_Vector)} and {@link #CVodeInitB(Pointer, int, CVRhsFnB, double, Pointer)} instead
	 */
	@Deprecated 
	int CVodeInitB(Pointer cvode_mem, int which, CVRhsFnB fB, double tB0, Pointer yB0);
	/**
	 * Original signature : <code>int CVodeInitB(void*, int, CVRhsFnB, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:494</i>
	 */
	int CVodeInitB(Pointer cvode_mem, int which, CVRhsFnB fB, double tB0, N_Vector yB0);
	/**
	 * Original signature : <code>int CVodeInitBS(void*, int, CVRhsFnBS, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:496</i><br>
	 * @deprecated use the safer methods {@link #CVodeInitBS(Pointer, int, CVRhsFnBS, double, N_Vector)} and {@link #CVodeInitBS(Pointer, int, CVRhsFnBS, double, Pointer)} instead
	 */
	@Deprecated 
	int CVodeInitBS(Pointer cvode_mem, int which, CVRhsFnBS fBs, double tB0, Pointer yB0);
	/**
	 * Original signature : <code>int CVodeInitBS(void*, int, CVRhsFnBS, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:496</i>
	 */
	int CVodeInitBS(Pointer cvode_mem, int which, CVRhsFnBS fBs, double tB0, N_Vector yB0);
	/**
	 * Original signature : <code>int CVodeReInitB(void*, int, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:498</i><br>
	 * @deprecated use the safer methods {@link #CVodeReInitB(Pointer, int, double, N_Vector)} and {@link #CVodeReInitB(Pointer, int, double, Pointer)} instead
	 */
	@Deprecated 
	int CVodeReInitB(Pointer cvode_mem, int which, double tB0, Pointer yB0);
	/**
	 * Original signature : <code>int CVodeReInitB(void*, int, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:498</i>
	 */
	int CVodeReInitB(Pointer cvode_mem, int which, double tB0, N_Vector yB0);
	/**
	 * Original signature : <code>int CVodeSStolerancesB(void*, int, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:501</i>
	 */
	int CVodeSStolerancesB(Pointer cvode_mem, int which, double reltolB, double abstolB);
	/**
	 * Original signature : <code>int CVodeSVtolerancesB(void*, int, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:503</i><br>
	 * @deprecated use the safer methods {@link #CVodeSVtolerancesB(Pointer, int, double, N_Vector)} and {@link #CVodeSVtolerancesB(Pointer, int, double, Pointer)} instead
	 */
	@Deprecated 
	int CVodeSVtolerancesB(Pointer cvode_mem, int which, double reltolB, Pointer abstolB);
	/**
	 * Original signature : <code>int CVodeSVtolerancesB(void*, int, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:503</i>
	 */
	int CVodeSVtolerancesB(Pointer cvode_mem, int which, double reltolB, N_Vector abstolB);
	/**
	 * Original signature : <code>int CVodeQuadInitB(void*, int, CVQuadRhsFnB, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:506</i><br>
	 * @deprecated use the safer methods {@link #CVodeQuadInitB(Pointer, int, CVQuadRhsFnB, N_Vector)} and {@link #CVodeQuadInitB(Pointer, int, CVQuadRhsFnB, Pointer)} instead
	 */
	@Deprecated 
	int CVodeQuadInitB(Pointer cvode_mem, int which, CVQuadRhsFnB fQB, Pointer yQB0);
	/**
	 * Original signature : <code>int CVodeQuadInitB(void*, int, CVQuadRhsFnB, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:506</i>
	 */
	int CVodeQuadInitB(Pointer cvode_mem, int which, CVQuadRhsFnB fQB, N_Vector yQB0);
	/**
	 * Original signature : <code>int CVodeQuadInitBS(void*, int, CVQuadRhsFnBS, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:508</i><br>
	 * @deprecated use the safer methods {@link #CVodeQuadInitBS(Pointer, int, CVQuadRhsFnBS, N_Vector)} and {@link #CVodeQuadInitBS(Pointer, int, CVQuadRhsFnBS, Pointer)} instead
	 */
	@Deprecated 
	int CVodeQuadInitBS(Pointer cvode_mem, int which, CVQuadRhsFnBS fQBs, Pointer yQB0);
	/**
	 * Original signature : <code>int CVodeQuadInitBS(void*, int, CVQuadRhsFnBS, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:508</i>
	 */
	int CVodeQuadInitBS(Pointer cvode_mem, int which, CVQuadRhsFnBS fQBs, N_Vector yQB0);
	/**
	 * Original signature : <code>int CVodeQuadReInitB(void*, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:510</i><br>
	 * @deprecated use the safer methods {@link #CVodeQuadReInitB(Pointer, int, N_Vector)} and {@link #CVodeQuadReInitB(Pointer, int, Pointer)} instead
	 */
	@Deprecated 
	int CVodeQuadReInitB(Pointer cvode_mem, int which, Pointer yQB0);
	/**
	 * Original signature : <code>int CVodeQuadReInitB(void*, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:510</i>
	 */
	int CVodeQuadReInitB(Pointer cvode_mem, int which, N_Vector yQB0);
	/**
	 * Original signature : <code>int CVodeQuadSStolerancesB(void*, int, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:512</i>
	 */
	int CVodeQuadSStolerancesB(Pointer cvode_mem, int which, double reltolQB, double abstolQB);
	/**
	 * Original signature : <code>int CVodeQuadSVtolerancesB(void*, int, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:515</i><br>
	 * @deprecated use the safer methods {@link #CVodeQuadSVtolerancesB(Pointer, int, double, N_Vector)} and {@link #CVodeQuadSVtolerancesB(Pointer, int, double, Pointer)} instead
	 */
	@Deprecated 
	int CVodeQuadSVtolerancesB(Pointer cvode_mem, int which, double reltolQB, Pointer abstolQB);
	/**
	 * Original signature : <code>int CVodeQuadSVtolerancesB(void*, int, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:515</i>
	 */
	int CVodeQuadSVtolerancesB(Pointer cvode_mem, int which, double reltolQB, N_Vector abstolQB);
	/**
	 * Solver Function For Forward Problems<br>
	 * Original signature : <code>int CVodeF(void*, sunrealtype, N_Vector, sunrealtype*, int, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:521</i><br>
	 * @deprecated use the safer methods {@link #CVodeF(Pointer, double, N_Vector, DoubleBuffer, int, IntBuffer)} and {@link #CVodeF(Pointer, double, Pointer, DoubleByReference, int, IntByReference)} instead
	 */
	@Deprecated 
	int CVodeF(Pointer cvode_mem, double tout, Pointer yout, DoubleByReference tret, int itask, IntByReference ncheckPtr);
	/**
	 * Solver Function For Forward Problems<br>
	 * Original signature : <code>int CVodeF(void*, sunrealtype, N_Vector, sunrealtype*, int, int*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:521</i>
	 */
	int CVodeF(Pointer cvode_mem, double tout, N_Vector yout, DoubleBuffer tret, int itask, IntBuffer ncheckPtr);
	/**
	 * Solver Function For Backward Problems<br>
	 * Original signature : <code>int CVodeB(void*, sunrealtype, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:526</i>
	 */
	int CVodeB(Pointer cvode_mem, double tBout, int itaskB);
	/**
	 * Optional Input Functions For Adjoint Problems<br>
	 * Original signature : <code>int CVodeSetAdjNoSensi(void*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:530</i>
	 */
	int CVodeSetAdjNoSensi(Pointer cvode_mem);
	/**
	 * Original signature : <code>int CVodeSetUserDataB(void*, int, void*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:532</i>
	 */
	int CVodeSetUserDataB(Pointer cvode_mem, int which, Pointer user_dataB);
	/**
	 * Original signature : <code>int CVodeSetMaxOrdB(void*, int, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:534</i>
	 */
	int CVodeSetMaxOrdB(Pointer cvode_mem, int which, int maxordB);
	/**
	 * Original signature : <code>int CVodeSetMaxNumStepsB(void*, int, long long)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:535</i>
	 */
	int CVodeSetMaxNumStepsB(Pointer cvode_mem, int which, long mxstepsB);
	/**
	 * Original signature : <code>int CVodeSetStabLimDetB(void*, int, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:537</i>
	 */
	int CVodeSetStabLimDetB(Pointer cvode_mem, int which, int stldetB);
	/**
	 * Original signature : <code>int CVodeSetInitStepB(void*, int, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:539</i>
	 */
	int CVodeSetInitStepB(Pointer cvode_mem, int which, double hinB);
	/**
	 * Original signature : <code>int CVodeSetMinStepB(void*, int, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:541</i>
	 */
	int CVodeSetMinStepB(Pointer cvode_mem, int which, double hminB);
	/**
	 * Original signature : <code>int CVodeSetMaxStepB(void*, int, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:543</i>
	 */
	int CVodeSetMaxStepB(Pointer cvode_mem, int which, double hmaxB);
	/**
	 * Original signature : <code>int CVodeSetConstraintsB(void*, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:545</i><br>
	 * @deprecated use the safer methods {@link #CVodeSetConstraintsB(Pointer, int, N_Vector)} and {@link #CVodeSetConstraintsB(Pointer, int, Pointer)} instead
	 */
	@Deprecated 
	int CVodeSetConstraintsB(Pointer cvode_mem, int which, Pointer constraintsB);
	/**
	 * Original signature : <code>int CVodeSetConstraintsB(void*, int, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:545</i>
	 */
	int CVodeSetConstraintsB(Pointer cvode_mem, int which, N_Vector constraintsB);
	/**
	 * Original signature : <code>int CVodeSetQuadErrConB(void*, int, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:547</i>
	 */
	int CVodeSetQuadErrConB(Pointer cvode_mem, int which, int errconQB);
	/**
	 * Original signature : <code>int CVodeSetNonlinearSolverB(void*, int, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:550</i><br>
	 * @deprecated use the safer methods {@link #CVodeSetNonlinearSolverB(Pointer, int, SUNNonlinearSolver)} and {@link #CVodeSetNonlinearSolverB(Pointer, int, Pointer)} instead
	 */
	@Deprecated 
	int CVodeSetNonlinearSolverB(Pointer cvode_mem, int which, Pointer NLS);
	/**
	 * Original signature : <code>int CVodeSetNonlinearSolverB(void*, int, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:550</i>
	 */
	int CVodeSetNonlinearSolverB(Pointer cvode_mem, int which, SUNNonlinearSolver NLS);
	/**
	 * Extraction And Dense Output Functions For Backward Problems<br>
	 * Original signature : <code>int CVodeGetB(void*, int, sunrealtype*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:555</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetB(Pointer, int, DoubleBuffer, N_Vector)} and {@link #CVodeGetB(Pointer, int, DoubleByReference, Pointer)} instead
	 */
	@Deprecated 
	int CVodeGetB(Pointer cvode_mem, int which, DoubleByReference tBret, Pointer yB);
	/**
	 * Extraction And Dense Output Functions For Backward Problems<br>
	 * Original signature : <code>int CVodeGetB(void*, int, sunrealtype*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:555</i>
	 */
	int CVodeGetB(Pointer cvode_mem, int which, DoubleBuffer tBret, N_Vector yB);
	/**
	 * Original signature : <code>int CVodeGetQuadB(void*, int, sunrealtype*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:557</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetQuadB(Pointer, int, DoubleBuffer, N_Vector)} and {@link #CVodeGetQuadB(Pointer, int, DoubleByReference, Pointer)} instead
	 */
	@Deprecated 
	int CVodeGetQuadB(Pointer cvode_mem, int which, DoubleByReference tBret, Pointer qB);
	/**
	 * Original signature : <code>int CVodeGetQuadB(void*, int, sunrealtype*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:557</i>
	 */
	int CVodeGetQuadB(Pointer cvode_mem, int which, DoubleBuffer tBret, N_Vector qB);
	/**
	 * Optional Output Functions For Backward Problems<br>
	 * Original signature : <code>void* CVodeGetAdjCVodeBmem(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:562</i>
	 */
	Pointer CVodeGetAdjCVodeBmem(Pointer cvode_mem, int which);
	/**
	 * Original signature : <code>int CVodeGetAdjY(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:564</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetAdjY(Pointer, double, N_Vector)} and {@link #CVodeGetAdjY(Pointer, double, Pointer)} instead
	 */
	@Deprecated 
	int CVodeGetAdjY(Pointer cvode_mem, double t, Pointer y);
	/**
	 * Original signature : <code>int CVodeGetAdjY(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:564</i>
	 */
	int CVodeGetAdjY(Pointer cvode_mem, double t, N_Vector y);
	/**
	 * Original signature : <code>int CVodeGetAdjCheckPointsInfo(void*, CVadjCheckPointRec*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:577</i>
	 */
	int CVodeGetAdjCheckPointsInfo(Pointer cvode_mem, CVadjCheckPointRec ckpnt);
	/**
	 * CVLS interface function that depends on CVRhsFn<br>
	 * Original signature : <code>int CVodeSetJacTimesRhsFnB(void*, int, CVRhsFn)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:581</i>
	 */
	int CVodeSetJacTimesRhsFnB(Pointer cvode_mem, int which, CVRhsFn jtimesRhsFn);
	/**
	 * -----------------------------------------------------------------<br>
	 * CVodeGetAdjDataPointHermite<br>
	 * -----------------------------------------------------------------<br>
	 *    Returns the 2 vectors stored for cubic Hermite interpolation<br>
	 *    at the data point 'which'. The user must allocate space for<br>
	 *    y and yd. Returns CV_MEM_NULL if cvode_mem is NULL,<br>
	 *    CV_ILL_INPUT if the interpolation type previously specified<br>
	 *    is not CV_HERMITE, or CV_SUCCESS otherwise.<br>
	 * -----------------------------------------------------------------<br>
	 * CVodeGetAdjDataPointPolynomial<br>
	 * -----------------------------------------------------------------<br>
	 *    Returns the vector stored for polynomial interpolation<br>
	 *    at the data point 'which'. The user must allocate space for<br>
	 *    y. Returns CV_MEM_NULL if cvode_mem is NULL, CV_ILL_INPUT if<br>
	 *    the interpolation type previously specified is not<br>
	 *    CV_POLYNOMIAL, or CV_SUCCESS otherwise.<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int CVodeGetAdjDataPointHermite(void*, int, sunrealtype*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:603</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetAdjDataPointHermite(Pointer, int, DoubleBuffer, N_Vector, N_Vector)} and {@link #CVodeGetAdjDataPointHermite(Pointer, int, DoubleByReference, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int CVodeGetAdjDataPointHermite(Pointer cvode_mem, int which, DoubleByReference t, Pointer y, Pointer yd);
	/**
	 * -----------------------------------------------------------------<br>
	 * CVodeGetAdjDataPointHermite<br>
	 * -----------------------------------------------------------------<br>
	 *    Returns the 2 vectors stored for cubic Hermite interpolation<br>
	 *    at the data point 'which'. The user must allocate space for<br>
	 *    y and yd. Returns CV_MEM_NULL if cvode_mem is NULL,<br>
	 *    CV_ILL_INPUT if the interpolation type previously specified<br>
	 *    is not CV_HERMITE, or CV_SUCCESS otherwise.<br>
	 * -----------------------------------------------------------------<br>
	 * CVodeGetAdjDataPointPolynomial<br>
	 * -----------------------------------------------------------------<br>
	 *    Returns the vector stored for polynomial interpolation<br>
	 *    at the data point 'which'. The user must allocate space for<br>
	 *    y. Returns CV_MEM_NULL if cvode_mem is NULL, CV_ILL_INPUT if<br>
	 *    the interpolation type previously specified is not<br>
	 *    CV_POLYNOMIAL, or CV_SUCCESS otherwise.<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int CVodeGetAdjDataPointHermite(void*, int, sunrealtype*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:603</i>
	 */
	int CVodeGetAdjDataPointHermite(Pointer cvode_mem, int which, DoubleBuffer t, N_Vector y, N_Vector yd);
	/**
	 * Original signature : <code>int CVodeGetAdjDataPointPolynomial(void*, int, sunrealtype*, int*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:607</i><br>
	 * @deprecated use the safer methods {@link #CVodeGetAdjDataPointPolynomial(Pointer, int, DoubleBuffer, IntBuffer, N_Vector)} and {@link #CVodeGetAdjDataPointPolynomial(Pointer, int, DoubleByReference, IntByReference, Pointer)} instead
	 */
	@Deprecated 
	int CVodeGetAdjDataPointPolynomial(Pointer cvode_mem, int which, DoubleByReference t, IntByReference order, Pointer y);
	/**
	 * Original signature : <code>int CVodeGetAdjDataPointPolynomial(void*, int, sunrealtype*, int*, N_Vector)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:607</i>
	 */
	int CVodeGetAdjDataPointPolynomial(Pointer cvode_mem, int which, DoubleBuffer t, IntBuffer order, N_Vector y);
	/**
	 * -----------------------------------------------------------------<br>
	 * CVodeGetAdjCurrentCheckPoint<br>
	 *    Returns the address of the 'active' check point.<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int CVodeGetAdjCurrentCheckPoint(void*, void**)</code><br>
	 * <i>native declaration : include\cvodes\cvodes.h:616</i>
	 */
	int CVodeGetAdjCurrentCheckPoint(Pointer cvode_mem, PointerByReference addr);
	/**
	 * BandPrec inititialization function<br>
	 * Original signature : <code>int CVBandPrecInit(void*, sunindextype, sunindextype, sunindextype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_bandpre.h:12</i>
	 */
	int CVBandPrecInit(Pointer cvode_mem, long N, long mu, long ml);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int CVBandPrecGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_bandpre.h:17</i><br>
	 * @deprecated use the safer methods {@link #CVBandPrecGetWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #CVBandPrecGetWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int CVBandPrecGetWorkSpace(Pointer cvode_mem, LongByReference lenrwLS, LongByReference leniwLS);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int CVBandPrecGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_bandpre.h:17</i>
	 */
	int CVBandPrecGetWorkSpace(Pointer cvode_mem, LongBuffer lenrwLS, LongBuffer leniwLS);
	/**
	 * Original signature : <code>int CVBandPrecGetNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_bandpre.h:19</i><br>
	 * @deprecated use the safer methods {@link #CVBandPrecGetNumRhsEvals(Pointer, LongBuffer)} and {@link #CVBandPrecGetNumRhsEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVBandPrecGetNumRhsEvals(Pointer cvode_mem, LongByReference nfevalsBP);
	/**
	 * Original signature : <code>int CVBandPrecGetNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_bandpre.h:19</i>
	 */
	int CVBandPrecGetNumRhsEvals(Pointer cvode_mem, LongBuffer nfevalsBP);
	/**
	 * ------------------<br>
	 * BACKWARD PROBLEMS<br>
	 * ------------------<br>
	 * Original signature : <code>int CVBandPrecInitB(void*, int, sunindextype, sunindextype, sunindextype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_bandpre.h:26</i>
	 */
	int CVBandPrecInitB(Pointer cvode_mem, int which, long nB, long muB, long mlB);
	/**
	 * Exported Functions<br>
	 * Original signature : <code>int CVBBDPrecInit(void*, sunindextype, sunindextype, sunindextype, sunindextype, sunindextype, sunrealtype, CVLocalFn, CVCommFn)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_bbdpre.h:20</i>
	 */
	int CVBBDPrecInit(Pointer cvode_mem, long Nlocal, long mudq, long mldq, long mukeep, long mlkeep, double dqrely, CVLocalFn gloc, CVCommFn cfn);
	/**
	 * Original signature : <code>int CVBBDPrecReInit(void*, sunindextype, sunindextype, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_bbdpre.h:26</i>
	 */
	int CVBBDPrecReInit(Pointer cvode_mem, long mudq, long mldq, double dqrely);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int CVBBDPrecGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_bbdpre.h:31</i><br>
	 * @deprecated use the safer methods {@link #CVBBDPrecGetWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #CVBBDPrecGetWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int CVBBDPrecGetWorkSpace(Pointer cvode_mem, LongByReference lenrwBBDP, LongByReference leniwBBDP);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int CVBBDPrecGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_bbdpre.h:31</i>
	 */
	int CVBBDPrecGetWorkSpace(Pointer cvode_mem, LongBuffer lenrwBBDP, LongBuffer leniwBBDP);
	/**
	 * Original signature : <code>int CVBBDPrecGetNumGfnEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_bbdpre.h:34</i><br>
	 * @deprecated use the safer methods {@link #CVBBDPrecGetNumGfnEvals(Pointer, LongBuffer)} and {@link #CVBBDPrecGetNumGfnEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVBBDPrecGetNumGfnEvals(Pointer cvode_mem, LongByReference ngevalsBBDP);
	/**
	 * Original signature : <code>int CVBBDPrecGetNumGfnEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_bbdpre.h:34</i>
	 */
	int CVBBDPrecGetNumGfnEvals(Pointer cvode_mem, LongBuffer ngevalsBBDP);
	/**
	 * Exported Functions<br>
	 * Original signature : <code>int CVBBDPrecInitB(void*, int, sunindextype, sunindextype, sunindextype, sunindextype, sunindextype, sunrealtype, CVLocalFnB, CVCommFnB)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_bbdpre.h:51</i>
	 */
	int CVBBDPrecInitB(Pointer cvode_mem, int which, long NlocalB, long mudqB, long mldqB, long mukeepB, long mlkeepB, double dqrelyB, CVLocalFnB glocB, CVCommFnB cfnB);
	/**
	 * Original signature : <code>int CVBBDPrecReInitB(void*, int, sunindextype, sunindextype, sunrealtype)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_bbdpre.h:57</i>
	 */
	int CVBBDPrecReInitB(Pointer cvode_mem, int which, long mudqB, long mldqB, double dqrelyB);
	/**
	 * CVDiag initialization function<br>
	 * Original signature : <code>int CVDiag(void*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_diag.h:32</i>
	 */
	int CVDiag(Pointer cvode_mem);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int CVDiagGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_diag.h:36</i><br>
	 * @deprecated use the safer methods {@link #CVDiagGetWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #CVDiagGetWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int CVDiagGetWorkSpace(Pointer cvode_mem, LongByReference lenrwLS, LongByReference leniwLS);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int CVDiagGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_diag.h:36</i>
	 */
	int CVDiagGetWorkSpace(Pointer cvode_mem, LongBuffer lenrwLS, LongBuffer leniwLS);
	/**
	 * Original signature : <code>int CVDiagGetNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_diag.h:38</i><br>
	 * @deprecated use the safer methods {@link #CVDiagGetNumRhsEvals(Pointer, LongBuffer)} and {@link #CVDiagGetNumRhsEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVDiagGetNumRhsEvals(Pointer cvode_mem, LongByReference nfevalsLS);
	/**
	 * Original signature : <code>int CVDiagGetNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_diag.h:38</i>
	 */
	int CVDiagGetNumRhsEvals(Pointer cvode_mem, LongBuffer nfevalsLS);
	/**
	 * Original signature : <code>int CVDiagGetLastFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_diag.h:39</i><br>
	 * @deprecated use the safer methods {@link #CVDiagGetLastFlag(Pointer, LongBuffer)} and {@link #CVDiagGetLastFlag(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int CVDiagGetLastFlag(Pointer cvode_mem, LongByReference flag);
	/**
	 * Original signature : <code>int CVDiagGetLastFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_diag.h:39</i>
	 */
	int CVDiagGetLastFlag(Pointer cvode_mem, LongBuffer flag);
	/**
	 * Original signature : <code>char* CVDiagGetReturnFlagName(long long)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_diag.h:40</i>
	 */
	Pointer CVDiagGetReturnFlagName(long flag);
	/**
	 * -------------------------------------<br>
	 * Backward Problems - Function CVDiagB<br>
	 * -------------------------------------<br>
	 * Original signature : <code>int CVDiagB(void*, int)</code><br>
	 * <i>native declaration : include\cvodes\cvodes_diag.h:46</i>
	 */
	int CVDiagB(Pointer cvode_mem, int which);
	public static class SUNMatrix extends PointerType {
		public SUNMatrix(Pointer address) {
			super(address);
		}
		public SUNMatrix() {
			super();
		}
	};
	public static class SUNLinearSolver extends PointerType {
		public SUNLinearSolver(Pointer address) {
			super(address);
		}
		public SUNLinearSolver() {
			super();
		}
	};
	public static class SUNNonlinearSolver extends PointerType {
		public SUNNonlinearSolver(Pointer address) {
			super(address);
		}
		public SUNNonlinearSolver() {
			super();
		}
	};
	public static class SUNContext extends PointerType {
		public SUNContext(Pointer address) {
			super(address);
		}
		public SUNContext() {
			super();
		}
	};
	public static class FILE extends PointerType {
		public FILE(Pointer address) {
			super(address);
		}
		public FILE() {
			super();
		}
	};
	public static class N_Vector extends PointerType {
		public N_Vector(Pointer address) {
			super(address);
		}
		public N_Vector() {
			super();
		}
	};
}
