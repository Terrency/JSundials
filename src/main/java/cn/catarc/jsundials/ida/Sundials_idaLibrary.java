package cn.catarc.jsundials.ida;
import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.LongByReference;
import com.sun.jna.ptr.PointerByReference;
import java.nio.DoubleBuffer;
import java.nio.IntBuffer;
import java.nio.LongBuffer;
/**
 * JNA Wrapper for library <b>sundials_ida</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Sundials_idaLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "sundials_ida";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Sundials_idaLibrary.JNA_LIBRARY_NAME);
	public static final Sundials_idaLibrary INSTANCE = (Sundials_idaLibrary)Native.loadLibrary(Sundials_idaLibrary.JNA_LIBRARY_NAME, Sundials_idaLibrary.class);
	/** <i>native declaration : include\ida\ida_ls.h</i> */
	public static final int IDALS_SUCCESS = (int)0;
	/** <i>native declaration : include\ida\ida_ls.h</i> */
	public static final int IDALS_MEM_NULL = (int)-1;
	/** <i>native declaration : include\ida\ida_ls.h</i> */
	public static final int IDALS_LMEM_NULL = (int)-2;
	/** <i>native declaration : include\ida\ida_ls.h</i> */
	public static final int IDALS_ILL_INPUT = (int)-3;
	/** <i>native declaration : include\ida\ida_ls.h</i> */
	public static final int IDALS_MEM_FAIL = (int)-4;
	/** <i>native declaration : include\ida\ida_ls.h</i> */
	public static final int IDALS_PMEM_NULL = (int)-5;
	/** <i>native declaration : include\ida\ida_ls.h</i> */
	public static final int IDALS_JACFUNC_UNRECVR = (int)-6;
	/** <i>native declaration : include\ida\ida_ls.h</i> */
	public static final int IDALS_JACFUNC_RECVR = (int)-7;
	/** <i>native declaration : include\ida\ida_ls.h</i> */
	public static final int IDALS_SUNMAT_FAIL = (int)-8;
	/** <i>native declaration : include\ida\ida_ls.h</i> */
	public static final int IDALS_SUNLS_FAIL = (int)-9;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_NORMAL = (int)1;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_ONE_STEP = (int)2;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_YA_YDP_INIT = (int)1;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_Y_INIT = (int)2;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_SUCCESS = (int)0;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_TSTOP_RETURN = (int)1;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_ROOT_RETURN = (int)2;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_WARNING = (int)99;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_TOO_MUCH_WORK = (int)-1;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_TOO_MUCH_ACC = (int)-2;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_ERR_FAIL = (int)-3;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_CONV_FAIL = (int)-4;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_LINIT_FAIL = (int)-5;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_LSETUP_FAIL = (int)-6;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_LSOLVE_FAIL = (int)-7;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_RES_FAIL = (int)-8;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_REP_RES_ERR = (int)-9;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_RTFUNC_FAIL = (int)-10;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_CONSTR_FAIL = (int)-11;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_FIRST_RES_FAIL = (int)-12;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_LINESEARCH_FAIL = (int)-13;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_NO_RECOVERY = (int)-14;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_NLS_INIT_FAIL = (int)-15;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_NLS_SETUP_FAIL = (int)-16;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_NLS_FAIL = (int)-17;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_MEM_NULL = (int)-20;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_MEM_FAIL = (int)-21;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_ILL_INPUT = (int)-22;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_NO_MALLOC = (int)-23;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_BAD_EWT = (int)-24;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_BAD_K = (int)-25;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_BAD_T = (int)-26;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_BAD_DKY = (int)-27;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_VECTOROP_ERR = (int)-28;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_CONTEXT_ERR = (int)-29;
	/** <i>native declaration : include\ida\ida.h</i> */
	public static final int IDA_UNRECOGNIZED_ERROR = (int)-99;
	/** <i>native declaration : include\ida\ida_ls.h</i> */
	public interface IDALsJacFn extends Callback {
		int apply(double t, double c_j, Pointer y, Pointer yp, Pointer r, Pointer Jac, Pointer user_data, Pointer tmp1, Pointer tmp2, Pointer tmp3);
	};
	/** <i>native declaration : include\ida\ida_ls.h</i> */
	public interface IDALsPrecSetupFn extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer rr, double c_j, Pointer user_data);
	};
	/** <i>native declaration : include\ida\ida_ls.h</i> */
	public interface IDALsPrecSolveFn extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer rr, Pointer rvec, Pointer zvec, double c_j, double delta, Pointer user_data);
	};
	/** <i>native declaration : include\ida\ida_ls.h</i> */
	public interface IDALsJacTimesSetupFn extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer rr, double c_j, Pointer user_data);
	};
	/** <i>native declaration : include\ida\ida_ls.h</i> */
	public interface IDALsJacTimesVecFn extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer rr, Pointer v, Pointer Jv, double c_j, Pointer user_data, Pointer tmp1, Pointer tmp2);
	};
	/** <i>native declaration : include\ida\ida.h</i> */
	public interface IDAResFn extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer rr, Pointer user_data);
	};
	/** <i>native declaration : include\ida\ida.h</i> */
	public interface IDARootFn extends Callback {
		int apply(double t, Pointer y, Pointer yp, DoubleByReference gout, Pointer user_data);
	};
	/** <i>native declaration : include\ida\ida.h</i> */
	public interface IDAEwtFn extends Callback {
		int apply(Pointer y, Pointer ewt, Pointer user_data);
	};
	/** <i>native declaration : include\ida\ida_bbdpre.h</i> */
	public interface IDABBDLocalFn extends Callback {
		int apply(long Nlocal, double tt, Pointer yy, Pointer yp, Pointer gval, Pointer user_data);
	};
	/** <i>native declaration : include\ida\ida_bbdpre.h</i> */
	public interface IDABBDCommFn extends Callback {
		int apply(long Nlocal, double tt, Pointer yy, Pointer yp, Pointer user_data);
	};
	/**
	 * =================================================================<br>
	 * IDALS Exported functions<br>
	 * =================================================================<br>
	 * Original signature : <code>int IDASetLinearSolver(void*, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:50</i><br>
	 * @deprecated use the safer methods {@link #IDASetLinearSolver(com.sun.jna.Pointer, cn.catarc.jsundials.ida.Sundials_idaLibrary.SUNLinearSolver, cn.catarc.jsundials.ida.Sundials_idaLibrary.SUNMatrix)} and {@link #IDASetLinearSolver(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int IDASetLinearSolver(Pointer ida_mem, Pointer LS, Pointer A);
	/**
	 * =================================================================<br>
	 * IDALS Exported functions<br>
	 * =================================================================<br>
	 * Original signature : <code>int IDASetLinearSolver(void*, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:50</i>
	 */
	int IDASetLinearSolver(Pointer ida_mem, Sundials_idaLibrary.SUNLinearSolver LS, Sundials_idaLibrary.SUNMatrix A);
	/**
	 * -----------------------------------------------------------------<br>
	 * Optional inputs to the IDALS linear solver interface<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int IDASetJacFn(void*, IDALsJacFn)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:57</i>
	 */
	int IDASetJacFn(Pointer ida_mem, Sundials_idaLibrary.IDALsJacFn jac);
	/**
	 * Original signature : <code>int IDASetPreconditioner(void*, IDALsPrecSetupFn, IDALsPrecSolveFn)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:58</i>
	 */
	int IDASetPreconditioner(Pointer ida_mem, Sundials_idaLibrary.IDALsPrecSetupFn pset, Sundials_idaLibrary.IDALsPrecSolveFn psolve);
	/**
	 * Original signature : <code>int IDASetJacTimes(void*, IDALsJacTimesSetupFn, IDALsJacTimesVecFn)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:60</i>
	 */
	int IDASetJacTimes(Pointer ida_mem, Sundials_idaLibrary.IDALsJacTimesSetupFn jtsetup, Sundials_idaLibrary.IDALsJacTimesVecFn jtimes);
	/**
	 * Original signature : <code>int IDASetEpsLin(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:62</i>
	 */
	int IDASetEpsLin(Pointer ida_mem, double eplifac);
	/**
	 * Original signature : <code>int IDASetLSNormFactor(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:63</i>
	 */
	int IDASetLSNormFactor(Pointer ida_mem, double nrmfac);
	/**
	 * Original signature : <code>int IDASetLinearSolutionScaling(void*, int)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:64</i>
	 */
	int IDASetLinearSolutionScaling(Pointer ida_mem, int onoff);
	/**
	 * Original signature : <code>int IDASetIncrementFactor(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:66</i>
	 */
	int IDASetIncrementFactor(Pointer ida_mem, double dqincfac);
	/**
	 * -----------------------------------------------------------------<br>
	 * Optional outputs from the IDALS linear solver interface<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int IDAGetJac(void*, SUNMatrix*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:72</i><br>
	 * @deprecated use the safer method {@link #IDAGetJac(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int IDAGetJac(Pointer ida_mem, Pointer J);
	/**
	 * -----------------------------------------------------------------<br>
	 * Optional outputs from the IDALS linear solver interface<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int IDAGetJac(void*, SUNMatrix*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:72</i>
	 */
	int IDAGetJac(Pointer ida_mem, PointerByReference J);
	/**
	 * Original signature : <code>int IDAGetJacCj(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:73</i><br>
	 * @deprecated use the safer methods {@link #IDAGetJacCj(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #IDAGetJacCj(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetJacCj(Pointer ida_mem, DoubleByReference cj_J);
	/**
	 * Original signature : <code>int IDAGetJacCj(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:73</i>
	 */
	int IDAGetJacCj(Pointer ida_mem, DoubleBuffer cj_J);
	/**
	 * Original signature : <code>int IDAGetJacTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:74</i><br>
	 * @deprecated use the safer methods {@link #IDAGetJacTime(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #IDAGetJacTime(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetJacTime(Pointer ida_mem, DoubleByReference t_J);
	/**
	 * Original signature : <code>int IDAGetJacTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:74</i>
	 */
	int IDAGetJacTime(Pointer ida_mem, DoubleBuffer t_J);
	/**
	 * Original signature : <code>int IDAGetJacNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:75</i><br>
	 * @deprecated use the safer methods {@link #IDAGetJacNumSteps(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetJacNumSteps(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetJacNumSteps(Pointer ida_mem, LongByReference nst_J);
	/**
	 * Original signature : <code>int IDAGetJacNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:75</i>
	 */
	int IDAGetJacNumSteps(Pointer ida_mem, LongBuffer nst_J);
	/**
	 * Original signature : <code>int IDAGetLinWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:76</i><br>
	 * @deprecated use the safer methods {@link #IDAGetLinWorkSpace(com.sun.jna.Pointer, java.nio.LongBuffer, java.nio.LongBuffer)} and {@link #IDAGetLinWorkSpace(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetLinWorkSpace(Pointer ida_mem, LongByReference lenrwLS, LongByReference leniwLS);
	/**
	 * Original signature : <code>int IDAGetLinWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:76</i>
	 */
	int IDAGetLinWorkSpace(Pointer ida_mem, LongBuffer lenrwLS, LongBuffer leniwLS);
	/**
	 * Original signature : <code>int IDAGetNumJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:78</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumJacEvals(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumJacEvals(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumJacEvals(Pointer ida_mem, LongByReference njevals);
	/**
	 * Original signature : <code>int IDAGetNumJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:78</i>
	 */
	int IDAGetNumJacEvals(Pointer ida_mem, LongBuffer njevals);
	/**
	 * Original signature : <code>int IDAGetNumPrecEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:79</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumPrecEvals(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumPrecEvals(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumPrecEvals(Pointer ida_mem, LongByReference npevals);
	/**
	 * Original signature : <code>int IDAGetNumPrecEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:79</i>
	 */
	int IDAGetNumPrecEvals(Pointer ida_mem, LongBuffer npevals);
	/**
	 * Original signature : <code>int IDAGetNumPrecSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:80</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumPrecSolves(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumPrecSolves(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumPrecSolves(Pointer ida_mem, LongByReference npsolves);
	/**
	 * Original signature : <code>int IDAGetNumPrecSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:80</i>
	 */
	int IDAGetNumPrecSolves(Pointer ida_mem, LongBuffer npsolves);
	/**
	 * Original signature : <code>int IDAGetNumLinIters(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:81</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumLinIters(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumLinIters(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumLinIters(Pointer ida_mem, LongByReference nliters);
	/**
	 * Original signature : <code>int IDAGetNumLinIters(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:81</i>
	 */
	int IDAGetNumLinIters(Pointer ida_mem, LongBuffer nliters);
	/**
	 * Original signature : <code>int IDAGetNumLinConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:82</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumLinConvFails(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumLinConvFails(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumLinConvFails(Pointer ida_mem, LongByReference nlcfails);
	/**
	 * Original signature : <code>int IDAGetNumLinConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:82</i>
	 */
	int IDAGetNumLinConvFails(Pointer ida_mem, LongBuffer nlcfails);
	/**
	 * Original signature : <code>int IDAGetNumJTSetupEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:83</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumJTSetupEvals(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumJTSetupEvals(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumJTSetupEvals(Pointer ida_mem, LongByReference njtsetups);
	/**
	 * Original signature : <code>int IDAGetNumJTSetupEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:83</i>
	 */
	int IDAGetNumJTSetupEvals(Pointer ida_mem, LongBuffer njtsetups);
	/**
	 * Original signature : <code>int IDAGetNumJtimesEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:84</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumJtimesEvals(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumJtimesEvals(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumJtimesEvals(Pointer ida_mem, LongByReference njvevals);
	/**
	 * Original signature : <code>int IDAGetNumJtimesEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:84</i>
	 */
	int IDAGetNumJtimesEvals(Pointer ida_mem, LongBuffer njvevals);
	/**
	 * Original signature : <code>int IDAGetNumLinResEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:85</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumLinResEvals(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumLinResEvals(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumLinResEvals(Pointer ida_mem, LongByReference nrevalsLS);
	/**
	 * Original signature : <code>int IDAGetNumLinResEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:85</i>
	 */
	int IDAGetNumLinResEvals(Pointer ida_mem, LongBuffer nrevalsLS);
	/**
	 * Original signature : <code>int IDAGetLastLinFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:86</i><br>
	 * @deprecated use the safer methods {@link #IDAGetLastLinFlag(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetLastLinFlag(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetLastLinFlag(Pointer ida_mem, LongByReference flag);
	/**
	 * Original signature : <code>int IDAGetLastLinFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:86</i>
	 */
	int IDAGetLastLinFlag(Pointer ida_mem, LongBuffer flag);
	/**
	 * Original signature : <code>char* IDAGetLinReturnFlagName(long long)</code><br>
	 * <i>native declaration : include\ida\ida_ls.h:87</i>
	 */
	Pointer IDAGetLinReturnFlagName(long flag);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>void* IDACreate(SUNContext)</code><br>
	 * <i>native declaration : include\ida\ida.h:99</i><br>
	 * @deprecated use the safer methods {@link #IDACreate(cn.catarc.jsundials.ida.Sundials_idaLibrary.SUNContext)} and {@link #IDACreate(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer IDACreate(Pointer sunctx);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>void* IDACreate(SUNContext)</code><br>
	 * <i>native declaration : include\ida\ida.h:99</i>
	 */
	Pointer IDACreate(Sundials_idaLibrary.SUNContext sunctx);
	/**
	 * Original signature : <code>int IDAInit(void*, IDAResFn, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:101</i><br>
	 * @deprecated use the safer methods {@link #IDAInit(com.sun.jna.Pointer, cn.catarc.jsundials.ida.Sundials_idaLibrary.IDAResFn, double, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector)} and {@link #IDAInit(com.sun.jna.Pointer, cn.catarc.jsundials.ida.Sundials_idaLibrary.IDAResFn, double, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int IDAInit(Pointer ida_mem, Sundials_idaLibrary.IDAResFn res, double t0, Pointer yy0, Pointer yp0);
	/**
	 * Original signature : <code>int IDAInit(void*, IDAResFn, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:101</i>
	 */
	int IDAInit(Pointer ida_mem, Sundials_idaLibrary.IDAResFn res, double t0, Sundials_idaLibrary.N_Vector yy0, Sundials_idaLibrary.N_Vector yp0);
	/**
	 * Original signature : <code>int IDAReInit(void*, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:103</i><br>
	 * @deprecated use the safer methods {@link #IDAReInit(com.sun.jna.Pointer, double, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector)} and {@link #IDAReInit(com.sun.jna.Pointer, double, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int IDAReInit(Pointer ida_mem, double t0, Pointer yy0, Pointer yp0);
	/**
	 * Original signature : <code>int IDAReInit(void*, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:103</i>
	 */
	int IDAReInit(Pointer ida_mem, double t0, Sundials_idaLibrary.N_Vector yy0, Sundials_idaLibrary.N_Vector yp0);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int IDASStolerances(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:107</i>
	 */
	int IDASStolerances(Pointer ida_mem, double reltol, double abstol);
	/**
	 * Original signature : <code>int IDASVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:109</i><br>
	 * @deprecated use the safer methods {@link #IDASVtolerances(com.sun.jna.Pointer, double, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector)} and {@link #IDASVtolerances(com.sun.jna.Pointer, double, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int IDASVtolerances(Pointer ida_mem, double reltol, Pointer abstol);
	/**
	 * Original signature : <code>int IDASVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:109</i>
	 */
	int IDASVtolerances(Pointer ida_mem, double reltol, Sundials_idaLibrary.N_Vector abstol);
	/**
	 * Original signature : <code>int IDAWFtolerances(void*, IDAEwtFn)</code><br>
	 * <i>native declaration : include\ida\ida.h:111</i>
	 */
	int IDAWFtolerances(Pointer ida_mem, Sundials_idaLibrary.IDAEwtFn efun);
	/**
	 * Initial condition calculation function<br>
	 * Original signature : <code>int IDACalcIC(void*, int, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:114</i>
	 */
	int IDACalcIC(Pointer ida_mem, int icopt, double tout1);
	/**
	 * Initial condition calculation optional input functions<br>
	 * Original signature : <code>int IDASetNonlinConvCoefIC(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:117</i>
	 */
	int IDASetNonlinConvCoefIC(Pointer ida_mem, double epiccon);
	/**
	 * Original signature : <code>int IDASetMaxNumStepsIC(void*, int)</code><br>
	 * <i>native declaration : include\ida\ida.h:118</i>
	 */
	int IDASetMaxNumStepsIC(Pointer ida_mem, int maxnh);
	/**
	 * Original signature : <code>int IDASetMaxNumJacsIC(void*, int)</code><br>
	 * <i>native declaration : include\ida\ida.h:119</i>
	 */
	int IDASetMaxNumJacsIC(Pointer ida_mem, int maxnj);
	/**
	 * Original signature : <code>int IDASetMaxNumItersIC(void*, int)</code><br>
	 * <i>native declaration : include\ida\ida.h:120</i>
	 */
	int IDASetMaxNumItersIC(Pointer ida_mem, int maxnit);
	/**
	 * Original signature : <code>int IDASetLineSearchOffIC(void*, int)</code><br>
	 * <i>native declaration : include\ida\ida.h:121</i>
	 */
	int IDASetLineSearchOffIC(Pointer ida_mem, int lsoff);
	/**
	 * Original signature : <code>int IDASetStepToleranceIC(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:122</i>
	 */
	int IDASetStepToleranceIC(Pointer ida_mem, double steptol);
	/**
	 * Original signature : <code>int IDASetMaxBacksIC(void*, int)</code><br>
	 * <i>native declaration : include\ida\ida.h:123</i>
	 */
	int IDASetMaxBacksIC(Pointer ida_mem, int maxbacks);
	/**
	 * Optional input functions<br>
	 * Original signature : <code>int IDASetDeltaCjLSetup(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:126</i>
	 */
	int IDASetDeltaCjLSetup(Pointer ida_max, double dcj);
	/**
	 * Original signature : <code>int IDASetUserData(void*, void*)</code><br>
	 * <i>native declaration : include\ida\ida.h:127</i>
	 */
	int IDASetUserData(Pointer ida_mem, Pointer user_data);
	/**
	 * Original signature : <code>int IDASetMaxOrd(void*, int)</code><br>
	 * <i>native declaration : include\ida\ida.h:128</i>
	 */
	int IDASetMaxOrd(Pointer ida_mem, int maxord);
	/**
	 * Original signature : <code>int IDASetMaxNumSteps(void*, long long)</code><br>
	 * <i>native declaration : include\ida\ida.h:129</i>
	 */
	int IDASetMaxNumSteps(Pointer ida_mem, long mxsteps);
	/**
	 * Original signature : <code>int IDASetInitStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:130</i>
	 */
	int IDASetInitStep(Pointer ida_mem, double hin);
	/**
	 * Original signature : <code>int IDASetMaxStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:131</i>
	 */
	int IDASetMaxStep(Pointer ida_mem, double hmax);
	/**
	 * Original signature : <code>int IDASetMinStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:132</i>
	 */
	int IDASetMinStep(Pointer ida_mem, double hmin);
	/**
	 * Original signature : <code>int IDASetStopTime(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:133</i>
	 */
	int IDASetStopTime(Pointer ida_mem, double tstop);
	/**
	 * Original signature : <code>int IDAClearStopTime(void*)</code><br>
	 * <i>native declaration : include\ida\ida.h:134</i>
	 */
	int IDAClearStopTime(Pointer ida_mem);
	/**
	 * Original signature : <code>int IDASetMaxErrTestFails(void*, int)</code><br>
	 * <i>native declaration : include\ida\ida.h:135</i>
	 */
	int IDASetMaxErrTestFails(Pointer ida_mem, int maxnef);
	/**
	 * Original signature : <code>int IDASetSuppressAlg(void*, int)</code><br>
	 * <i>native declaration : include\ida\ida.h:136</i>
	 */
	int IDASetSuppressAlg(Pointer ida_mem, int suppressalg);
	/**
	 * Original signature : <code>int IDASetId(void*, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:137</i><br>
	 * @deprecated use the safer methods {@link #IDASetId(com.sun.jna.Pointer, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector)} and {@link #IDASetId(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int IDASetId(Pointer ida_mem, Pointer id);
	/**
	 * Original signature : <code>int IDASetId(void*, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:137</i>
	 */
	int IDASetId(Pointer ida_mem, Sundials_idaLibrary.N_Vector id);
	/**
	 * Original signature : <code>int IDASetConstraints(void*, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:138</i><br>
	 * @deprecated use the safer methods {@link #IDASetConstraints(com.sun.jna.Pointer, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector)} and {@link #IDASetConstraints(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int IDASetConstraints(Pointer ida_mem, Pointer constraints);
	/**
	 * Original signature : <code>int IDASetConstraints(void*, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:138</i>
	 */
	int IDASetConstraints(Pointer ida_mem, Sundials_idaLibrary.N_Vector constraints);
	/**
	 * Optional step adaptivity input functions<br>
	 * Original signature : <code>int IDASetEtaFixedStepBounds(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:141</i>
	 */
	int IDASetEtaFixedStepBounds(Pointer ida_mem, double eta_min_fx, double eta_max_fx);
	/**
	 * Original signature : <code>int IDASetEtaMin(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:144</i>
	 */
	int IDASetEtaMin(Pointer ida_mem, double eta_min);
	/**
	 * Original signature : <code>int IDASetEtaMax(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:146</i>
	 */
	int IDASetEtaMax(Pointer ida_mem, double eta_max);
	/**
	 * Original signature : <code>int IDASetEtaLow(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:148</i>
	 */
	int IDASetEtaLow(Pointer ida_mem, double eta_low);
	/**
	 * Original signature : <code>int IDASetEtaMinErrFail(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:150</i>
	 */
	int IDASetEtaMinErrFail(Pointer ida_mem, double eta_min_ef);
	/**
	 * Original signature : <code>int IDASetEtaConvFail(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:152</i>
	 */
	int IDASetEtaConvFail(Pointer ida_mem, double eta_cf);
	/**
	 * Nonlinear solve input functions<br>
	 * Original signature : <code>int IDASetMaxConvFails(void*, int)</code><br>
	 * <i>native declaration : include\ida\ida.h:156</i>
	 */
	int IDASetMaxConvFails(Pointer ida_mem, int maxncf);
	/**
	 * Original signature : <code>int IDASetMaxNonlinIters(void*, int)</code><br>
	 * <i>native declaration : include\ida\ida.h:157</i>
	 */
	int IDASetMaxNonlinIters(Pointer ida_mem, int maxcor);
	/**
	 * Original signature : <code>int IDASetNlsResFn(void*, IDAResFn)</code><br>
	 * <i>native declaration : include\ida\ida.h:158</i>
	 */
	int IDASetNlsResFn(Pointer IDA_mem, Sundials_idaLibrary.IDAResFn res);
	/**
	 * Original signature : <code>int IDASetNonlinConvCoef(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida.h:159</i>
	 */
	int IDASetNonlinConvCoef(Pointer ida_mem, double epcon);
	/**
	 * Original signature : <code>int IDASetNonlinearSolver(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\ida\ida.h:160</i><br>
	 * @deprecated use the safer methods {@link #IDASetNonlinearSolver(com.sun.jna.Pointer, cn.catarc.jsundials.ida.Sundials_idaLibrary.SUNNonlinearSolver)} and {@link #IDASetNonlinearSolver(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int IDASetNonlinearSolver(Pointer ida_mem, Pointer NLS);
	/**
	 * Original signature : <code>int IDASetNonlinearSolver(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\ida\ida.h:160</i>
	 */
	int IDASetNonlinearSolver(Pointer ida_mem, Sundials_idaLibrary.SUNNonlinearSolver NLS);
	/**
	 * Rootfinding initialization function<br>
	 * Original signature : <code>int IDARootInit(void*, int, IDARootFn)</code><br>
	 * <i>native declaration : include\ida\ida.h:163</i>
	 */
	int IDARootInit(Pointer ida_mem, int nrtfn, Sundials_idaLibrary.IDARootFn g);
	/**
	 * Rootfinding optional input functions<br>
	 * Original signature : <code>int IDASetRootDirection(void*, int*)</code><br>
	 * <i>native declaration : include\ida\ida.h:166</i><br>
	 * @deprecated use the safer methods {@link #IDASetRootDirection(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #IDASetRootDirection(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	int IDASetRootDirection(Pointer ida_mem, IntByReference rootdir);
	/**
	 * Rootfinding optional input functions<br>
	 * Original signature : <code>int IDASetRootDirection(void*, int*)</code><br>
	 * <i>native declaration : include\ida\ida.h:166</i>
	 */
	int IDASetRootDirection(Pointer ida_mem, IntBuffer rootdir);
	/**
	 * Original signature : <code>int IDASetNoInactiveRootWarn(void*)</code><br>
	 * <i>native declaration : include\ida\ida.h:167</i>
	 */
	int IDASetNoInactiveRootWarn(Pointer ida_mem);
	/**
	 * Solver function<br>
	 * Original signature : <code>int IDASolve(void*, sunrealtype, sunrealtype*, N_Vector, N_Vector, int)</code><br>
	 * <i>native declaration : include\ida\ida.h:170</i><br>
	 * @deprecated use the safer methods {@link #IDASolve(com.sun.jna.Pointer, double, java.nio.DoubleBuffer, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector, int)} and {@link #IDASolve(com.sun.jna.Pointer, double, com.sun.jna.ptr.DoubleByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int IDASolve(Pointer ida_mem, double tout, DoubleByReference tret, Pointer yret, Pointer ypret, int itask);
	/**
	 * Solver function<br>
	 * Original signature : <code>int IDASolve(void*, sunrealtype, sunrealtype*, N_Vector, N_Vector, int)</code><br>
	 * <i>native declaration : include\ida\ida.h:170</i>
	 */
	int IDASolve(Pointer ida_mem, double tout, DoubleBuffer tret, Sundials_idaLibrary.N_Vector yret, Sundials_idaLibrary.N_Vector ypret, int itask);
	/**
	 * Utility functions to update/compute y and yp based on ycor<br>
	 * Original signature : <code>int IDAComputeY(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:174</i><br>
	 * @deprecated use the safer methods {@link #IDAComputeY(com.sun.jna.Pointer, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector)} and {@link #IDAComputeY(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int IDAComputeY(Pointer ida_mem, Pointer ycor, Pointer y);
	/**
	 * Utility functions to update/compute y and yp based on ycor<br>
	 * Original signature : <code>int IDAComputeY(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:174</i>
	 */
	int IDAComputeY(Pointer ida_mem, Sundials_idaLibrary.N_Vector ycor, Sundials_idaLibrary.N_Vector y);
	/**
	 * Original signature : <code>int IDAComputeYp(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:175</i><br>
	 * @deprecated use the safer methods {@link #IDAComputeYp(com.sun.jna.Pointer, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector)} and {@link #IDAComputeYp(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int IDAComputeYp(Pointer ida_mem, Pointer ycor, Pointer yp);
	/**
	 * Original signature : <code>int IDAComputeYp(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:175</i>
	 */
	int IDAComputeYp(Pointer ida_mem, Sundials_idaLibrary.N_Vector ycor, Sundials_idaLibrary.N_Vector yp);
	/**
	 * Dense output function<br>
	 * Original signature : <code>int IDAGetDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:178</i><br>
	 * @deprecated use the safer methods {@link #IDAGetDky(com.sun.jna.Pointer, double, int, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector)} and {@link #IDAGetDky(com.sun.jna.Pointer, double, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int IDAGetDky(Pointer ida_mem, double t, int k, Pointer dky);
	/**
	 * Dense output function<br>
	 * Original signature : <code>int IDAGetDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:178</i>
	 */
	int IDAGetDky(Pointer ida_mem, double t, int k, Sundials_idaLibrary.N_Vector dky);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int IDAGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:181</i><br>
	 * @deprecated use the safer methods {@link #IDAGetWorkSpace(com.sun.jna.Pointer, java.nio.LongBuffer, java.nio.LongBuffer)} and {@link #IDAGetWorkSpace(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetWorkSpace(Pointer ida_mem, LongByReference lenrw, LongByReference leniw);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int IDAGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:181</i>
	 */
	int IDAGetWorkSpace(Pointer ida_mem, LongBuffer lenrw, LongBuffer leniw);
	/**
	 * Original signature : <code>int IDAGetNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:183</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumSteps(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumSteps(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumSteps(Pointer ida_mem, LongByReference nsteps);
	/**
	 * Original signature : <code>int IDAGetNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:183</i>
	 */
	int IDAGetNumSteps(Pointer ida_mem, LongBuffer nsteps);
	/**
	 * Original signature : <code>int IDAGetNumResEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:184</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumResEvals(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumResEvals(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumResEvals(Pointer ida_mem, LongByReference nrevals);
	/**
	 * Original signature : <code>int IDAGetNumResEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:184</i>
	 */
	int IDAGetNumResEvals(Pointer ida_mem, LongBuffer nrevals);
	/**
	 * Original signature : <code>int IDAGetNumLinSolvSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:185</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumLinSolvSetups(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumLinSolvSetups(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumLinSolvSetups(Pointer ida_mem, LongByReference nlinsetups);
	/**
	 * Original signature : <code>int IDAGetNumLinSolvSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:185</i>
	 */
	int IDAGetNumLinSolvSetups(Pointer ida_mem, LongBuffer nlinsetups);
	/**
	 * Original signature : <code>int IDAGetNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:186</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumErrTestFails(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumErrTestFails(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumErrTestFails(Pointer ida_mem, LongByReference netfails);
	/**
	 * Original signature : <code>int IDAGetNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:186</i>
	 */
	int IDAGetNumErrTestFails(Pointer ida_mem, LongBuffer netfails);
	/**
	 * Original signature : <code>int IDAGetNumBacktrackOps(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:187</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumBacktrackOps(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumBacktrackOps(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumBacktrackOps(Pointer ida_mem, LongByReference nbacktr);
	/**
	 * Original signature : <code>int IDAGetNumBacktrackOps(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:187</i>
	 */
	int IDAGetNumBacktrackOps(Pointer ida_mem, LongBuffer nbacktr);
	/**
	 * Original signature : <code>int IDAGetConsistentIC(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:188</i><br>
	 * @deprecated use the safer methods {@link #IDAGetConsistentIC(com.sun.jna.Pointer, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector)} and {@link #IDAGetConsistentIC(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int IDAGetConsistentIC(Pointer ida_mem, Pointer yy0_mod, Pointer yp0_mod);
	/**
	 * Original signature : <code>int IDAGetConsistentIC(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:188</i>
	 */
	int IDAGetConsistentIC(Pointer ida_mem, Sundials_idaLibrary.N_Vector yy0_mod, Sundials_idaLibrary.N_Vector yp0_mod);
	/**
	 * Original signature : <code>int IDAGetLastOrder(void*, int*)</code><br>
	 * <i>native declaration : include\ida\ida.h:190</i><br>
	 * @deprecated use the safer methods {@link #IDAGetLastOrder(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #IDAGetLastOrder(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	int IDAGetLastOrder(Pointer ida_mem, IntByReference klast);
	/**
	 * Original signature : <code>int IDAGetLastOrder(void*, int*)</code><br>
	 * <i>native declaration : include\ida\ida.h:190</i>
	 */
	int IDAGetLastOrder(Pointer ida_mem, IntBuffer klast);
	/**
	 * Original signature : <code>int IDAGetCurrentOrder(void*, int*)</code><br>
	 * <i>native declaration : include\ida\ida.h:191</i><br>
	 * @deprecated use the safer methods {@link #IDAGetCurrentOrder(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #IDAGetCurrentOrder(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	int IDAGetCurrentOrder(Pointer ida_mem, IntByReference kcur);
	/**
	 * Original signature : <code>int IDAGetCurrentOrder(void*, int*)</code><br>
	 * <i>native declaration : include\ida\ida.h:191</i>
	 */
	int IDAGetCurrentOrder(Pointer ida_mem, IntBuffer kcur);
	/**
	 * Original signature : <code>int IDAGetCurrentCj(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida.h:192</i><br>
	 * @deprecated use the safer methods {@link #IDAGetCurrentCj(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #IDAGetCurrentCj(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetCurrentCj(Pointer ida_mem, DoubleByReference cj);
	/**
	 * Original signature : <code>int IDAGetCurrentCj(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida.h:192</i>
	 */
	int IDAGetCurrentCj(Pointer ida_mem, DoubleBuffer cj);
	/**
	 * Original signature : <code>int IDAGetCurrentY(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\ida\ida.h:193</i><br>
	 * @deprecated use the safer method {@link #IDAGetCurrentY(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int IDAGetCurrentY(Pointer ida_mem, Pointer ycur);
	/**
	 * Original signature : <code>int IDAGetCurrentY(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\ida\ida.h:193</i>
	 */
	int IDAGetCurrentY(Pointer ida_mem, PointerByReference ycur);
	/**
	 * Original signature : <code>int IDAGetCurrentYp(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\ida\ida.h:194</i><br>
	 * @deprecated use the safer method {@link #IDAGetCurrentYp(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int IDAGetCurrentYp(Pointer ida_mem, Pointer ypcur);
	/**
	 * Original signature : <code>int IDAGetCurrentYp(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\ida\ida.h:194</i>
	 */
	int IDAGetCurrentYp(Pointer ida_mem, PointerByReference ypcur);
	/**
	 * Original signature : <code>int IDAGetActualInitStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida.h:195</i><br>
	 * @deprecated use the safer methods {@link #IDAGetActualInitStep(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #IDAGetActualInitStep(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetActualInitStep(Pointer ida_mem, DoubleByReference hinused);
	/**
	 * Original signature : <code>int IDAGetActualInitStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida.h:195</i>
	 */
	int IDAGetActualInitStep(Pointer ida_mem, DoubleBuffer hinused);
	/**
	 * Original signature : <code>int IDAGetLastStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida.h:196</i><br>
	 * @deprecated use the safer methods {@link #IDAGetLastStep(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #IDAGetLastStep(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetLastStep(Pointer ida_mem, DoubleByReference hlast);
	/**
	 * Original signature : <code>int IDAGetLastStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida.h:196</i>
	 */
	int IDAGetLastStep(Pointer ida_mem, DoubleBuffer hlast);
	/**
	 * Original signature : <code>int IDAGetCurrentStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida.h:197</i><br>
	 * @deprecated use the safer methods {@link #IDAGetCurrentStep(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #IDAGetCurrentStep(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetCurrentStep(Pointer ida_mem, DoubleByReference hcur);
	/**
	 * Original signature : <code>int IDAGetCurrentStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida.h:197</i>
	 */
	int IDAGetCurrentStep(Pointer ida_mem, DoubleBuffer hcur);
	/**
	 * Original signature : <code>int IDAGetCurrentTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida.h:198</i><br>
	 * @deprecated use the safer methods {@link #IDAGetCurrentTime(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #IDAGetCurrentTime(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetCurrentTime(Pointer ida_mem, DoubleByReference tcur);
	/**
	 * Original signature : <code>int IDAGetCurrentTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida.h:198</i>
	 */
	int IDAGetCurrentTime(Pointer ida_mem, DoubleBuffer tcur);
	/**
	 * Original signature : <code>int IDAGetTolScaleFactor(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida.h:199</i><br>
	 * @deprecated use the safer methods {@link #IDAGetTolScaleFactor(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #IDAGetTolScaleFactor(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetTolScaleFactor(Pointer ida_mem, DoubleByReference tolsfact);
	/**
	 * Original signature : <code>int IDAGetTolScaleFactor(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida.h:199</i>
	 */
	int IDAGetTolScaleFactor(Pointer ida_mem, DoubleBuffer tolsfact);
	/**
	 * Original signature : <code>int IDAGetErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:200</i><br>
	 * @deprecated use the safer methods {@link #IDAGetErrWeights(com.sun.jna.Pointer, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector)} and {@link #IDAGetErrWeights(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int IDAGetErrWeights(Pointer ida_mem, Pointer eweight);
	/**
	 * Original signature : <code>int IDAGetErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:200</i>
	 */
	int IDAGetErrWeights(Pointer ida_mem, Sundials_idaLibrary.N_Vector eweight);
	/**
	 * Original signature : <code>int IDAGetEstLocalErrors(void*, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:201</i><br>
	 * @deprecated use the safer methods {@link #IDAGetEstLocalErrors(com.sun.jna.Pointer, cn.catarc.jsundials.ida.Sundials_idaLibrary.N_Vector)} and {@link #IDAGetEstLocalErrors(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int IDAGetEstLocalErrors(Pointer ida_mem, Pointer ele);
	/**
	 * Original signature : <code>int IDAGetEstLocalErrors(void*, N_Vector)</code><br>
	 * <i>native declaration : include\ida\ida.h:201</i>
	 */
	int IDAGetEstLocalErrors(Pointer ida_mem, Sundials_idaLibrary.N_Vector ele);
	/**
	 * Original signature : <code>int IDAGetNumGEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:202</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumGEvals(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumGEvals(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumGEvals(Pointer ida_mem, LongByReference ngevals);
	/**
	 * Original signature : <code>int IDAGetNumGEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:202</i>
	 */
	int IDAGetNumGEvals(Pointer ida_mem, LongBuffer ngevals);
	/**
	 * Original signature : <code>int IDAGetRootInfo(void*, int*)</code><br>
	 * <i>native declaration : include\ida\ida.h:203</i><br>
	 * @deprecated use the safer methods {@link #IDAGetRootInfo(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #IDAGetRootInfo(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	int IDAGetRootInfo(Pointer ida_mem, IntByReference rootsfound);
	/**
	 * Original signature : <code>int IDAGetRootInfo(void*, int*)</code><br>
	 * <i>native declaration : include\ida\ida.h:203</i>
	 */
	int IDAGetRootInfo(Pointer ida_mem, IntBuffer rootsfound);
	/**
	 * Original signature : <code>int IDAGetIntegratorStats(void*, long long*, long long*, long long*, long long*, int*, int*, sunrealtype*, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida.h:204</i><br>
	 * @deprecated use the safer methods {@link #IDAGetIntegratorStats(com.sun.jna.Pointer, java.nio.LongBuffer, java.nio.LongBuffer, java.nio.LongBuffer, java.nio.LongBuffer, java.nio.IntBuffer, java.nio.IntBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer, java.nio.DoubleBuffer)} and {@link #IDAGetIntegratorStats(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetIntegratorStats(Pointer ida_mem, LongByReference nsteps, LongByReference nrevals, LongByReference nlinsetups, LongByReference netfails, IntByReference qlast, IntByReference qcur, DoubleByReference hinused, DoubleByReference hlast, DoubleByReference hcur, DoubleByReference tcur);
	/**
	 * Original signature : <code>int IDAGetIntegratorStats(void*, long long*, long long*, long long*, long long*, int*, int*, sunrealtype*, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\ida\ida.h:204</i>
	 */
	int IDAGetIntegratorStats(Pointer ida_mem, LongBuffer nsteps, LongBuffer nrevals, LongBuffer nlinsetups, LongBuffer netfails, IntBuffer qlast, IntBuffer qcur, DoubleBuffer hinused, DoubleBuffer hlast, DoubleBuffer hcur, DoubleBuffer tcur);
	/**
	 * Original signature : <code>int IDAGetNonlinearSystemData(void*, sunrealtype*, N_Vector*, N_Vector*, N_Vector*, N_Vector*, N_Vector*, sunrealtype*, void**)</code><br>
	 * <i>native declaration : include\ida\ida.h:210</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNonlinearSystemData(com.sun.jna.Pointer, java.nio.DoubleBuffer, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, java.nio.DoubleBuffer, com.sun.jna.ptr.PointerByReference)} and {@link #IDAGetNonlinearSystemData(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int IDAGetNonlinearSystemData(Pointer ida_mem, DoubleByReference tcur, Pointer yypred, Pointer yppred, Pointer yyn, Pointer ypn, Pointer res, DoubleByReference cj, PointerByReference user_data);
	/**
	 * Original signature : <code>int IDAGetNonlinearSystemData(void*, sunrealtype*, N_Vector*, N_Vector*, N_Vector*, N_Vector*, N_Vector*, sunrealtype*, void**)</code><br>
	 * <i>native declaration : include\ida\ida.h:210</i>
	 */
	int IDAGetNonlinearSystemData(Pointer ida_mem, DoubleBuffer tcur, PointerByReference yypred, PointerByReference yppred, PointerByReference yyn, PointerByReference ypn, PointerByReference res, DoubleBuffer cj, PointerByReference user_data);
	/**
	 * Original signature : <code>int IDAGetNonlinearSystemData(void*, sunrealtype*, N_Vector*, N_Vector*, N_Vector*, N_Vector*, N_Vector*, sunrealtype*, void**)</code><br>
	 * <i>native declaration : include\ida\ida.h:210</i>
	 */
	int IDAGetNonlinearSystemData(Pointer ida_mem, DoubleByReference tcur, PointerByReference yypred, PointerByReference yppred, PointerByReference yyn, PointerByReference ypn, PointerByReference res, DoubleByReference cj, PointerByReference user_data);
	/**
	 * Original signature : <code>int IDAGetNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:215</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumNonlinSolvIters(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumNonlinSolvIters(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumNonlinSolvIters(Pointer ida_mem, LongByReference nniters);
	/**
	 * Original signature : <code>int IDAGetNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:215</i>
	 */
	int IDAGetNumNonlinSolvIters(Pointer ida_mem, LongBuffer nniters);
	/**
	 * Original signature : <code>int IDAGetNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:216</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumNonlinSolvConvFails(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumNonlinSolvConvFails(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumNonlinSolvConvFails(Pointer ida_mem, LongByReference nnfails);
	/**
	 * Original signature : <code>int IDAGetNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:216</i>
	 */
	int IDAGetNumNonlinSolvConvFails(Pointer ida_mem, LongBuffer nnfails);
	/**
	 * Original signature : <code>int IDAGetNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:218</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNonlinSolvStats(com.sun.jna.Pointer, java.nio.LongBuffer, java.nio.LongBuffer)} and {@link #IDAGetNonlinSolvStats(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNonlinSolvStats(Pointer ida_mem, LongByReference nniters, LongByReference nnfails);
	/**
	 * Original signature : <code>int IDAGetNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:218</i>
	 */
	int IDAGetNonlinSolvStats(Pointer ida_mem, LongBuffer nniters, LongBuffer nnfails);
	/**
	 * Original signature : <code>int IDAGetNumStepSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:220</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumStepSolveFails(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDAGetNumStepSolveFails(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumStepSolveFails(Pointer ida_mem, LongByReference nncfails);
	/**
	 * Original signature : <code>int IDAGetNumStepSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida.h:220</i>
	 */
	int IDAGetNumStepSolveFails(Pointer ida_mem, LongBuffer nncfails);
	/**
	 * Original signature : <code>int IDAGetUserData(void*, void**)</code><br>
	 * <i>native declaration : include\ida\ida.h:221</i>
	 */
	int IDAGetUserData(Pointer ida_mem, PointerByReference user_data);
	/**
	 * Original signature : <code>int IDAPrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\ida\ida.h:222</i><br>
	 * @deprecated use the safer method {@link #IDAPrintAllStats(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int IDAPrintAllStats(Pointer ida_mem, Pointer outfile, int fmt);
	/**
	 * Original signature : <code>int IDAPrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\ida\ida.h:222</i>
	 */
	int IDAPrintAllStats(Pointer ida_mem, PointerByReference outfile, int fmt);
	/**
	 * Original signature : <code>char* IDAGetReturnFlagName(long long)</code><br>
	 * <i>native declaration : include\ida\ida.h:224</i>
	 */
	Pointer IDAGetReturnFlagName(long flag);
	/**
	 * Free function<br>
	 * Original signature : <code>void IDAFree(void**)</code><br>
	 * <i>native declaration : include\ida\ida.h:227</i>
	 */
	void IDAFree(PointerByReference ida_mem);
	/**
	 * IDALS interface function that depends on IDAResFn<br>
	 * Original signature : <code>int IDASetJacTimesResFn(void*, IDAResFn)</code><br>
	 * <i>native declaration : include\ida\ida.h:230</i>
	 */
	int IDASetJacTimesResFn(Pointer ida_mem, Sundials_idaLibrary.IDAResFn jtimesResFn);
	/**
	 * Exported Functions<br>
	 * Original signature : <code>int IDABBDPrecInit(void*, sunindextype, sunindextype, sunindextype, sunindextype, sunindextype, sunrealtype, IDABBDLocalFn, IDABBDCommFn)</code><br>
	 * <i>native declaration : include\ida\ida_bbdpre.h:16</i>
	 */
	int IDABBDPrecInit(Pointer ida_mem, long Nlocal, long mudq, long mldq, long mukeep, long mlkeep, double dq_rel_yy, Sundials_idaLibrary.IDABBDLocalFn Gres, Sundials_idaLibrary.IDABBDCommFn Gcomm);
	/**
	 * Original signature : <code>int IDABBDPrecReInit(void*, sunindextype, sunindextype, sunrealtype)</code><br>
	 * <i>native declaration : include\ida\ida_bbdpre.h:22</i>
	 */
	int IDABBDPrecReInit(Pointer ida_mem, long mudq, long mldq, double dq_rel_yy);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int IDABBDPrecGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_bbdpre.h:27</i><br>
	 * @deprecated use the safer methods {@link #IDABBDPrecGetWorkSpace(com.sun.jna.Pointer, java.nio.LongBuffer, java.nio.LongBuffer)} and {@link #IDABBDPrecGetWorkSpace(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDABBDPrecGetWorkSpace(Pointer ida_mem, LongByReference lenrwBBDP, LongByReference leniwBBDP);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int IDABBDPrecGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_bbdpre.h:27</i>
	 */
	int IDABBDPrecGetWorkSpace(Pointer ida_mem, LongBuffer lenrwBBDP, LongBuffer leniwBBDP);
	/**
	 * Original signature : <code>int IDABBDPrecGetNumGfnEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_bbdpre.h:30</i><br>
	 * @deprecated use the safer methods {@link #IDABBDPrecGetNumGfnEvals(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #IDABBDPrecGetNumGfnEvals(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	@Deprecated 
	int IDABBDPrecGetNumGfnEvals(Pointer ida_mem, LongByReference ngevalsBBDP);
	/**
	 * Original signature : <code>int IDABBDPrecGetNumGfnEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\ida\ida_bbdpre.h:30</i>
	 */
	int IDABBDPrecGetNumGfnEvals(Pointer ida_mem, LongBuffer ngevalsBBDP);
	public static class SUNMatrix extends PointerType {
		public SUNMatrix(Pointer address) {
			super(address);
		}
		public SUNMatrix() {
			super();
		}
	};
	public static class SUNLinearSolver extends PointerType {
		public SUNLinearSolver(Pointer address) {
			super(address);
		}
		public SUNLinearSolver() {
			super();
		}
	};
	public static class SUNNonlinearSolver extends PointerType {
		public SUNNonlinearSolver(Pointer address) {
			super(address);
		}
		public SUNNonlinearSolver() {
			super();
		}
	};
	public static class SUNContext extends PointerType {
		public SUNContext(Pointer address) {
			super(address);
		}
		public SUNContext() {
			super();
		}
	};
	public static class FILE extends PointerType {
		public FILE(Pointer address) {
			super(address);
		}
		public FILE() {
			super();
		}
	};
	public static class N_Vector extends PointerType {
		public N_Vector(Pointer address) {
			super(address);
		}
		public N_Vector() {
			super();
		}
	};
}
