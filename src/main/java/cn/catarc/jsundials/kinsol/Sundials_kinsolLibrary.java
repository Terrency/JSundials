package cn.catarc.jsundials.kinsol;

import com.sun.jna.*;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.LongByReference;
import com.sun.jna.ptr.PointerByReference;

import java.nio.DoubleBuffer;
import java.nio.LongBuffer;
/**
 * JNA Wrapper for library <b>sundials_kinsol</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Sundials_kinsolLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "sundials_kinsol";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Sundials_kinsolLibrary.JNA_LIBRARY_NAME);
	public static final Sundials_kinsolLibrary INSTANCE = (Sundials_kinsolLibrary)Native.loadLibrary(Sundials_kinsolLibrary.JNA_LIBRARY_NAME, Sundials_kinsolLibrary.class);
	/** <i>native declaration : include\kinsol\kinsol_ls.h</i> */
	public static final int KINLS_SUCCESS = (int)0;
	/** <i>native declaration : include\kinsol\kinsol_ls.h</i> */
	public static final int KINLS_MEM_NULL = (int)-1;
	/** <i>native declaration : include\kinsol\kinsol_ls.h</i> */
	public static final int KINLS_LMEM_NULL = (int)-2;
	/** <i>native declaration : include\kinsol\kinsol_ls.h</i> */
	public static final int KINLS_ILL_INPUT = (int)-3;
	/** <i>native declaration : include\kinsol\kinsol_ls.h</i> */
	public static final int KINLS_MEM_FAIL = (int)-4;
	/** <i>native declaration : include\kinsol\kinsol_ls.h</i> */
	public static final int KINLS_PMEM_NULL = (int)-5;
	/** <i>native declaration : include\kinsol\kinsol_ls.h</i> */
	public static final int KINLS_JACFUNC_ERR = (int)-6;
	/** <i>native declaration : include\kinsol\kinsol_ls.h</i> */
	public static final int KINLS_SUNMAT_FAIL = (int)-7;
	/** <i>native declaration : include\kinsol\kinsol_ls.h</i> */
	public static final int KINLS_SUNLS_FAIL = (int)-8;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_SUCCESS = (int)0;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_INITIAL_GUESS_OK = (int)1;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_STEP_LT_STPTOL = (int)2;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_WARNING = (int)99;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_MEM_NULL = (int)-1;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_ILL_INPUT = (int)-2;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_NO_MALLOC = (int)-3;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_MEM_FAIL = (int)-4;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_LINESEARCH_NONCONV = (int)-5;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_MAXITER_REACHED = (int)-6;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_MXNEWT_5X_EXCEEDED = (int)-7;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_LINESEARCH_BCFAIL = (int)-8;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_LINSOLV_NO_RECOVERY = (int)-9;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_LINIT_FAIL = (int)-10;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_LSETUP_FAIL = (int)-11;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_LSOLVE_FAIL = (int)-12;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_SYSFUNC_FAIL = (int)-13;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_FIRST_SYSFUNC_ERR = (int)-14;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_REPTD_SYSFUNC_ERR = (int)-15;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_VECTOROP_ERR = (int)-16;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_CONTEXT_ERR = (int)-17;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_ORTH_MGS = (int)0;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_ORTH_ICWY = (int)1;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_ORTH_CGS2 = (int)2;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_ORTH_DCGS2 = (int)3;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_ETACHOICE1 = (int)1;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_ETACHOICE2 = (int)2;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_ETACONSTANT = (int)3;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_NONE = (int)0;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_LINESEARCH = (int)1;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_PICARD = (int)2;
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public static final int KIN_FP = (int)3;
	/** <i>native declaration : include\kinsol\kinsol_bbdpre.h</i> */
	public static final int KINBBDPRE_SUCCESS = (int)0;
	/** <i>native declaration : include\kinsol\kinsol_bbdpre.h</i> */
	public static final int KINBBDPRE_PDATA_NULL = (int)-11;
	/** <i>native declaration : include\kinsol\kinsol_bbdpre.h</i> */
	public static final int KINBBDPRE_FUNC_UNRECVR = (int)-12;
	/** <i>native declaration : include\kinsol\kinsol_ls.h</i> */
	public interface KINLsJacFn extends Callback {
		int apply(Pointer u, Pointer fu, Pointer J, Pointer user_data, Pointer tmp1, Pointer tmp2);
	};
	/** <i>native declaration : include\kinsol\kinsol_ls.h</i> */
	public interface KINLsPrecSetupFn extends Callback {
		int apply(Pointer uu, Pointer uscale, Pointer fval, Pointer fscale, Pointer user_data);
	};
	/** <i>native declaration : include\kinsol\kinsol_ls.h</i> */
	public interface KINLsPrecSolveFn extends Callback {
		int apply(Pointer uu, Pointer uscale, Pointer fval, Pointer fscale, Pointer vv, Pointer user_data);
	};
	/** <i>native declaration : include\kinsol\kinsol_ls.h</i> */
	public interface KINLsJacTimesVecFn extends Callback {
		int apply(Pointer v, Pointer Jv, Pointer uu, IntByReference new_uu, Pointer J_data);
	};
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public interface KINSysFn extends Callback {
		int apply(Pointer uu, Pointer fval, Pointer user_data);
	};
	/** <i>native declaration : include\kinsol\kinsol.h</i> */
	public interface KINInfoHandlerFn extends Callback {
		void apply(Pointer module, Pointer function, Pointer msg, Pointer user_data);
	};
	/** <i>native declaration : include\kinsol\kinsol_bbdpre.h</i> */
	public interface KINBBDCommFn extends Callback {
		int apply(long Nlocal, Pointer u, Pointer user_data);
	};
	/** <i>native declaration : include\kinsol\kinsol_bbdpre.h</i> */
	public interface KINBBDLocalFn extends Callback {
		int apply(long Nlocal, Pointer uu, Pointer gval, Pointer user_data);
	};
	/**
	 * ==================================================================<br>
	 * KINLS Exported functions<br>
	 * ==================================================================<br>
	 * Original signature : <code>int KINSetLinearSolver(void*, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:41</i><br>
	 * @deprecated use the safer methods {@link #KINSetLinearSolver(Pointer, SUNLinearSolver, SUNMatrix)} and {@link #KINSetLinearSolver(Pointer, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int KINSetLinearSolver(Pointer kinmem, Pointer LS, Pointer A);
	/**
	 * ==================================================================<br>
	 * KINLS Exported functions<br>
	 * ==================================================================<br>
	 * Original signature : <code>int KINSetLinearSolver(void*, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:41</i>
	 */
	int KINSetLinearSolver(Pointer kinmem, SUNLinearSolver LS, SUNMatrix A);
	/**
	 * -----------------------------------------------------------------<br>
	 * Optional inputs to the KINLS linear solver interface<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int KINSetJacFn(void*, KINLsJacFn)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:48</i>
	 */
	int KINSetJacFn(Pointer kinmem, KINLsJacFn jac);
	/**
	 * Original signature : <code>int KINSetPreconditioner(void*, KINLsPrecSetupFn, KINLsPrecSolveFn)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:49</i>
	 */
	int KINSetPreconditioner(Pointer kinmem, KINLsPrecSetupFn psetup, KINLsPrecSolveFn psolve);
	/**
	 * Original signature : <code>int KINSetJacTimesVecFn(void*, KINLsJacTimesVecFn)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:51</i>
	 */
	int KINSetJacTimesVecFn(Pointer kinmem, KINLsJacTimesVecFn jtv);
	/**
	 * -----------------------------------------------------------------<br>
	 * Optional outputs from the KINLS linear solver interface<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int KINGetJac(void*, SUNMatrix*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:57</i><br>
	 * @deprecated use the safer method {@link #KINGetJac(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int KINGetJac(Pointer kinmem, Pointer J);
	/**
	 * -----------------------------------------------------------------<br>
	 * Optional outputs from the KINLS linear solver interface<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int KINGetJac(void*, SUNMatrix*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:57</i>
	 */
	int KINGetJac(Pointer kinmem, PointerByReference J);
	/**
	 * Original signature : <code>int KINGetJacNumIters(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:58</i><br>
	 * @deprecated use the safer methods {@link #KINGetJacNumIters(Pointer, LongBuffer)} and {@link #KINGetJacNumIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int KINGetJacNumIters(Pointer kinmem, LongByReference nni_J);
	/**
	 * Original signature : <code>int KINGetJacNumIters(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:58</i>
	 */
	int KINGetJacNumIters(Pointer kinmem, LongBuffer nni_J);
	/**
	 * Original signature : <code>int KINGetLinWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:59</i><br>
	 * @deprecated use the safer methods {@link #KINGetLinWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #KINGetLinWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int KINGetLinWorkSpace(Pointer kinmem, LongByReference lenrwLS, LongByReference leniwLS);
	/**
	 * Original signature : <code>int KINGetLinWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:59</i>
	 */
	int KINGetLinWorkSpace(Pointer kinmem, LongBuffer lenrwLS, LongBuffer leniwLS);
	/**
	 * Original signature : <code>int KINGetNumJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:61</i><br>
	 * @deprecated use the safer methods {@link #KINGetNumJacEvals(Pointer, LongBuffer)} and {@link #KINGetNumJacEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int KINGetNumJacEvals(Pointer kinmem, LongByReference njevals);
	/**
	 * Original signature : <code>int KINGetNumJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:61</i>
	 */
	int KINGetNumJacEvals(Pointer kinmem, LongBuffer njevals);
	/**
	 * Original signature : <code>int KINGetNumLinFuncEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:62</i><br>
	 * @deprecated use the safer methods {@link #KINGetNumLinFuncEvals(Pointer, LongBuffer)} and {@link #KINGetNumLinFuncEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int KINGetNumLinFuncEvals(Pointer kinmem, LongByReference nfevals);
	/**
	 * Original signature : <code>int KINGetNumLinFuncEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:62</i>
	 */
	int KINGetNumLinFuncEvals(Pointer kinmem, LongBuffer nfevals);
	/**
	 * Original signature : <code>int KINGetNumPrecEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:63</i><br>
	 * @deprecated use the safer methods {@link #KINGetNumPrecEvals(Pointer, LongBuffer)} and {@link #KINGetNumPrecEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int KINGetNumPrecEvals(Pointer kinmem, LongByReference npevals);
	/**
	 * Original signature : <code>int KINGetNumPrecEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:63</i>
	 */
	int KINGetNumPrecEvals(Pointer kinmem, LongBuffer npevals);
	/**
	 * Original signature : <code>int KINGetNumPrecSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:64</i><br>
	 * @deprecated use the safer methods {@link #KINGetNumPrecSolves(Pointer, LongBuffer)} and {@link #KINGetNumPrecSolves(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int KINGetNumPrecSolves(Pointer kinmem, LongByReference npsolves);
	/**
	 * Original signature : <code>int KINGetNumPrecSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:64</i>
	 */
	int KINGetNumPrecSolves(Pointer kinmem, LongBuffer npsolves);
	/**
	 * Original signature : <code>int KINGetNumLinIters(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:65</i><br>
	 * @deprecated use the safer methods {@link #KINGetNumLinIters(Pointer, LongBuffer)} and {@link #KINGetNumLinIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int KINGetNumLinIters(Pointer kinmem, LongByReference nliters);
	/**
	 * Original signature : <code>int KINGetNumLinIters(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:65</i>
	 */
	int KINGetNumLinIters(Pointer kinmem, LongBuffer nliters);
	/**
	 * Original signature : <code>int KINGetNumLinConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:66</i><br>
	 * @deprecated use the safer methods {@link #KINGetNumLinConvFails(Pointer, LongBuffer)} and {@link #KINGetNumLinConvFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int KINGetNumLinConvFails(Pointer kinmem, LongByReference nlcfails);
	/**
	 * Original signature : <code>int KINGetNumLinConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:66</i>
	 */
	int KINGetNumLinConvFails(Pointer kinmem, LongBuffer nlcfails);
	/**
	 * Original signature : <code>int KINGetNumJtimesEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:67</i><br>
	 * @deprecated use the safer methods {@link #KINGetNumJtimesEvals(Pointer, LongBuffer)} and {@link #KINGetNumJtimesEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int KINGetNumJtimesEvals(Pointer kinmem, LongByReference njvevals);
	/**
	 * Original signature : <code>int KINGetNumJtimesEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:67</i>
	 */
	int KINGetNumJtimesEvals(Pointer kinmem, LongBuffer njvevals);
	/**
	 * Original signature : <code>int KINGetLastLinFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:68</i><br>
	 * @deprecated use the safer methods {@link #KINGetLastLinFlag(Pointer, LongBuffer)} and {@link #KINGetLastLinFlag(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int KINGetLastLinFlag(Pointer kinmem, LongByReference flag);
	/**
	 * Original signature : <code>int KINGetLastLinFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:68</i>
	 */
	int KINGetLastLinFlag(Pointer kinmem, LongBuffer flag);
	/**
	 * Original signature : <code>char* KINGetLinReturnFlagName(long long)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_ls.h:69</i>
	 */
	Pointer KINGetLinReturnFlagName(long flag);
	/**
	 * Creation function<br>
	 * Original signature : <code>void* KINCreate(SUNContext)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:92</i><br>
	 * @deprecated use the safer methods {@link #KINCreate(SUNContext)} and {@link #KINCreate(Pointer)} instead
	 */
	@Deprecated 
	Pointer KINCreate(Pointer sunctx);
	/**
	 * Creation function<br>
	 * Original signature : <code>void* KINCreate(SUNContext)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:92</i>
	 */
	Pointer KINCreate(SUNContext sunctx);
	/**
	 * Initialization function<br>
	 * Original signature : <code>int KINInit(void*, KINSysFn, N_Vector)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:95</i><br>
	 * @deprecated use the safer methods {@link #KINInit(Pointer, KINSysFn, N_Vector)} and {@link #KINInit(Pointer, KINSysFn, Pointer)} instead
	 */
	@Deprecated 
	int KINInit(Pointer kinmem, KINSysFn func, Pointer tmpl);
	/**
	 * Initialization function<br>
	 * Original signature : <code>int KINInit(void*, KINSysFn, N_Vector)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:95</i>
	 */
	int KINInit(Pointer kinmem, KINSysFn func, N_Vector tmpl);
	/**
	 * Solver function<br>
	 * Original signature : <code>int KINSol(void*, N_Vector, int, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:98</i><br>
	 * @deprecated use the safer methods {@link #KINSol(Pointer, N_Vector, int, N_Vector, N_Vector)} and {@link #KINSol(Pointer, Pointer, int, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int KINSol(Pointer kinmem, Pointer uu, int strategy, Pointer u_scale, Pointer f_scale);
	/**
	 * Solver function<br>
	 * Original signature : <code>int KINSol(void*, N_Vector, int, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:98</i>
	 */
	int KINSol(Pointer kinmem, N_Vector uu, int strategy, N_Vector u_scale, N_Vector f_scale);
	/**
	 * Optional input functions<br>
	 * Original signature : <code>int KINSetUserData(void*, void*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:102</i>
	 */
	int KINSetUserData(Pointer kinmem, Pointer user_data);
	/**
	 * Original signature : <code>int KINSetDamping(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:103</i>
	 */
	int KINSetDamping(Pointer kinmem, double beta);
	/**
	 * Original signature : <code>int KINSetMAA(void*, long long)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:104</i>
	 */
	int KINSetMAA(Pointer kinmem, long maa);
	/**
	 * Original signature : <code>int KINSetOrthAA(void*, int)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:105</i>
	 */
	int KINSetOrthAA(Pointer kinmem, int orthaa);
	/**
	 * Original signature : <code>int KINSetDelayAA(void*, long long)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:106</i>
	 */
	int KINSetDelayAA(Pointer kinmem, long delay);
	/**
	 * Original signature : <code>int KINSetDampingAA(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:107</i>
	 */
	int KINSetDampingAA(Pointer kinmem, double beta);
	/**
	 * Original signature : <code>int KINSetReturnNewest(void*, int)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:108</i>
	 */
	int KINSetReturnNewest(Pointer kinmem, int ret_newest);
	/**
	 * Original signature : <code>int KINSetNumMaxIters(void*, long long)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:109</i>
	 */
	int KINSetNumMaxIters(Pointer kinmem, long mxiter);
	/**
	 * Original signature : <code>int KINSetNoInitSetup(void*, int)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:110</i>
	 */
	int KINSetNoInitSetup(Pointer kinmem, int noInitSetup);
	/**
	 * Original signature : <code>int KINSetNoResMon(void*, int)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:111</i>
	 */
	int KINSetNoResMon(Pointer kinmem, int noNNIResMon);
	/**
	 * Original signature : <code>int KINSetMaxSetupCalls(void*, long long)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:112</i>
	 */
	int KINSetMaxSetupCalls(Pointer kinmem, long msbset);
	/**
	 * Original signature : <code>int KINSetMaxSubSetupCalls(void*, long long)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:113</i>
	 */
	int KINSetMaxSubSetupCalls(Pointer kinmem, long msbsetsub);
	/**
	 * Original signature : <code>int KINSetEtaForm(void*, int)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:114</i>
	 */
	int KINSetEtaForm(Pointer kinmem, int etachoice);
	/**
	 * Original signature : <code>int KINSetEtaConstValue(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:115</i>
	 */
	int KINSetEtaConstValue(Pointer kinmem, double eta);
	/**
	 * Original signature : <code>int KINSetEtaParams(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:116</i>
	 */
	int KINSetEtaParams(Pointer kinmem, double egamma, double ealpha);
	/**
	 * Original signature : <code>int KINSetResMonParams(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:118</i>
	 */
	int KINSetResMonParams(Pointer kinmem, double omegamin, double omegamax);
	/**
	 * Original signature : <code>int KINSetResMonConstValue(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:120</i>
	 */
	int KINSetResMonConstValue(Pointer kinmem, double omegaconst);
	/**
	 * Original signature : <code>int KINSetNoMinEps(void*, int)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:121</i>
	 */
	int KINSetNoMinEps(Pointer kinmem, int noMinEps);
	/**
	 * Original signature : <code>int KINSetMaxNewtonStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:122</i>
	 */
	int KINSetMaxNewtonStep(Pointer kinmem, double mxnewtstep);
	/**
	 * Original signature : <code>int KINSetMaxBetaFails(void*, long long)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:123</i>
	 */
	int KINSetMaxBetaFails(Pointer kinmem, long mxnbcf);
	/**
	 * Original signature : <code>int KINSetRelErrFunc(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:124</i>
	 */
	int KINSetRelErrFunc(Pointer kinmem, double relfunc);
	/**
	 * Original signature : <code>int KINSetFuncNormTol(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:125</i>
	 */
	int KINSetFuncNormTol(Pointer kinmem, double fnormtol);
	/**
	 * Original signature : <code>int KINSetScaledStepTol(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:126</i>
	 */
	int KINSetScaledStepTol(Pointer kinmem, double scsteptol);
	/**
	 * Original signature : <code>int KINSetConstraints(void*, N_Vector)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:127</i><br>
	 * @deprecated use the safer methods {@link #KINSetConstraints(Pointer, N_Vector)} and {@link #KINSetConstraints(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int KINSetConstraints(Pointer kinmem, Pointer constraints);
	/**
	 * Original signature : <code>int KINSetConstraints(void*, N_Vector)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:127</i>
	 */
	int KINSetConstraints(Pointer kinmem, N_Vector constraints);
	/**
	 * Original signature : <code>int KINSetSysFunc(void*, KINSysFn)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:128</i>
	 */
	int KINSetSysFunc(Pointer kinmem, KINSysFn func);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int KINGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:131</i><br>
	 * @deprecated use the safer methods {@link #KINGetWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #KINGetWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int KINGetWorkSpace(Pointer kinmem, LongByReference lenrw, LongByReference leniw);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int KINGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:131</i>
	 */
	int KINGetWorkSpace(Pointer kinmem, LongBuffer lenrw, LongBuffer leniw);
	/**
	 * Original signature : <code>int KINGetNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:133</i><br>
	 * @deprecated use the safer methods {@link #KINGetNumNonlinSolvIters(Pointer, LongBuffer)} and {@link #KINGetNumNonlinSolvIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int KINGetNumNonlinSolvIters(Pointer kinmem, LongByReference nniters);
	/**
	 * Original signature : <code>int KINGetNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:133</i>
	 */
	int KINGetNumNonlinSolvIters(Pointer kinmem, LongBuffer nniters);
	/**
	 * Original signature : <code>int KINGetNumFuncEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:134</i><br>
	 * @deprecated use the safer methods {@link #KINGetNumFuncEvals(Pointer, LongBuffer)} and {@link #KINGetNumFuncEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int KINGetNumFuncEvals(Pointer kinmem, LongByReference nfevals);
	/**
	 * Original signature : <code>int KINGetNumFuncEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:134</i>
	 */
	int KINGetNumFuncEvals(Pointer kinmem, LongBuffer nfevals);
	/**
	 * Original signature : <code>int KINGetNumBetaCondFails(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:135</i><br>
	 * @deprecated use the safer methods {@link #KINGetNumBetaCondFails(Pointer, LongBuffer)} and {@link #KINGetNumBetaCondFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int KINGetNumBetaCondFails(Pointer kinmem, LongByReference nbcfails);
	/**
	 * Original signature : <code>int KINGetNumBetaCondFails(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:135</i>
	 */
	int KINGetNumBetaCondFails(Pointer kinmem, LongBuffer nbcfails);
	/**
	 * Original signature : <code>int KINGetNumBacktrackOps(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:136</i><br>
	 * @deprecated use the safer methods {@link #KINGetNumBacktrackOps(Pointer, LongBuffer)} and {@link #KINGetNumBacktrackOps(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int KINGetNumBacktrackOps(Pointer kinmem, LongByReference nbacktr);
	/**
	 * Original signature : <code>int KINGetNumBacktrackOps(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:136</i>
	 */
	int KINGetNumBacktrackOps(Pointer kinmem, LongBuffer nbacktr);
	/**
	 * Original signature : <code>int KINGetFuncNorm(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:137</i><br>
	 * @deprecated use the safer methods {@link #KINGetFuncNorm(Pointer, DoubleBuffer)} and {@link #KINGetFuncNorm(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int KINGetFuncNorm(Pointer kinmem, DoubleByReference fnorm);
	/**
	 * Original signature : <code>int KINGetFuncNorm(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:137</i>
	 */
	int KINGetFuncNorm(Pointer kinmem, DoubleBuffer fnorm);
	/**
	 * Original signature : <code>int KINGetStepLength(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:138</i><br>
	 * @deprecated use the safer methods {@link #KINGetStepLength(Pointer, DoubleBuffer)} and {@link #KINGetStepLength(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int KINGetStepLength(Pointer kinmem, DoubleByReference steplength);
	/**
	 * Original signature : <code>int KINGetStepLength(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:138</i>
	 */
	int KINGetStepLength(Pointer kinmem, DoubleBuffer steplength);
	/**
	 * Original signature : <code>int KINGetUserData(void*, void**)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:139</i>
	 */
	int KINGetUserData(Pointer kinmem, PointerByReference user_data);
	/**
	 * Original signature : <code>int KINPrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:140</i><br>
	 * @deprecated use the safer method {@link #KINPrintAllStats(Pointer, PointerByReference, int)} instead
	 */
	@Deprecated 
	int KINPrintAllStats(Pointer kinmem, Pointer outfile, int fmt);
	/**
	 * Original signature : <code>int KINPrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:140</i>
	 */
	int KINPrintAllStats(Pointer kinmem, PointerByReference outfile, int fmt);
	/**
	 * Original signature : <code>char* KINGetReturnFlagName(long long)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:142</i>
	 */
	Pointer KINGetReturnFlagName(long flag);
	/**
	 * Free function<br>
	 * Original signature : <code>void KINFree(void**)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:145</i>
	 */
	void KINFree(PointerByReference kinmem);
	/**
	 * KINLS interface function that depends on KINSysFn<br>
	 * Original signature : <code>int KINSetJacTimesVecSysFn(void*, KINSysFn)</code><br>
	 * <i>native declaration : include\kinsol\kinsol.h:148</i>
	 */
	int KINSetJacTimesVecSysFn(Pointer kinmem, KINSysFn jtimesSysFn);
	/**
	 * Exported Functions<br>
	 * Original signature : <code>int KINBBDPrecInit(void*, sunindextype, sunindextype, sunindextype, sunindextype, sunindextype, sunrealtype, KINBBDLocalFn, KINBBDCommFn)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_bbdpre.h:21</i>
	 */
	int KINBBDPrecInit(Pointer kinmem, long Nlocal, long mudq, long mldq, long mukeep, long mlkeep, double dq_rel_uu, KINBBDLocalFn gloc, KINBBDCommFn gcomm);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int KINBBDPrecGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_bbdpre.h:29</i><br>
	 * @deprecated use the safer methods {@link #KINBBDPrecGetWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #KINBBDPrecGetWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int KINBBDPrecGetWorkSpace(Pointer kinmem, LongByReference lenrwBBDP, LongByReference leniwBBDP);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int KINBBDPrecGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_bbdpre.h:29</i>
	 */
	int KINBBDPrecGetWorkSpace(Pointer kinmem, LongBuffer lenrwBBDP, LongBuffer leniwBBDP);
	/**
	 * Original signature : <code>int KINBBDPrecGetNumGfnEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_bbdpre.h:32</i><br>
	 * @deprecated use the safer methods {@link #KINBBDPrecGetNumGfnEvals(Pointer, LongBuffer)} and {@link #KINBBDPrecGetNumGfnEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int KINBBDPrecGetNumGfnEvals(Pointer kinmem, LongByReference ngevalsBBDP);
	/**
	 * Original signature : <code>int KINBBDPrecGetNumGfnEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\kinsol\kinsol_bbdpre.h:32</i>
	 */
	int KINBBDPrecGetNumGfnEvals(Pointer kinmem, LongBuffer ngevalsBBDP);
	public static class SUNMatrix extends PointerType {
		public SUNMatrix(Pointer address) {
			super(address);
		}
		public SUNMatrix() {
			super();
		}
	};
	public static class SUNLinearSolver extends PointerType {
		public SUNLinearSolver(Pointer address) {
			super(address);
		}
		public SUNLinearSolver() {
			super();
		}
	};
	public static class SUNContext extends PointerType {
		public SUNContext(Pointer address) {
			super(address);
		}
		public SUNContext() {
			super();
		}
	};
	public static class FILE extends PointerType {
		public FILE(Pointer address) {
			super(address);
		}
		public FILE() {
			super();
		}
	};
	public static class N_Vector extends PointerType {
		public N_Vector(Pointer address) {
			super(address);
		}
		public N_Vector() {
			super();
		}
	};
}
