package cn.catarc.jsundials.idas;

import com.sun.jna.*;
import com.sun.jna.ptr.DoubleByReference;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.LongByReference;
import com.sun.jna.ptr.PointerByReference;

import java.nio.DoubleBuffer;
import java.nio.IntBuffer;
import java.nio.LongBuffer;
/**
 * JNA Wrapper for library <b>sundials_idas</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Sundials_idasLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "sundials_idas";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Sundials_idasLibrary.JNA_LIBRARY_NAME);
	public static final Sundials_idasLibrary INSTANCE = (Sundials_idasLibrary)Native.loadLibrary(Sundials_idasLibrary.JNA_LIBRARY_NAME, Sundials_idasLibrary.class);
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public static final int IDALS_SUCCESS = (int)0;
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public static final int IDALS_MEM_NULL = (int)-1;
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public static final int IDALS_LMEM_NULL = (int)-2;
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public static final int IDALS_ILL_INPUT = (int)-3;
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public static final int IDALS_MEM_FAIL = (int)-4;
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public static final int IDALS_PMEM_NULL = (int)-5;
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public static final int IDALS_JACFUNC_UNRECVR = (int)-6;
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public static final int IDALS_JACFUNC_RECVR = (int)-7;
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public static final int IDALS_SUNMAT_FAIL = (int)-8;
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public static final int IDALS_SUNLS_FAIL = (int)-9;
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public static final int IDALS_NO_ADJ = (int)-101;
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public static final int IDALS_LMEMB_NULL = (int)-102;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_NORMAL = (int)1;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_ONE_STEP = (int)2;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_YA_YDP_INIT = (int)1;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_Y_INIT = (int)2;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_SIMULTANEOUS = (int)1;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_STAGGERED = (int)2;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_CENTERED = (int)1;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_FORWARD = (int)2;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_HERMITE = (int)1;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_POLYNOMIAL = (int)2;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_SUCCESS = (int)0;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_TSTOP_RETURN = (int)1;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_ROOT_RETURN = (int)2;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_WARNING = (int)99;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_TOO_MUCH_WORK = (int)-1;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_TOO_MUCH_ACC = (int)-2;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_ERR_FAIL = (int)-3;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_CONV_FAIL = (int)-4;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_LINIT_FAIL = (int)-5;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_LSETUP_FAIL = (int)-6;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_LSOLVE_FAIL = (int)-7;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_RES_FAIL = (int)-8;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_REP_RES_ERR = (int)-9;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_RTFUNC_FAIL = (int)-10;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_CONSTR_FAIL = (int)-11;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_FIRST_RES_FAIL = (int)-12;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_LINESEARCH_FAIL = (int)-13;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_NO_RECOVERY = (int)-14;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_NLS_INIT_FAIL = (int)-15;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_NLS_SETUP_FAIL = (int)-16;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_NLS_FAIL = (int)-17;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_MEM_NULL = (int)-20;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_MEM_FAIL = (int)-21;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_ILL_INPUT = (int)-22;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_NO_MALLOC = (int)-23;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_BAD_EWT = (int)-24;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_BAD_K = (int)-25;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_BAD_T = (int)-26;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_BAD_DKY = (int)-27;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_VECTOROP_ERR = (int)-28;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_CONTEXT_ERR = (int)-29;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_NO_QUAD = (int)-30;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_QRHS_FAIL = (int)-31;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_FIRST_QRHS_ERR = (int)-32;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_REP_QRHS_ERR = (int)-33;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_NO_SENS = (int)-40;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_SRES_FAIL = (int)-41;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_REP_SRES_ERR = (int)-42;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_BAD_IS = (int)-43;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_NO_QUADSENS = (int)-50;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_QSRHS_FAIL = (int)-51;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_FIRST_QSRHS_ERR = (int)-52;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_REP_QSRHS_ERR = (int)-53;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_UNRECOGNIZED_ERROR = (int)-99;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_NO_ADJ = (int)-101;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_NO_FWD = (int)-102;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_NO_BCK = (int)-103;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_BAD_TB0 = (int)-104;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_REIFWD_FAIL = (int)-105;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_FWD_FAIL = (int)-106;
	/** <i>native declaration : include\idas\idas.h</i> */
	public static final int IDA_GETY_BADT = (int)-107;
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public interface IDALsJacFn extends Callback {
		int apply(double t, double c_j, Pointer y, Pointer yp, Pointer r, Pointer Jac, Pointer user_data, Pointer tmp1, Pointer tmp2, Pointer tmp3);
	};
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public interface IDALsPrecSetupFn extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer rr, double c_j, Pointer user_data);
	};
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public interface IDALsPrecSolveFn extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer rr, Pointer rvec, Pointer zvec, double c_j, double delta, Pointer user_data);
	};
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public interface IDALsJacTimesSetupFn extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer rr, double c_j, Pointer user_data);
	};
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public interface IDALsJacTimesVecFn extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer rr, Pointer v, Pointer Jv, double c_j, Pointer user_data, Pointer tmp1, Pointer tmp2);
	};
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public interface IDALsJacFnB extends Callback {
		int apply(double tt, double c_jB, Pointer yy, Pointer yp, Pointer yyB, Pointer ypB, Pointer rrB, Pointer JacB, Pointer user_dataB, Pointer tmp1B, Pointer tmp2B, Pointer tmp3B);
	};
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public interface IDALsJacFnBS extends Callback {
		int apply(double tt, double c_jB, Pointer yy, Pointer yp, Pointer yS, Pointer ypS, Pointer yyB, Pointer ypB, Pointer rrB, Pointer JacB, Pointer user_dataB, Pointer tmp1B, Pointer tmp2B, Pointer tmp3B);
	};
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public interface IDALsPrecSetupFnB extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer yyB, Pointer ypB, Pointer rrB, double c_jB, Pointer user_dataB);
	};
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public interface IDALsPrecSetupFnBS extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer yyS, Pointer ypS, Pointer yyB, Pointer ypB, Pointer rrB, double c_jB, Pointer user_dataB);
	};
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public interface IDALsPrecSolveFnB extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer yyB, Pointer ypB, Pointer rrB, Pointer rvecB, Pointer zvecB, double c_jB, double deltaB, Pointer user_dataB);
	};
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public interface IDALsPrecSolveFnBS extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer yyS, Pointer ypS, Pointer yyB, Pointer ypB, Pointer rrB, Pointer rvecB, Pointer zvecB, double c_jB, double deltaB, Pointer user_dataB);
	};
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public interface IDALsJacTimesSetupFnB extends Callback {
		int apply(double t, Pointer yy, Pointer yp, Pointer yyB, Pointer ypB, Pointer rrB, double c_jB, Pointer user_dataB);
	};
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public interface IDALsJacTimesSetupFnBS extends Callback {
		int apply(double t, Pointer yy, Pointer yp, Pointer yyS, Pointer ypS, Pointer yyB, Pointer ypB, Pointer rrB, double c_jB, Pointer user_dataB);
	};
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public interface IDALsJacTimesVecFnB extends Callback {
		int apply(double t, Pointer yy, Pointer yp, Pointer yyB, Pointer ypB, Pointer rrB, Pointer vB, Pointer JvB, double c_jB, Pointer user_dataB, Pointer tmp1B, Pointer tmp2B);
	};
	/** <i>native declaration : include\idas\idas_ls.h</i> */
	public interface IDALsJacTimesVecFnBS extends Callback {
		int apply(double t, Pointer yy, Pointer yp, Pointer yyS, Pointer ypS, Pointer yyB, Pointer ypB, Pointer rrB, Pointer vB, Pointer JvB, double c_jB, Pointer user_dataB, Pointer tmp1B, Pointer tmp2B);
	};
	/** <i>native declaration : include\idas\idas.h</i> */
	public interface IDAResFn extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer rr, Pointer user_data);
	};
	/** <i>native declaration : include\idas\idas.h</i> */
	public interface IDARootFn extends Callback {
		int apply(double t, Pointer y, Pointer yp, DoubleByReference gout, Pointer user_data);
	};
	/** <i>native declaration : include\idas\idas.h</i> */
	public interface IDAEwtFn extends Callback {
		int apply(Pointer y, Pointer ewt, Pointer user_data);
	};
	/** <i>native declaration : include\idas\idas.h</i> */
	public interface IDAQuadRhsFn extends Callback {
		int apply(double tres, Pointer yy, Pointer yp, Pointer rrQ, Pointer user_data);
	};
	/** <i>native declaration : include\idas\idas.h</i> */
	public interface IDASensResFn extends Callback {
		int apply(int Ns, double t, Pointer yy, Pointer yp, Pointer resval, Pointer yyS, Pointer ypS, Pointer resvalS, Pointer user_data, Pointer tmp1, Pointer tmp2, Pointer tmp3);
	};
	/** <i>native declaration : include\idas\idas.h</i> */
	public interface IDAQuadSensRhsFn extends Callback {
		int apply(int Ns, double t, Pointer yy, Pointer yp, Pointer yyS, Pointer ypS, Pointer rrQ, Pointer rhsvalQS, Pointer user_data, Pointer yytmp, Pointer yptmp, Pointer tmpQS);
	};
	/** <i>native declaration : include\idas\idas.h</i> */
	public interface IDAResFnB extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer yyB, Pointer ypB, Pointer rrB, Pointer user_dataB);
	};
	/** <i>native declaration : include\idas\idas.h</i> */
	public interface IDAResFnBS extends Callback {
		int apply(double t, Pointer yy, Pointer yp, Pointer yyS, Pointer ypS, Pointer yyB, Pointer ypB, Pointer rrBS, Pointer user_dataB);
	};
	/** <i>native declaration : include\idas\idas.h</i> */
	public interface IDAQuadRhsFnB extends Callback {
		int apply(double tt, Pointer yy, Pointer yp, Pointer yyB, Pointer ypB, Pointer rhsvalBQ, Pointer user_dataB);
	};
	/** <i>native declaration : include\idas\idas.h</i> */
	public interface IDAQuadRhsFnBS extends Callback {
		int apply(double t, Pointer yy, Pointer yp, Pointer yyS, Pointer ypS, Pointer yyB, Pointer ypB, Pointer rhsvalBQS, Pointer user_dataB);
	};
	/** <i>native declaration : include\idas\idas_bbdpre.h</i> */
	public interface IDABBDLocalFn extends Callback {
		int apply(long Nlocal, double tt, Pointer yy, Pointer yp, Pointer gval, Pointer user_data);
	};
	/** <i>native declaration : include\idas\idas_bbdpre.h</i> */
	public interface IDABBDCommFn extends Callback {
		int apply(long Nlocal, double tt, Pointer yy, Pointer yp, Pointer user_data);
	};
	/** <i>native declaration : include\idas\idas_bbdpre.h</i> */
	public interface IDABBDLocalFnB extends Callback {
		int apply(long NlocalB, double tt, Pointer yy, Pointer yp, Pointer yyB, Pointer ypB, Pointer gvalB, Pointer user_dataB);
	};
	/** <i>native declaration : include\idas\idas_bbdpre.h</i> */
	public interface IDABBDCommFnB extends Callback {
		int apply(long NlocalB, double tt, Pointer yy, Pointer yp, Pointer yyB, Pointer ypB, Pointer user_dataB);
	};
	/**
	 * =================================================================<br>
	 * IDALS Exported functions<br>
	 * =================================================================<br>
	 * Original signature : <code>int IDASetLinearSolver(void*, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:58</i><br>
	 * @deprecated use the safer methods {@link #IDASetLinearSolver(Pointer, SUNLinearSolver, SUNMatrix)} and {@link #IDASetLinearSolver(Pointer, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDASetLinearSolver(Pointer ida_mem, Pointer LS, Pointer A);
	/**
	 * =================================================================<br>
	 * IDALS Exported functions<br>
	 * =================================================================<br>
	 * Original signature : <code>int IDASetLinearSolver(void*, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:58</i>
	 */
	int IDASetLinearSolver(Pointer ida_mem, SUNLinearSolver LS, SUNMatrix A);
	/**
	 * -----------------------------------------------------------------<br>
	 * Optional inputs to the IDALS linear solver interface<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int IDASetJacFn(void*, IDALsJacFn)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:65</i>
	 */
	int IDASetJacFn(Pointer ida_mem, IDALsJacFn jac);
	/**
	 * Original signature : <code>int IDASetPreconditioner(void*, IDALsPrecSetupFn, IDALsPrecSolveFn)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:66</i>
	 */
	int IDASetPreconditioner(Pointer ida_mem, IDALsPrecSetupFn pset, IDALsPrecSolveFn psolve);
	/**
	 * Original signature : <code>int IDASetJacTimes(void*, IDALsJacTimesSetupFn, IDALsJacTimesVecFn)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:68</i>
	 */
	int IDASetJacTimes(Pointer ida_mem, IDALsJacTimesSetupFn jtsetup, IDALsJacTimesVecFn jtimes);
	/**
	 * Original signature : <code>int IDASetEpsLin(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:70</i>
	 */
	int IDASetEpsLin(Pointer ida_mem, double eplifac);
	/**
	 * Original signature : <code>int IDASetLSNormFactor(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:71</i>
	 */
	int IDASetLSNormFactor(Pointer ida_mem, double nrmfac);
	/**
	 * Original signature : <code>int IDASetLinearSolutionScaling(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:72</i>
	 */
	int IDASetLinearSolutionScaling(Pointer ida_mem, int onoff);
	/**
	 * Original signature : <code>int IDASetIncrementFactor(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:74</i>
	 */
	int IDASetIncrementFactor(Pointer ida_mem, double dqincfac);
	/**
	 * -----------------------------------------------------------------<br>
	 * Optional outputs from the IDALS linear solver interface<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int IDAGetJac(void*, SUNMatrix*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:80</i><br>
	 * @deprecated use the safer method {@link #IDAGetJac(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAGetJac(Pointer ida_mem, Pointer J);
	/**
	 * -----------------------------------------------------------------<br>
	 * Optional outputs from the IDALS linear solver interface<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int IDAGetJac(void*, SUNMatrix*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:80</i>
	 */
	int IDAGetJac(Pointer ida_mem, PointerByReference J);
	/**
	 * Original signature : <code>int IDAGetJacCj(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:81</i><br>
	 * @deprecated use the safer methods {@link #IDAGetJacCj(Pointer, DoubleBuffer)} and {@link #IDAGetJacCj(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetJacCj(Pointer ida_mem, DoubleByReference cj_J);
	/**
	 * Original signature : <code>int IDAGetJacCj(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:81</i>
	 */
	int IDAGetJacCj(Pointer ida_mem, DoubleBuffer cj_J);
	/**
	 * Original signature : <code>int IDAGetJacTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:82</i><br>
	 * @deprecated use the safer methods {@link #IDAGetJacTime(Pointer, DoubleBuffer)} and {@link #IDAGetJacTime(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetJacTime(Pointer ida_mem, DoubleByReference t_J);
	/**
	 * Original signature : <code>int IDAGetJacTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:82</i>
	 */
	int IDAGetJacTime(Pointer ida_mem, DoubleBuffer t_J);
	/**
	 * Original signature : <code>int IDAGetJacNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:83</i><br>
	 * @deprecated use the safer methods {@link #IDAGetJacNumSteps(Pointer, LongBuffer)} and {@link #IDAGetJacNumSteps(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetJacNumSteps(Pointer ida_mem, LongByReference nst_J);
	/**
	 * Original signature : <code>int IDAGetJacNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:83</i>
	 */
	int IDAGetJacNumSteps(Pointer ida_mem, LongBuffer nst_J);
	/**
	 * Original signature : <code>int IDAGetLinWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:84</i><br>
	 * @deprecated use the safer methods {@link #IDAGetLinWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #IDAGetLinWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetLinWorkSpace(Pointer ida_mem, LongByReference lenrwLS, LongByReference leniwLS);
	/**
	 * Original signature : <code>int IDAGetLinWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:84</i>
	 */
	int IDAGetLinWorkSpace(Pointer ida_mem, LongBuffer lenrwLS, LongBuffer leniwLS);
	/**
	 * Original signature : <code>int IDAGetNumJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:86</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumJacEvals(Pointer, LongBuffer)} and {@link #IDAGetNumJacEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumJacEvals(Pointer ida_mem, LongByReference njevals);
	/**
	 * Original signature : <code>int IDAGetNumJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:86</i>
	 */
	int IDAGetNumJacEvals(Pointer ida_mem, LongBuffer njevals);
	/**
	 * Original signature : <code>int IDAGetNumPrecEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:87</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumPrecEvals(Pointer, LongBuffer)} and {@link #IDAGetNumPrecEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumPrecEvals(Pointer ida_mem, LongByReference npevals);
	/**
	 * Original signature : <code>int IDAGetNumPrecEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:87</i>
	 */
	int IDAGetNumPrecEvals(Pointer ida_mem, LongBuffer npevals);
	/**
	 * Original signature : <code>int IDAGetNumPrecSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:88</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumPrecSolves(Pointer, LongBuffer)} and {@link #IDAGetNumPrecSolves(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumPrecSolves(Pointer ida_mem, LongByReference npsolves);
	/**
	 * Original signature : <code>int IDAGetNumPrecSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:88</i>
	 */
	int IDAGetNumPrecSolves(Pointer ida_mem, LongBuffer npsolves);
	/**
	 * Original signature : <code>int IDAGetNumLinIters(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:89</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumLinIters(Pointer, LongBuffer)} and {@link #IDAGetNumLinIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumLinIters(Pointer ida_mem, LongByReference nliters);
	/**
	 * Original signature : <code>int IDAGetNumLinIters(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:89</i>
	 */
	int IDAGetNumLinIters(Pointer ida_mem, LongBuffer nliters);
	/**
	 * Original signature : <code>int IDAGetNumLinConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:90</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumLinConvFails(Pointer, LongBuffer)} and {@link #IDAGetNumLinConvFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumLinConvFails(Pointer ida_mem, LongByReference nlcfails);
	/**
	 * Original signature : <code>int IDAGetNumLinConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:90</i>
	 */
	int IDAGetNumLinConvFails(Pointer ida_mem, LongBuffer nlcfails);
	/**
	 * Original signature : <code>int IDAGetNumJTSetupEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:91</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumJTSetupEvals(Pointer, LongBuffer)} and {@link #IDAGetNumJTSetupEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumJTSetupEvals(Pointer ida_mem, LongByReference njtsetups);
	/**
	 * Original signature : <code>int IDAGetNumJTSetupEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:91</i>
	 */
	int IDAGetNumJTSetupEvals(Pointer ida_mem, LongBuffer njtsetups);
	/**
	 * Original signature : <code>int IDAGetNumJtimesEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:92</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumJtimesEvals(Pointer, LongBuffer)} and {@link #IDAGetNumJtimesEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumJtimesEvals(Pointer ida_mem, LongByReference njvevals);
	/**
	 * Original signature : <code>int IDAGetNumJtimesEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:92</i>
	 */
	int IDAGetNumJtimesEvals(Pointer ida_mem, LongBuffer njvevals);
	/**
	 * Original signature : <code>int IDAGetNumLinResEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:93</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumLinResEvals(Pointer, LongBuffer)} and {@link #IDAGetNumLinResEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumLinResEvals(Pointer ida_mem, LongByReference nrevalsLS);
	/**
	 * Original signature : <code>int IDAGetNumLinResEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:93</i>
	 */
	int IDAGetNumLinResEvals(Pointer ida_mem, LongBuffer nrevalsLS);
	/**
	 * Original signature : <code>int IDAGetLastLinFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:94</i><br>
	 * @deprecated use the safer methods {@link #IDAGetLastLinFlag(Pointer, LongBuffer)} and {@link #IDAGetLastLinFlag(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetLastLinFlag(Pointer ida_mem, LongByReference flag);
	/**
	 * Original signature : <code>int IDAGetLastLinFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:94</i>
	 */
	int IDAGetLastLinFlag(Pointer ida_mem, LongBuffer flag);
	/**
	 * Original signature : <code>char* IDAGetLinReturnFlagName(long long)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:95</i>
	 */
	Pointer IDAGetLinReturnFlagName(long flag);
	/**
	 * =================================================================<br>
	 * IDALS Exported functions<br>
	 * =================================================================<br>
	 * Original signature : <code>int IDASetLinearSolverB(void*, int, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:162</i><br>
	 * @deprecated use the safer methods {@link #IDASetLinearSolverB(Pointer, int, SUNLinearSolver, SUNMatrix)} and {@link #IDASetLinearSolverB(Pointer, int, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDASetLinearSolverB(Pointer ida_mem, int which, Pointer LS, Pointer A);
	/**
	 * =================================================================<br>
	 * IDALS Exported functions<br>
	 * =================================================================<br>
	 * Original signature : <code>int IDASetLinearSolverB(void*, int, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:162</i>
	 */
	int IDASetLinearSolverB(Pointer ida_mem, int which, SUNLinearSolver LS, SUNMatrix A);
	/**
	 * -----------------------------------------------------------------<br>
	 * Each IDASet***B or IDASet***BS function below links the<br>
	 * main IDAS integrator with the corresponding IDALS<br>
	 * optional input function for the backward integration.<br>
	 * The 'which' argument is the int returned by IDACreateB.<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int IDASetJacFnB(void*, int, IDALsJacFnB)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:172</i>
	 */
	int IDASetJacFnB(Pointer ida_mem, int which, IDALsJacFnB jacB);
	/**
	 * Original signature : <code>int IDASetJacFnBS(void*, int, IDALsJacFnBS)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:173</i>
	 */
	int IDASetJacFnBS(Pointer ida_mem, int which, IDALsJacFnBS jacBS);
	/**
	 * Original signature : <code>int IDASetEpsLinB(void*, int, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:175</i>
	 */
	int IDASetEpsLinB(Pointer ida_mem, int which, double eplifacB);
	/**
	 * Original signature : <code>int IDASetLSNormFactorB(void*, int, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:176</i>
	 */
	int IDASetLSNormFactorB(Pointer ida_mem, int which, double nrmfacB);
	/**
	 * Original signature : <code>int IDASetLinearSolutionScalingB(void*, int, int)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:178</i>
	 */
	int IDASetLinearSolutionScalingB(Pointer ida_mem, int which, int onoffB);
	/**
	 * Original signature : <code>int IDASetIncrementFactorB(void*, int, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:180</i>
	 */
	int IDASetIncrementFactorB(Pointer ida_mem, int which, double dqincfacB);
	/**
	 * Original signature : <code>int IDASetPreconditionerB(void*, int, IDALsPrecSetupFnB, IDALsPrecSolveFnB)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:182</i>
	 */
	int IDASetPreconditionerB(Pointer ida_mem, int which, IDALsPrecSetupFnB psetB, IDALsPrecSolveFnB psolveB);
	/**
	 * Original signature : <code>int IDASetPreconditionerBS(void*, int, IDALsPrecSetupFnBS, IDALsPrecSolveFnBS)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:185</i>
	 */
	int IDASetPreconditionerBS(Pointer ida_mem, int which, IDALsPrecSetupFnBS psetBS, IDALsPrecSolveFnBS psolveBS);
	/**
	 * Original signature : <code>int IDASetJacTimesB(void*, int, IDALsJacTimesSetupFnB, IDALsJacTimesVecFnB)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:188</i>
	 */
	int IDASetJacTimesB(Pointer ida_mem, int which, IDALsJacTimesSetupFnB jtsetupB, IDALsJacTimesVecFnB jtimesB);
	/**
	 * Original signature : <code>int IDASetJacTimesBS(void*, int, IDALsJacTimesSetupFnBS, IDALsJacTimesVecFnBS)</code><br>
	 * <i>native declaration : include\idas\idas_ls.h:191</i>
	 */
	int IDASetJacTimesBS(Pointer ida_mem, int which, IDALsJacTimesSetupFnBS jtsetupBS, IDALsJacTimesVecFnBS jtimesBS);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>void* IDACreate(SUNContext)</code><br>
	 * <i>native declaration : include\idas\idas.h:163</i><br>
	 * @deprecated use the safer methods {@link #IDACreate(SUNContext)} and {@link #IDACreate(Pointer)} instead
	 */
	@Deprecated 
	Pointer IDACreate(Pointer sunctx);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>void* IDACreate(SUNContext)</code><br>
	 * <i>native declaration : include\idas\idas.h:163</i>
	 */
	Pointer IDACreate(SUNContext sunctx);
	/**
	 * Original signature : <code>int IDAInit(void*, IDAResFn, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:165</i><br>
	 * @deprecated use the safer methods {@link #IDAInit(Pointer, IDAResFn, double, N_Vector, N_Vector)} and {@link #IDAInit(Pointer, IDAResFn, double, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAInit(Pointer ida_mem, IDAResFn res, double t0, Pointer yy0, Pointer yp0);
	/**
	 * Original signature : <code>int IDAInit(void*, IDAResFn, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:165</i>
	 */
	int IDAInit(Pointer ida_mem, IDAResFn res, double t0, N_Vector yy0, N_Vector yp0);
	/**
	 * Original signature : <code>int IDAReInit(void*, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:167</i><br>
	 * @deprecated use the safer methods {@link #IDAReInit(Pointer, double, N_Vector, N_Vector)} and {@link #IDAReInit(Pointer, double, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAReInit(Pointer ida_mem, double t0, Pointer yy0, Pointer yp0);
	/**
	 * Original signature : <code>int IDAReInit(void*, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:167</i>
	 */
	int IDAReInit(Pointer ida_mem, double t0, N_Vector yy0, N_Vector yp0);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int IDASStolerances(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:171</i>
	 */
	int IDASStolerances(Pointer ida_mem, double reltol, double abstol);
	/**
	 * Original signature : <code>int IDASVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:173</i><br>
	 * @deprecated use the safer methods {@link #IDASVtolerances(Pointer, double, N_Vector)} and {@link #IDASVtolerances(Pointer, double, Pointer)} instead
	 */
	@Deprecated 
	int IDASVtolerances(Pointer ida_mem, double reltol, Pointer abstol);
	/**
	 * Original signature : <code>int IDASVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:173</i>
	 */
	int IDASVtolerances(Pointer ida_mem, double reltol, N_Vector abstol);
	/**
	 * Original signature : <code>int IDAWFtolerances(void*, IDAEwtFn)</code><br>
	 * <i>native declaration : include\idas\idas.h:175</i>
	 */
	int IDAWFtolerances(Pointer ida_mem, IDAEwtFn efun);
	/**
	 * Initial condition calculation function<br>
	 * Original signature : <code>int IDACalcIC(void*, int, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:178</i>
	 */
	int IDACalcIC(Pointer ida_mem, int icopt, double tout1);
	/**
	 * Initial condition calculation optional input functions<br>
	 * Original signature : <code>int IDASetNonlinConvCoefIC(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:181</i>
	 */
	int IDASetNonlinConvCoefIC(Pointer ida_mem, double epiccon);
	/**
	 * Original signature : <code>int IDASetMaxNumStepsIC(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:182</i>
	 */
	int IDASetMaxNumStepsIC(Pointer ida_mem, int maxnh);
	/**
	 * Original signature : <code>int IDASetMaxNumJacsIC(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:183</i>
	 */
	int IDASetMaxNumJacsIC(Pointer ida_mem, int maxnj);
	/**
	 * Original signature : <code>int IDASetMaxNumItersIC(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:184</i>
	 */
	int IDASetMaxNumItersIC(Pointer ida_mem, int maxnit);
	/**
	 * Original signature : <code>int IDASetLineSearchOffIC(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:185</i>
	 */
	int IDASetLineSearchOffIC(Pointer ida_mem, int lsoff);
	/**
	 * Original signature : <code>int IDASetStepToleranceIC(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:186</i>
	 */
	int IDASetStepToleranceIC(Pointer ida_mem, double steptol);
	/**
	 * Original signature : <code>int IDASetMaxBacksIC(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:187</i>
	 */
	int IDASetMaxBacksIC(Pointer ida_mem, int maxbacks);
	/**
	 * Optional input functions<br>
	 * Original signature : <code>int IDASetDeltaCjLSetup(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:190</i>
	 */
	int IDASetDeltaCjLSetup(Pointer ida_max, double dcj);
	/**
	 * Original signature : <code>int IDASetUserData(void*, void*)</code><br>
	 * <i>native declaration : include\idas\idas.h:191</i>
	 */
	int IDASetUserData(Pointer ida_mem, Pointer user_data);
	/**
	 * Original signature : <code>int IDASetMaxOrd(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:192</i>
	 */
	int IDASetMaxOrd(Pointer ida_mem, int maxord);
	/**
	 * Original signature : <code>int IDASetMaxNumSteps(void*, long long)</code><br>
	 * <i>native declaration : include\idas\idas.h:193</i>
	 */
	int IDASetMaxNumSteps(Pointer ida_mem, long mxsteps);
	/**
	 * Original signature : <code>int IDASetInitStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:194</i>
	 */
	int IDASetInitStep(Pointer ida_mem, double hin);
	/**
	 * Original signature : <code>int IDASetMaxStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:195</i>
	 */
	int IDASetMaxStep(Pointer ida_mem, double hmax);
	/**
	 * Original signature : <code>int IDASetMinStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:196</i>
	 */
	int IDASetMinStep(Pointer ida_mem, double hmin);
	/**
	 * Original signature : <code>int IDASetStopTime(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:197</i>
	 */
	int IDASetStopTime(Pointer ida_mem, double tstop);
	/**
	 * Original signature : <code>int IDAClearStopTime(void*)</code><br>
	 * <i>native declaration : include\idas\idas.h:198</i>
	 */
	int IDAClearStopTime(Pointer ida_mem);
	/**
	 * Original signature : <code>int IDASetMaxErrTestFails(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:199</i>
	 */
	int IDASetMaxErrTestFails(Pointer ida_mem, int maxnef);
	/**
	 * Original signature : <code>int IDASetSuppressAlg(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:200</i>
	 */
	int IDASetSuppressAlg(Pointer ida_mem, int suppressalg);
	/**
	 * Original signature : <code>int IDASetId(void*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:201</i><br>
	 * @deprecated use the safer methods {@link #IDASetId(Pointer, N_Vector)} and {@link #IDASetId(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDASetId(Pointer ida_mem, Pointer id);
	/**
	 * Original signature : <code>int IDASetId(void*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:201</i>
	 */
	int IDASetId(Pointer ida_mem, N_Vector id);
	/**
	 * Original signature : <code>int IDASetConstraints(void*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:202</i><br>
	 * @deprecated use the safer methods {@link #IDASetConstraints(Pointer, N_Vector)} and {@link #IDASetConstraints(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDASetConstraints(Pointer ida_mem, Pointer constraints);
	/**
	 * Original signature : <code>int IDASetConstraints(void*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:202</i>
	 */
	int IDASetConstraints(Pointer ida_mem, N_Vector constraints);
	/**
	 * Optional step adaptivity input functions<br>
	 * Original signature : <code>int IDASetEtaFixedStepBounds(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:205</i>
	 */
	int IDASetEtaFixedStepBounds(Pointer ida_mem, double eta_min_fx, double eta_max_fx);
	/**
	 * Original signature : <code>int IDASetEtaMin(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:208</i>
	 */
	int IDASetEtaMin(Pointer ida_mem, double eta_min);
	/**
	 * Original signature : <code>int IDASetEtaMax(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:210</i>
	 */
	int IDASetEtaMax(Pointer ida_mem, double eta_max);
	/**
	 * Original signature : <code>int IDASetEtaLow(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:212</i>
	 */
	int IDASetEtaLow(Pointer ida_mem, double eta_low);
	/**
	 * Original signature : <code>int IDASetEtaMinErrFail(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:214</i>
	 */
	int IDASetEtaMinErrFail(Pointer ida_mem, double eta_min_ef);
	/**
	 * Original signature : <code>int IDASetEtaConvFail(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:216</i>
	 */
	int IDASetEtaConvFail(Pointer ida_mem, double eta_cf);
	/**
	 * Nonlinear solve input functions<br>
	 * Original signature : <code>int IDASetMaxConvFails(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:220</i>
	 */
	int IDASetMaxConvFails(Pointer ida_mem, int maxncf);
	/**
	 * Original signature : <code>int IDASetMaxNonlinIters(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:221</i>
	 */
	int IDASetMaxNonlinIters(Pointer ida_mem, int maxcor);
	/**
	 * Original signature : <code>int IDASetNlsResFn(void*, IDAResFn)</code><br>
	 * <i>native declaration : include\idas\idas.h:222</i>
	 */
	int IDASetNlsResFn(Pointer IDA_mem, IDAResFn res);
	/**
	 * Original signature : <code>int IDASetNonlinConvCoef(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:223</i>
	 */
	int IDASetNonlinConvCoef(Pointer ida_mem, double epcon);
	/**
	 * Original signature : <code>int IDASetNonlinearSolver(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\idas\idas.h:224</i><br>
	 * @deprecated use the safer methods {@link #IDASetNonlinearSolver(Pointer, SUNNonlinearSolver)} and {@link #IDASetNonlinearSolver(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDASetNonlinearSolver(Pointer ida_mem, Pointer NLS);
	/**
	 * Original signature : <code>int IDASetNonlinearSolver(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\idas\idas.h:224</i>
	 */
	int IDASetNonlinearSolver(Pointer ida_mem, SUNNonlinearSolver NLS);
	/**
	 * Rootfinding initialization function<br>
	 * Original signature : <code>int IDARootInit(void*, int, IDARootFn)</code><br>
	 * <i>native declaration : include\idas\idas.h:227</i>
	 */
	int IDARootInit(Pointer ida_mem, int nrtfn, IDARootFn g);
	/**
	 * Rootfinding optional input functions<br>
	 * Original signature : <code>int IDASetRootDirection(void*, int*)</code><br>
	 * <i>native declaration : include\idas\idas.h:230</i><br>
	 * @deprecated use the safer methods {@link #IDASetRootDirection(Pointer, IntBuffer)} and {@link #IDASetRootDirection(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int IDASetRootDirection(Pointer ida_mem, IntByReference rootdir);
	/**
	 * Rootfinding optional input functions<br>
	 * Original signature : <code>int IDASetRootDirection(void*, int*)</code><br>
	 * <i>native declaration : include\idas\idas.h:230</i>
	 */
	int IDASetRootDirection(Pointer ida_mem, IntBuffer rootdir);
	/**
	 * Original signature : <code>int IDASetNoInactiveRootWarn(void*)</code><br>
	 * <i>native declaration : include\idas\idas.h:231</i>
	 */
	int IDASetNoInactiveRootWarn(Pointer ida_mem);
	/**
	 * Solver function<br>
	 * Original signature : <code>int IDASolve(void*, sunrealtype, sunrealtype*, N_Vector, N_Vector, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:234</i><br>
	 * @deprecated use the safer methods {@link #IDASolve(Pointer, double, DoubleBuffer, N_Vector, N_Vector, int)} and {@link #IDASolve(Pointer, double, DoubleByReference, Pointer, Pointer, int)} instead
	 */
	@Deprecated 
	int IDASolve(Pointer ida_mem, double tout, DoubleByReference tret, Pointer yret, Pointer ypret, int itask);
	/**
	 * Solver function<br>
	 * Original signature : <code>int IDASolve(void*, sunrealtype, sunrealtype*, N_Vector, N_Vector, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:234</i>
	 */
	int IDASolve(Pointer ida_mem, double tout, DoubleBuffer tret, N_Vector yret, N_Vector ypret, int itask);
	/**
	 * Utility functions to update/compute y and yp based on ycor<br>
	 * Original signature : <code>int IDAComputeY(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:238</i><br>
	 * @deprecated use the safer methods {@link #IDAComputeY(Pointer, N_Vector, N_Vector)} and {@link #IDAComputeY(Pointer, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAComputeY(Pointer ida_mem, Pointer ycor, Pointer y);
	/**
	 * Utility functions to update/compute y and yp based on ycor<br>
	 * Original signature : <code>int IDAComputeY(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:238</i>
	 */
	int IDAComputeY(Pointer ida_mem, N_Vector ycor, N_Vector y);
	/**
	 * Original signature : <code>int IDAComputeYp(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:239</i><br>
	 * @deprecated use the safer methods {@link #IDAComputeYp(Pointer, N_Vector, N_Vector)} and {@link #IDAComputeYp(Pointer, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAComputeYp(Pointer ida_mem, Pointer ycor, Pointer yp);
	/**
	 * Original signature : <code>int IDAComputeYp(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:239</i>
	 */
	int IDAComputeYp(Pointer ida_mem, N_Vector ycor, N_Vector yp);
	/**
	 * Original signature : <code>int IDAComputeYSens(void*, N_Vector*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:240</i><br>
	 * @deprecated use the safer method {@link #IDAComputeYSens(Pointer, PointerByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAComputeYSens(Pointer ida_mem, Pointer ycor, Pointer yyS);
	/**
	 * Original signature : <code>int IDAComputeYSens(void*, N_Vector*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:240</i>
	 */
	int IDAComputeYSens(Pointer ida_mem, PointerByReference ycor, PointerByReference yyS);
	/**
	 * Original signature : <code>int IDAComputeYpSens(void*, N_Vector*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:241</i><br>
	 * @deprecated use the safer method {@link #IDAComputeYpSens(Pointer, PointerByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAComputeYpSens(Pointer ida_mem, Pointer ycor, Pointer ypS);
	/**
	 * Original signature : <code>int IDAComputeYpSens(void*, N_Vector*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:241</i>
	 */
	int IDAComputeYpSens(Pointer ida_mem, PointerByReference ycor, PointerByReference ypS);
	/**
	 * Dense output function<br>
	 * Original signature : <code>int IDAGetDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:245</i><br>
	 * @deprecated use the safer methods {@link #IDAGetDky(Pointer, double, int, N_Vector)} and {@link #IDAGetDky(Pointer, double, int, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetDky(Pointer ida_mem, double t, int k, Pointer dky);
	/**
	 * Dense output function<br>
	 * Original signature : <code>int IDAGetDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:245</i>
	 */
	int IDAGetDky(Pointer ida_mem, double t, int k, N_Vector dky);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int IDAGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:248</i><br>
	 * @deprecated use the safer methods {@link #IDAGetWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #IDAGetWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetWorkSpace(Pointer ida_mem, LongByReference lenrw, LongByReference leniw);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int IDAGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:248</i>
	 */
	int IDAGetWorkSpace(Pointer ida_mem, LongBuffer lenrw, LongBuffer leniw);
	/**
	 * Original signature : <code>int IDAGetNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:250</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumSteps(Pointer, LongBuffer)} and {@link #IDAGetNumSteps(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumSteps(Pointer ida_mem, LongByReference nsteps);
	/**
	 * Original signature : <code>int IDAGetNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:250</i>
	 */
	int IDAGetNumSteps(Pointer ida_mem, LongBuffer nsteps);
	/**
	 * Original signature : <code>int IDAGetNumResEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:251</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumResEvals(Pointer, LongBuffer)} and {@link #IDAGetNumResEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumResEvals(Pointer ida_mem, LongByReference nrevals);
	/**
	 * Original signature : <code>int IDAGetNumResEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:251</i>
	 */
	int IDAGetNumResEvals(Pointer ida_mem, LongBuffer nrevals);
	/**
	 * Original signature : <code>int IDAGetNumLinSolvSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:252</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumLinSolvSetups(Pointer, LongBuffer)} and {@link #IDAGetNumLinSolvSetups(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumLinSolvSetups(Pointer ida_mem, LongByReference nlinsetups);
	/**
	 * Original signature : <code>int IDAGetNumLinSolvSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:252</i>
	 */
	int IDAGetNumLinSolvSetups(Pointer ida_mem, LongBuffer nlinsetups);
	/**
	 * Original signature : <code>int IDAGetNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:253</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumErrTestFails(Pointer, LongBuffer)} and {@link #IDAGetNumErrTestFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumErrTestFails(Pointer ida_mem, LongByReference netfails);
	/**
	 * Original signature : <code>int IDAGetNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:253</i>
	 */
	int IDAGetNumErrTestFails(Pointer ida_mem, LongBuffer netfails);
	/**
	 * Original signature : <code>int IDAGetNumBacktrackOps(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:254</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumBacktrackOps(Pointer, LongBuffer)} and {@link #IDAGetNumBacktrackOps(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumBacktrackOps(Pointer ida_mem, LongByReference nbacktr);
	/**
	 * Original signature : <code>int IDAGetNumBacktrackOps(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:254</i>
	 */
	int IDAGetNumBacktrackOps(Pointer ida_mem, LongBuffer nbacktr);
	/**
	 * Original signature : <code>int IDAGetConsistentIC(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:255</i><br>
	 * @deprecated use the safer methods {@link #IDAGetConsistentIC(Pointer, N_Vector, N_Vector)} and {@link #IDAGetConsistentIC(Pointer, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetConsistentIC(Pointer ida_mem, Pointer yy0_mod, Pointer yp0_mod);
	/**
	 * Original signature : <code>int IDAGetConsistentIC(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:255</i>
	 */
	int IDAGetConsistentIC(Pointer ida_mem, N_Vector yy0_mod, N_Vector yp0_mod);
	/**
	 * Original signature : <code>int IDAGetLastOrder(void*, int*)</code><br>
	 * <i>native declaration : include\idas\idas.h:257</i><br>
	 * @deprecated use the safer methods {@link #IDAGetLastOrder(Pointer, IntBuffer)} and {@link #IDAGetLastOrder(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int IDAGetLastOrder(Pointer ida_mem, IntByReference klast);
	/**
	 * Original signature : <code>int IDAGetLastOrder(void*, int*)</code><br>
	 * <i>native declaration : include\idas\idas.h:257</i>
	 */
	int IDAGetLastOrder(Pointer ida_mem, IntBuffer klast);
	/**
	 * Original signature : <code>int IDAGetCurrentOrder(void*, int*)</code><br>
	 * <i>native declaration : include\idas\idas.h:258</i><br>
	 * @deprecated use the safer methods {@link #IDAGetCurrentOrder(Pointer, IntBuffer)} and {@link #IDAGetCurrentOrder(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int IDAGetCurrentOrder(Pointer ida_mem, IntByReference kcur);
	/**
	 * Original signature : <code>int IDAGetCurrentOrder(void*, int*)</code><br>
	 * <i>native declaration : include\idas\idas.h:258</i>
	 */
	int IDAGetCurrentOrder(Pointer ida_mem, IntBuffer kcur);
	/**
	 * Original signature : <code>int IDAGetCurrentCj(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:259</i><br>
	 * @deprecated use the safer methods {@link #IDAGetCurrentCj(Pointer, DoubleBuffer)} and {@link #IDAGetCurrentCj(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetCurrentCj(Pointer ida_mem, DoubleByReference cj);
	/**
	 * Original signature : <code>int IDAGetCurrentCj(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:259</i>
	 */
	int IDAGetCurrentCj(Pointer ida_mem, DoubleBuffer cj);
	/**
	 * Original signature : <code>int IDAGetCurrentY(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:260</i><br>
	 * @deprecated use the safer method {@link #IDAGetCurrentY(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAGetCurrentY(Pointer ida_mem, Pointer ycur);
	/**
	 * Original signature : <code>int IDAGetCurrentY(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:260</i>
	 */
	int IDAGetCurrentY(Pointer ida_mem, PointerByReference ycur);
	/**
	 * Original signature : <code>int IDAGetCurrentYSens(void*, N_Vector**)</code><br>
	 * <i>native declaration : include\idas\idas.h:261</i>
	 */
	int IDAGetCurrentYSens(Pointer ida_mem, PointerByReference yS);
	/**
	 * Original signature : <code>int IDAGetCurrentYp(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:262</i><br>
	 * @deprecated use the safer method {@link #IDAGetCurrentYp(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAGetCurrentYp(Pointer ida_mem, Pointer ypcur);
	/**
	 * Original signature : <code>int IDAGetCurrentYp(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:262</i>
	 */
	int IDAGetCurrentYp(Pointer ida_mem, PointerByReference ypcur);
	/**
	 * Original signature : <code>int IDAGetCurrentYpSens(void*, N_Vector**)</code><br>
	 * <i>native declaration : include\idas\idas.h:263</i>
	 */
	int IDAGetCurrentYpSens(Pointer ida_mem, PointerByReference ypS);
	/**
	 * Original signature : <code>int IDAGetActualInitStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:264</i><br>
	 * @deprecated use the safer methods {@link #IDAGetActualInitStep(Pointer, DoubleBuffer)} and {@link #IDAGetActualInitStep(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetActualInitStep(Pointer ida_mem, DoubleByReference hinused);
	/**
	 * Original signature : <code>int IDAGetActualInitStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:264</i>
	 */
	int IDAGetActualInitStep(Pointer ida_mem, DoubleBuffer hinused);
	/**
	 * Original signature : <code>int IDAGetLastStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:265</i><br>
	 * @deprecated use the safer methods {@link #IDAGetLastStep(Pointer, DoubleBuffer)} and {@link #IDAGetLastStep(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetLastStep(Pointer ida_mem, DoubleByReference hlast);
	/**
	 * Original signature : <code>int IDAGetLastStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:265</i>
	 */
	int IDAGetLastStep(Pointer ida_mem, DoubleBuffer hlast);
	/**
	 * Original signature : <code>int IDAGetCurrentStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:266</i><br>
	 * @deprecated use the safer methods {@link #IDAGetCurrentStep(Pointer, DoubleBuffer)} and {@link #IDAGetCurrentStep(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetCurrentStep(Pointer ida_mem, DoubleByReference hcur);
	/**
	 * Original signature : <code>int IDAGetCurrentStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:266</i>
	 */
	int IDAGetCurrentStep(Pointer ida_mem, DoubleBuffer hcur);
	/**
	 * Original signature : <code>int IDAGetCurrentTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:267</i><br>
	 * @deprecated use the safer methods {@link #IDAGetCurrentTime(Pointer, DoubleBuffer)} and {@link #IDAGetCurrentTime(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetCurrentTime(Pointer ida_mem, DoubleByReference tcur);
	/**
	 * Original signature : <code>int IDAGetCurrentTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:267</i>
	 */
	int IDAGetCurrentTime(Pointer ida_mem, DoubleBuffer tcur);
	/**
	 * Original signature : <code>int IDAGetTolScaleFactor(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:268</i><br>
	 * @deprecated use the safer methods {@link #IDAGetTolScaleFactor(Pointer, DoubleBuffer)} and {@link #IDAGetTolScaleFactor(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetTolScaleFactor(Pointer ida_mem, DoubleByReference tolsfact);
	/**
	 * Original signature : <code>int IDAGetTolScaleFactor(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:268</i>
	 */
	int IDAGetTolScaleFactor(Pointer ida_mem, DoubleBuffer tolsfact);
	/**
	 * Original signature : <code>int IDAGetErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:269</i><br>
	 * @deprecated use the safer methods {@link #IDAGetErrWeights(Pointer, N_Vector)} and {@link #IDAGetErrWeights(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetErrWeights(Pointer ida_mem, Pointer eweight);
	/**
	 * Original signature : <code>int IDAGetErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:269</i>
	 */
	int IDAGetErrWeights(Pointer ida_mem, N_Vector eweight);
	/**
	 * Original signature : <code>int IDAGetEstLocalErrors(void*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:270</i><br>
	 * @deprecated use the safer methods {@link #IDAGetEstLocalErrors(Pointer, N_Vector)} and {@link #IDAGetEstLocalErrors(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetEstLocalErrors(Pointer ida_mem, Pointer ele);
	/**
	 * Original signature : <code>int IDAGetEstLocalErrors(void*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:270</i>
	 */
	int IDAGetEstLocalErrors(Pointer ida_mem, N_Vector ele);
	/**
	 * Original signature : <code>int IDAGetNumGEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:271</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumGEvals(Pointer, LongBuffer)} and {@link #IDAGetNumGEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumGEvals(Pointer ida_mem, LongByReference ngevals);
	/**
	 * Original signature : <code>int IDAGetNumGEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:271</i>
	 */
	int IDAGetNumGEvals(Pointer ida_mem, LongBuffer ngevals);
	/**
	 * Original signature : <code>int IDAGetRootInfo(void*, int*)</code><br>
	 * <i>native declaration : include\idas\idas.h:272</i><br>
	 * @deprecated use the safer methods {@link #IDAGetRootInfo(Pointer, IntBuffer)} and {@link #IDAGetRootInfo(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int IDAGetRootInfo(Pointer ida_mem, IntByReference rootsfound);
	/**
	 * Original signature : <code>int IDAGetRootInfo(void*, int*)</code><br>
	 * <i>native declaration : include\idas\idas.h:272</i>
	 */
	int IDAGetRootInfo(Pointer ida_mem, IntBuffer rootsfound);
	/**
	 * Original signature : <code>int IDAGetIntegratorStats(void*, long long*, long long*, long long*, long long*, int*, int*, sunrealtype*, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:273</i><br>
	 * @deprecated use the safer methods {@link #IDAGetIntegratorStats(Pointer, LongBuffer, LongBuffer, LongBuffer, LongBuffer, IntBuffer, IntBuffer, DoubleBuffer, DoubleBuffer, DoubleBuffer, DoubleBuffer)} and {@link #IDAGetIntegratorStats(Pointer, LongByReference, LongByReference, LongByReference, LongByReference, IntByReference, IntByReference, DoubleByReference, DoubleByReference, DoubleByReference, DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAGetIntegratorStats(Pointer ida_mem, LongByReference nsteps, LongByReference nrevals, LongByReference nlinsetups, LongByReference netfails, IntByReference qlast, IntByReference qcur, DoubleByReference hinused, DoubleByReference hlast, DoubleByReference hcur, DoubleByReference tcur);
	/**
	 * Original signature : <code>int IDAGetIntegratorStats(void*, long long*, long long*, long long*, long long*, int*, int*, sunrealtype*, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:273</i>
	 */
	int IDAGetIntegratorStats(Pointer ida_mem, LongBuffer nsteps, LongBuffer nrevals, LongBuffer nlinsetups, LongBuffer netfails, IntBuffer qlast, IntBuffer qcur, DoubleBuffer hinused, DoubleBuffer hlast, DoubleBuffer hcur, DoubleBuffer tcur);
	/**
	 * Original signature : <code>int IDAGetNonlinearSystemData(void*, sunrealtype*, N_Vector*, N_Vector*, N_Vector*, N_Vector*, N_Vector*, sunrealtype*, void**)</code><br>
	 * <i>native declaration : include\idas\idas.h:279</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNonlinearSystemData(Pointer, DoubleBuffer, PointerByReference, PointerByReference, PointerByReference, PointerByReference, PointerByReference, DoubleBuffer, PointerByReference)} and {@link #IDAGetNonlinearSystemData(Pointer, DoubleByReference, PointerByReference, PointerByReference, PointerByReference, PointerByReference, PointerByReference, DoubleByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAGetNonlinearSystemData(Pointer ida_mem, DoubleByReference tcur, Pointer yypred, Pointer yppred, Pointer yyn, Pointer ypn, Pointer res, DoubleByReference cj, PointerByReference user_data);
	/**
	 * Original signature : <code>int IDAGetNonlinearSystemData(void*, sunrealtype*, N_Vector*, N_Vector*, N_Vector*, N_Vector*, N_Vector*, sunrealtype*, void**)</code><br>
	 * <i>native declaration : include\idas\idas.h:279</i>
	 */
	int IDAGetNonlinearSystemData(Pointer ida_mem, DoubleBuffer tcur, PointerByReference yypred, PointerByReference yppred, PointerByReference yyn, PointerByReference ypn, PointerByReference res, DoubleBuffer cj, PointerByReference user_data);
	/**
	 * Original signature : <code>int IDAGetNonlinearSystemData(void*, sunrealtype*, N_Vector*, N_Vector*, N_Vector*, N_Vector*, N_Vector*, sunrealtype*, void**)</code><br>
	 * <i>native declaration : include\idas\idas.h:279</i>
	 */
	int IDAGetNonlinearSystemData(Pointer ida_mem, DoubleByReference tcur, PointerByReference yypred, PointerByReference yppred, PointerByReference yyn, PointerByReference ypn, PointerByReference res, DoubleByReference cj, PointerByReference user_data);
	/**
	 * Original signature : <code>int IDAGetNonlinearSystemDataSens(void*, sunrealtype*, N_Vector**, N_Vector**, N_Vector**, N_Vector**, sunrealtype*, void**)</code><br>
	 * <i>native declaration : include\idas\idas.h:284</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNonlinearSystemDataSens(Pointer, DoubleBuffer, PointerByReference, PointerByReference, PointerByReference, PointerByReference, DoubleBuffer, PointerByReference)} and {@link #IDAGetNonlinearSystemDataSens(Pointer, DoubleByReference, PointerByReference, PointerByReference, PointerByReference, PointerByReference, DoubleByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAGetNonlinearSystemDataSens(Pointer ida_mem, DoubleByReference tcur, PointerByReference yySpred, PointerByReference ypSpred, PointerByReference yySn, PointerByReference ypSn, DoubleByReference cj, PointerByReference user_data);
	/**
	 * Original signature : <code>int IDAGetNonlinearSystemDataSens(void*, sunrealtype*, N_Vector**, N_Vector**, N_Vector**, N_Vector**, sunrealtype*, void**)</code><br>
	 * <i>native declaration : include\idas\idas.h:284</i>
	 */
	int IDAGetNonlinearSystemDataSens(Pointer ida_mem, DoubleBuffer tcur, PointerByReference yySpred, PointerByReference ypSpred, PointerByReference yySn, PointerByReference ypSn, DoubleBuffer cj, PointerByReference user_data);
	/**
	 * Original signature : <code>int IDAGetNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:287</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumNonlinSolvIters(Pointer, LongBuffer)} and {@link #IDAGetNumNonlinSolvIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumNonlinSolvIters(Pointer ida_mem, LongByReference nniters);
	/**
	 * Original signature : <code>int IDAGetNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:287</i>
	 */
	int IDAGetNumNonlinSolvIters(Pointer ida_mem, LongBuffer nniters);
	/**
	 * Original signature : <code>int IDAGetNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:288</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumNonlinSolvConvFails(Pointer, LongBuffer)} and {@link #IDAGetNumNonlinSolvConvFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumNonlinSolvConvFails(Pointer ida_mem, LongByReference nnfails);
	/**
	 * Original signature : <code>int IDAGetNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:288</i>
	 */
	int IDAGetNumNonlinSolvConvFails(Pointer ida_mem, LongBuffer nnfails);
	/**
	 * Original signature : <code>int IDAGetNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:290</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNonlinSolvStats(Pointer, LongBuffer, LongBuffer)} and {@link #IDAGetNonlinSolvStats(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNonlinSolvStats(Pointer ida_mem, LongByReference nniters, LongByReference nnfails);
	/**
	 * Original signature : <code>int IDAGetNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:290</i>
	 */
	int IDAGetNonlinSolvStats(Pointer ida_mem, LongBuffer nniters, LongBuffer nnfails);
	/**
	 * Original signature : <code>int IDAGetNumStepSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:292</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumStepSolveFails(Pointer, LongBuffer)} and {@link #IDAGetNumStepSolveFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumStepSolveFails(Pointer ida_mem, LongByReference nncfails);
	/**
	 * Original signature : <code>int IDAGetNumStepSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:292</i>
	 */
	int IDAGetNumStepSolveFails(Pointer ida_mem, LongBuffer nncfails);
	/**
	 * Original signature : <code>int IDAGetUserData(void*, void**)</code><br>
	 * <i>native declaration : include\idas\idas.h:293</i>
	 */
	int IDAGetUserData(Pointer ida_mem, PointerByReference user_data);
	/**
	 * Original signature : <code>int IDAPrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\idas\idas.h:294</i><br>
	 * @deprecated use the safer method {@link #IDAPrintAllStats(Pointer, PointerByReference, int)} instead
	 */
	@Deprecated 
	int IDAPrintAllStats(Pointer ida_mem, Pointer outfile, int fmt);
	/**
	 * Original signature : <code>int IDAPrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\idas\idas.h:294</i>
	 */
	int IDAPrintAllStats(Pointer ida_mem, PointerByReference outfile, int fmt);
	/**
	 * Original signature : <code>char* IDAGetReturnFlagName(long long)</code><br>
	 * <i>native declaration : include\idas\idas.h:296</i>
	 */
	Pointer IDAGetReturnFlagName(long flag);
	/**
	 * Free function<br>
	 * Original signature : <code>void IDAFree(void**)</code><br>
	 * <i>native declaration : include\idas\idas.h:299</i>
	 */
	void IDAFree(PointerByReference ida_mem);
	/**
	 * IDALS interface function that depends on IDAResFn<br>
	 * Original signature : <code>int IDASetJacTimesResFn(void*, IDAResFn)</code><br>
	 * <i>native declaration : include\idas\idas.h:302</i>
	 */
	int IDASetJacTimesResFn(Pointer ida_mem, IDAResFn jtimesResFn);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>int IDAQuadInit(void*, IDAQuadRhsFn, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:309</i><br>
	 * @deprecated use the safer methods {@link #IDAQuadInit(Pointer, IDAQuadRhsFn, N_Vector)} and {@link #IDAQuadInit(Pointer, IDAQuadRhsFn, Pointer)} instead
	 */
	@Deprecated 
	int IDAQuadInit(Pointer ida_mem, IDAQuadRhsFn rhsQ, Pointer yQ0);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>int IDAQuadInit(void*, IDAQuadRhsFn, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:309</i>
	 */
	int IDAQuadInit(Pointer ida_mem, IDAQuadRhsFn rhsQ, N_Vector yQ0);
	/**
	 * Original signature : <code>int IDAQuadReInit(void*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:310</i><br>
	 * @deprecated use the safer methods {@link #IDAQuadReInit(Pointer, N_Vector)} and {@link #IDAQuadReInit(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAQuadReInit(Pointer ida_mem, Pointer yQ0);
	/**
	 * Original signature : <code>int IDAQuadReInit(void*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:310</i>
	 */
	int IDAQuadReInit(Pointer ida_mem, N_Vector yQ0);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int IDAQuadSStolerances(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:313</i>
	 */
	int IDAQuadSStolerances(Pointer ida_mem, double reltolQ, double abstolQ);
	/**
	 * Original signature : <code>int IDAQuadSVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:315</i><br>
	 * @deprecated use the safer methods {@link #IDAQuadSVtolerances(Pointer, double, N_Vector)} and {@link #IDAQuadSVtolerances(Pointer, double, Pointer)} instead
	 */
	@Deprecated 
	int IDAQuadSVtolerances(Pointer ida_mem, double reltolQ, Pointer abstolQ);
	/**
	 * Original signature : <code>int IDAQuadSVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:315</i>
	 */
	int IDAQuadSVtolerances(Pointer ida_mem, double reltolQ, N_Vector abstolQ);
	/**
	 * Optional input specification functions<br>
	 * Original signature : <code>int IDASetQuadErrCon(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:319</i>
	 */
	int IDASetQuadErrCon(Pointer ida_mem, int errconQ);
	/**
	 * Extraction and dense output functions<br>
	 * Original signature : <code>int IDAGetQuad(void*, sunrealtype*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:322</i><br>
	 * @deprecated use the safer methods {@link #IDAGetQuad(Pointer, DoubleBuffer, N_Vector)} and {@link #IDAGetQuad(Pointer, DoubleByReference, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetQuad(Pointer ida_mem, DoubleByReference t, Pointer yQout);
	/**
	 * Extraction and dense output functions<br>
	 * Original signature : <code>int IDAGetQuad(void*, sunrealtype*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:322</i>
	 */
	int IDAGetQuad(Pointer ida_mem, DoubleBuffer t, N_Vector yQout);
	/**
	 * Original signature : <code>int IDAGetQuadDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:323</i><br>
	 * @deprecated use the safer methods {@link #IDAGetQuadDky(Pointer, double, int, N_Vector)} and {@link #IDAGetQuadDky(Pointer, double, int, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetQuadDky(Pointer ida_mem, double t, int k, Pointer dky);
	/**
	 * Original signature : <code>int IDAGetQuadDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:323</i>
	 */
	int IDAGetQuadDky(Pointer ida_mem, double t, int k, N_Vector dky);
	/**
	 * Optional output specification functions<br>
	 * Original signature : <code>int IDAGetQuadNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:327</i><br>
	 * @deprecated use the safer methods {@link #IDAGetQuadNumRhsEvals(Pointer, LongBuffer)} and {@link #IDAGetQuadNumRhsEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetQuadNumRhsEvals(Pointer ida_mem, LongByReference nrhsQevals);
	/**
	 * Optional output specification functions<br>
	 * Original signature : <code>int IDAGetQuadNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:327</i>
	 */
	int IDAGetQuadNumRhsEvals(Pointer ida_mem, LongBuffer nrhsQevals);
	/**
	 * Original signature : <code>int IDAGetQuadNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:328</i><br>
	 * @deprecated use the safer methods {@link #IDAGetQuadNumErrTestFails(Pointer, LongBuffer)} and {@link #IDAGetQuadNumErrTestFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetQuadNumErrTestFails(Pointer ida_mem, LongByReference nQetfails);
	/**
	 * Original signature : <code>int IDAGetQuadNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:328</i>
	 */
	int IDAGetQuadNumErrTestFails(Pointer ida_mem, LongBuffer nQetfails);
	/**
	 * Original signature : <code>int IDAGetQuadErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:329</i><br>
	 * @deprecated use the safer methods {@link #IDAGetQuadErrWeights(Pointer, N_Vector)} and {@link #IDAGetQuadErrWeights(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetQuadErrWeights(Pointer ida_mem, Pointer eQweight);
	/**
	 * Original signature : <code>int IDAGetQuadErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:329</i>
	 */
	int IDAGetQuadErrWeights(Pointer ida_mem, N_Vector eQweight);
	/**
	 * Original signature : <code>int IDAGetQuadStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:330</i><br>
	 * @deprecated use the safer methods {@link #IDAGetQuadStats(Pointer, LongBuffer, LongBuffer)} and {@link #IDAGetQuadStats(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetQuadStats(Pointer ida_mem, LongByReference nrhsQevals, LongByReference nQetfails);
	/**
	 * Original signature : <code>int IDAGetQuadStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:330</i>
	 */
	int IDAGetQuadStats(Pointer ida_mem, LongBuffer nrhsQevals, LongBuffer nQetfails);
	/**
	 * Free function<br>
	 * Original signature : <code>void IDAQuadFree(void*)</code><br>
	 * <i>native declaration : include\idas\idas.h:334</i>
	 */
	void IDAQuadFree(Pointer ida_mem);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>int IDASensInit(void*, int, int, IDASensResFn, N_Vector*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:341</i><br>
	 * @deprecated use the safer method {@link #IDASensInit(Pointer, int, int, IDASensResFn, PointerByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int IDASensInit(Pointer ida_mem, int Ns, int ism, IDASensResFn resS, Pointer yS0, Pointer ypS0);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>int IDASensInit(void*, int, int, IDASensResFn, N_Vector*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:341</i>
	 */
	int IDASensInit(Pointer ida_mem, int Ns, int ism, IDASensResFn resS, PointerByReference yS0, PointerByReference ypS0);
	/**
	 * Original signature : <code>int IDASensReInit(void*, int, N_Vector*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:343</i><br>
	 * @deprecated use the safer method {@link #IDASensReInit(Pointer, int, PointerByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int IDASensReInit(Pointer ida_mem, int ism, Pointer yS0, Pointer ypS0);
	/**
	 * Original signature : <code>int IDASensReInit(void*, int, N_Vector*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:343</i>
	 */
	int IDASensReInit(Pointer ida_mem, int ism, PointerByReference yS0, PointerByReference ypS0);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int IDASensSStolerances(void*, sunrealtype, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:347</i><br>
	 * @deprecated use the safer methods {@link #IDASensSStolerances(Pointer, double, DoubleBuffer)} and {@link #IDASensSStolerances(Pointer, double, DoubleByReference)} instead
	 */
	@Deprecated 
	int IDASensSStolerances(Pointer ida_mem, double reltolS, DoubleByReference abstolS);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int IDASensSStolerances(void*, sunrealtype, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:347</i>
	 */
	int IDASensSStolerances(Pointer ida_mem, double reltolS, DoubleBuffer abstolS);
	/**
	 * Original signature : <code>int IDASensSVtolerances(void*, sunrealtype, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:349</i><br>
	 * @deprecated use the safer method {@link #IDASensSVtolerances(Pointer, double, PointerByReference)} instead
	 */
	@Deprecated 
	int IDASensSVtolerances(Pointer ida_mem, double reltolS, Pointer abstolS);
	/**
	 * Original signature : <code>int IDASensSVtolerances(void*, sunrealtype, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:349</i>
	 */
	int IDASensSVtolerances(Pointer ida_mem, double reltolS, PointerByReference abstolS);
	/**
	 * Original signature : <code>int IDASensEEtolerances(void*)</code><br>
	 * <i>native declaration : include\idas\idas.h:351</i>
	 */
	int IDASensEEtolerances(Pointer ida_mem);
	/**
	 * Initial condition calculation function<br>
	 * Original signature : <code>int IDAGetSensConsistentIC(void*, N_Vector*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:354</i><br>
	 * @deprecated use the safer method {@link #IDAGetSensConsistentIC(Pointer, PointerByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAGetSensConsistentIC(Pointer ida_mem, Pointer yyS0, Pointer ypS0);
	/**
	 * Initial condition calculation function<br>
	 * Original signature : <code>int IDAGetSensConsistentIC(void*, N_Vector*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:354</i>
	 */
	int IDAGetSensConsistentIC(Pointer ida_mem, PointerByReference yyS0, PointerByReference ypS0);
	/**
	 * Optional input specification functions<br>
	 * Original signature : <code>int IDASetSensDQMethod(void*, int, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:358</i>
	 */
	int IDASetSensDQMethod(Pointer ida_mem, int DQtype, double DQrhomax);
	/**
	 * Original signature : <code>int IDASetSensErrCon(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:360</i>
	 */
	int IDASetSensErrCon(Pointer ida_mem, int errconS);
	/**
	 * Original signature : <code>int IDASetSensMaxNonlinIters(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:361</i>
	 */
	int IDASetSensMaxNonlinIters(Pointer ida_mem, int maxcorS);
	/**
	 * Original signature : <code>int IDASetSensParams(void*, sunrealtype*, sunrealtype*, int*)</code><br>
	 * <i>native declaration : include\idas\idas.h:362</i><br>
	 * @deprecated use the safer methods {@link #IDASetSensParams(Pointer, DoubleBuffer, DoubleBuffer, IntBuffer)} and {@link #IDASetSensParams(Pointer, DoubleByReference, DoubleByReference, IntByReference)} instead
	 */
	@Deprecated 
	int IDASetSensParams(Pointer ida_mem, DoubleByReference p, DoubleByReference pbar, IntByReference plist);
	/**
	 * Original signature : <code>int IDASetSensParams(void*, sunrealtype*, sunrealtype*, int*)</code><br>
	 * <i>native declaration : include\idas\idas.h:362</i>
	 */
	int IDASetSensParams(Pointer ida_mem, DoubleBuffer p, DoubleBuffer pbar, IntBuffer plist);
	/**
	 * Integrator nonlinear solver specification functions<br>
	 * Original signature : <code>int IDASetNonlinearSolverSensSim(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\idas\idas.h:366</i><br>
	 * @deprecated use the safer methods {@link #IDASetNonlinearSolverSensSim(Pointer, SUNNonlinearSolver)} and {@link #IDASetNonlinearSolverSensSim(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDASetNonlinearSolverSensSim(Pointer ida_mem, Pointer NLS);
	/**
	 * Integrator nonlinear solver specification functions<br>
	 * Original signature : <code>int IDASetNonlinearSolverSensSim(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\idas\idas.h:366</i>
	 */
	int IDASetNonlinearSolverSensSim(Pointer ida_mem, SUNNonlinearSolver NLS);
	/**
	 * Original signature : <code>int IDASetNonlinearSolverSensStg(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\idas\idas.h:368</i><br>
	 * @deprecated use the safer methods {@link #IDASetNonlinearSolverSensStg(Pointer, SUNNonlinearSolver)} and {@link #IDASetNonlinearSolverSensStg(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDASetNonlinearSolverSensStg(Pointer ida_mem, Pointer NLS);
	/**
	 * Original signature : <code>int IDASetNonlinearSolverSensStg(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\idas\idas.h:368</i>
	 */
	int IDASetNonlinearSolverSensStg(Pointer ida_mem, SUNNonlinearSolver NLS);
	/**
	 * Enable/disable sensitivities<br>
	 * Original signature : <code>int IDASensToggleOff(void*)</code><br>
	 * <i>native declaration : include\idas\idas.h:372</i>
	 */
	int IDASensToggleOff(Pointer ida_mem);
	/**
	 * Extraction and dense output functions<br>
	 * Original signature : <code>int IDAGetSens(void*, sunrealtype*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:375</i><br>
	 * @deprecated use the safer methods {@link #IDAGetSens(Pointer, DoubleBuffer, PointerByReference)} and {@link #IDAGetSens(Pointer, DoubleByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAGetSens(Pointer ida_mem, DoubleByReference tret, Pointer yySout);
	/**
	 * Extraction and dense output functions<br>
	 * Original signature : <code>int IDAGetSens(void*, sunrealtype*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:375</i>
	 */
	int IDAGetSens(Pointer ida_mem, DoubleBuffer tret, PointerByReference yySout);
	/**
	 * Extraction and dense output functions<br>
	 * Original signature : <code>int IDAGetSens(void*, sunrealtype*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:375</i>
	 */
	int IDAGetSens(Pointer ida_mem, DoubleByReference tret, PointerByReference yySout);
	/**
	 * Original signature : <code>int IDAGetSens1(void*, sunrealtype*, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:377</i><br>
	 * @deprecated use the safer methods {@link #IDAGetSens1(Pointer, DoubleBuffer, int, N_Vector)} and {@link #IDAGetSens1(Pointer, DoubleByReference, int, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetSens1(Pointer ida_mem, DoubleByReference tret, int is, Pointer yySret);
	/**
	 * Original signature : <code>int IDAGetSens1(void*, sunrealtype*, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:377</i>
	 */
	int IDAGetSens1(Pointer ida_mem, DoubleBuffer tret, int is, N_Vector yySret);
	/**
	 * Original signature : <code>int IDAGetSensDky(void*, sunrealtype, int, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:380</i><br>
	 * @deprecated use the safer method {@link #IDAGetSensDky(Pointer, double, int, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAGetSensDky(Pointer ida_mem, double t, int k, Pointer dkyS);
	/**
	 * Original signature : <code>int IDAGetSensDky(void*, sunrealtype, int, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:380</i>
	 */
	int IDAGetSensDky(Pointer ida_mem, double t, int k, PointerByReference dkyS);
	/**
	 * Original signature : <code>int IDAGetSensDky1(void*, sunrealtype, int, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:382</i><br>
	 * @deprecated use the safer methods {@link #IDAGetSensDky1(Pointer, double, int, int, N_Vector)} and {@link #IDAGetSensDky1(Pointer, double, int, int, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetSensDky1(Pointer ida_mem, double t, int k, int is, Pointer dkyS);
	/**
	 * Original signature : <code>int IDAGetSensDky1(void*, sunrealtype, int, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:382</i>
	 */
	int IDAGetSensDky1(Pointer ida_mem, double t, int k, int is, N_Vector dkyS);
	/**
	 * Optional output specification functions<br>
	 * Original signature : <code>int IDAGetSensNumResEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:386</i><br>
	 * @deprecated use the safer methods {@link #IDAGetSensNumResEvals(Pointer, LongBuffer)} and {@link #IDAGetSensNumResEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetSensNumResEvals(Pointer ida_mem, LongByReference nresSevals);
	/**
	 * Optional output specification functions<br>
	 * Original signature : <code>int IDAGetSensNumResEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:386</i>
	 */
	int IDAGetSensNumResEvals(Pointer ida_mem, LongBuffer nresSevals);
	/**
	 * Original signature : <code>int IDAGetNumResEvalsSens(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:387</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumResEvalsSens(Pointer, LongBuffer)} and {@link #IDAGetNumResEvalsSens(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumResEvalsSens(Pointer ida_mem, LongByReference nresevalsS);
	/**
	 * Original signature : <code>int IDAGetNumResEvalsSens(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:387</i>
	 */
	int IDAGetNumResEvalsSens(Pointer ida_mem, LongBuffer nresevalsS);
	/**
	 * Original signature : <code>int IDAGetSensNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:388</i><br>
	 * @deprecated use the safer methods {@link #IDAGetSensNumErrTestFails(Pointer, LongBuffer)} and {@link #IDAGetSensNumErrTestFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetSensNumErrTestFails(Pointer ida_mem, LongByReference nSetfails);
	/**
	 * Original signature : <code>int IDAGetSensNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:388</i>
	 */
	int IDAGetSensNumErrTestFails(Pointer ida_mem, LongBuffer nSetfails);
	/**
	 * Original signature : <code>int IDAGetSensNumLinSolvSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:389</i><br>
	 * @deprecated use the safer methods {@link #IDAGetSensNumLinSolvSetups(Pointer, LongBuffer)} and {@link #IDAGetSensNumLinSolvSetups(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetSensNumLinSolvSetups(Pointer ida_mem, LongByReference nlinsetupsS);
	/**
	 * Original signature : <code>int IDAGetSensNumLinSolvSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:389</i>
	 */
	int IDAGetSensNumLinSolvSetups(Pointer ida_mem, LongBuffer nlinsetupsS);
	/**
	 * Original signature : <code>int IDAGetSensErrWeights(void*, N_Vector_S)</code><br>
	 * <i>native declaration : include\idas\idas.h:391</i><br>
	 * @deprecated use the safer methods {@link #IDAGetSensErrWeights(Pointer, N_Vector_S)} and {@link #IDAGetSensErrWeights(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetSensErrWeights(Pointer ida_mem, Pointer eSweight);
	/**
	 * Original signature : <code>int IDAGetSensErrWeights(void*, N_Vector_S)</code><br>
	 * <i>native declaration : include\idas\idas.h:391</i>
	 */
	int IDAGetSensErrWeights(Pointer ida_mem, N_Vector_S eSweight);
	/**
	 * Original signature : <code>int IDAGetSensStats(void*, long long*, long long*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:392</i><br>
	 * @deprecated use the safer methods {@link #IDAGetSensStats(Pointer, LongBuffer, LongBuffer, LongBuffer, LongBuffer)} and {@link #IDAGetSensStats(Pointer, LongByReference, LongByReference, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetSensStats(Pointer ida_mem, LongByReference nresSevals, LongByReference nresevalsS, LongByReference nSetfails, LongByReference nlinsetupsS);
	/**
	 * Original signature : <code>int IDAGetSensStats(void*, long long*, long long*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:392</i>
	 */
	int IDAGetSensStats(Pointer ida_mem, LongBuffer nresSevals, LongBuffer nresevalsS, LongBuffer nSetfails, LongBuffer nlinsetupsS);
	/**
	 * Original signature : <code>int IDAGetSensNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:395</i><br>
	 * @deprecated use the safer methods {@link #IDAGetSensNumNonlinSolvIters(Pointer, LongBuffer)} and {@link #IDAGetSensNumNonlinSolvIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetSensNumNonlinSolvIters(Pointer ida_mem, LongByReference nSniters);
	/**
	 * Original signature : <code>int IDAGetSensNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:395</i>
	 */
	int IDAGetSensNumNonlinSolvIters(Pointer ida_mem, LongBuffer nSniters);
	/**
	 * Original signature : <code>int IDAGetSensNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:397</i><br>
	 * @deprecated use the safer methods {@link #IDAGetSensNumNonlinSolvConvFails(Pointer, LongBuffer)} and {@link #IDAGetSensNumNonlinSolvConvFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetSensNumNonlinSolvConvFails(Pointer ida_mem, LongByReference nSnfails);
	/**
	 * Original signature : <code>int IDAGetSensNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:397</i>
	 */
	int IDAGetSensNumNonlinSolvConvFails(Pointer ida_mem, LongBuffer nSnfails);
	/**
	 * Original signature : <code>int IDAGetSensNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:399</i><br>
	 * @deprecated use the safer methods {@link #IDAGetSensNonlinSolvStats(Pointer, LongBuffer, LongBuffer)} and {@link #IDAGetSensNonlinSolvStats(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetSensNonlinSolvStats(Pointer ida_mem, LongByReference nSniters, LongByReference nSnfails);
	/**
	 * Original signature : <code>int IDAGetSensNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:399</i>
	 */
	int IDAGetSensNonlinSolvStats(Pointer ida_mem, LongBuffer nSniters, LongBuffer nSnfails);
	/**
	 * Original signature : <code>int IDAGetNumStepSensSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:401</i><br>
	 * @deprecated use the safer methods {@link #IDAGetNumStepSensSolveFails(Pointer, LongBuffer)} and {@link #IDAGetNumStepSensSolveFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetNumStepSensSolveFails(Pointer ida_mem, LongByReference nSncfails);
	/**
	 * Original signature : <code>int IDAGetNumStepSensSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:401</i>
	 */
	int IDAGetNumStepSensSolveFails(Pointer ida_mem, LongBuffer nSncfails);
	/**
	 * Free function<br>
	 * Original signature : <code>void IDASensFree(void*)</code><br>
	 * <i>native declaration : include\idas\idas.h:405</i>
	 */
	void IDASensFree(Pointer ida_mem);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>int IDAQuadSensInit(void*, IDAQuadSensRhsFn, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:412</i><br>
	 * @deprecated use the safer method {@link #IDAQuadSensInit(Pointer, IDAQuadSensRhsFn, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAQuadSensInit(Pointer ida_mem, IDAQuadSensRhsFn resQS, Pointer yQS0);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>int IDAQuadSensInit(void*, IDAQuadSensRhsFn, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:412</i>
	 */
	int IDAQuadSensInit(Pointer ida_mem, IDAQuadSensRhsFn resQS, PointerByReference yQS0);
	/**
	 * Original signature : <code>int IDAQuadSensReInit(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:414</i><br>
	 * @deprecated use the safer method {@link #IDAQuadSensReInit(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAQuadSensReInit(Pointer ida_mem, Pointer yQS0);
	/**
	 * Original signature : <code>int IDAQuadSensReInit(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:414</i>
	 */
	int IDAQuadSensReInit(Pointer ida_mem, PointerByReference yQS0);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int IDAQuadSensSStolerances(void*, sunrealtype, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:417</i><br>
	 * @deprecated use the safer methods {@link #IDAQuadSensSStolerances(Pointer, double, DoubleBuffer)} and {@link #IDAQuadSensSStolerances(Pointer, double, DoubleByReference)} instead
	 */
	@Deprecated 
	int IDAQuadSensSStolerances(Pointer ida_mem, double reltolQS, DoubleByReference abstolQS);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int IDAQuadSensSStolerances(void*, sunrealtype, sunrealtype*)</code><br>
	 * <i>native declaration : include\idas\idas.h:417</i>
	 */
	int IDAQuadSensSStolerances(Pointer ida_mem, double reltolQS, DoubleBuffer abstolQS);
	/**
	 * Original signature : <code>int IDAQuadSensSVtolerances(void*, sunrealtype, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:419</i><br>
	 * @deprecated use the safer method {@link #IDAQuadSensSVtolerances(Pointer, double, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAQuadSensSVtolerances(Pointer ida_mem, double reltolQS, Pointer abstolQS);
	/**
	 * Original signature : <code>int IDAQuadSensSVtolerances(void*, sunrealtype, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:419</i>
	 */
	int IDAQuadSensSVtolerances(Pointer ida_mem, double reltolQS, PointerByReference abstolQS);
	/**
	 * Original signature : <code>int IDAQuadSensEEtolerances(void*)</code><br>
	 * <i>native declaration : include\idas\idas.h:421</i>
	 */
	int IDAQuadSensEEtolerances(Pointer ida_mem);
	/**
	 * Optional input specification functions<br>
	 * Original signature : <code>int IDASetQuadSensErrCon(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:424</i>
	 */
	int IDASetQuadSensErrCon(Pointer ida_mem, int errconQS);
	/**
	 * Extraction and dense output functions<br>
	 * Original signature : <code>int IDAGetQuadSens(void*, sunrealtype*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:427</i><br>
	 * @deprecated use the safer methods {@link #IDAGetQuadSens(Pointer, DoubleBuffer, PointerByReference)} and {@link #IDAGetQuadSens(Pointer, DoubleByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAGetQuadSens(Pointer ida_mem, DoubleByReference tret, Pointer yyQSout);
	/**
	 * Extraction and dense output functions<br>
	 * Original signature : <code>int IDAGetQuadSens(void*, sunrealtype*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:427</i>
	 */
	int IDAGetQuadSens(Pointer ida_mem, DoubleBuffer tret, PointerByReference yyQSout);
	/**
	 * Extraction and dense output functions<br>
	 * Original signature : <code>int IDAGetQuadSens(void*, sunrealtype*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:427</i>
	 */
	int IDAGetQuadSens(Pointer ida_mem, DoubleByReference tret, PointerByReference yyQSout);
	/**
	 * Original signature : <code>int IDAGetQuadSens1(void*, sunrealtype*, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:429</i><br>
	 * @deprecated use the safer methods {@link #IDAGetQuadSens1(Pointer, DoubleBuffer, int, N_Vector)} and {@link #IDAGetQuadSens1(Pointer, DoubleByReference, int, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetQuadSens1(Pointer ida_mem, DoubleByReference tret, int is, Pointer yyQSret);
	/**
	 * Original signature : <code>int IDAGetQuadSens1(void*, sunrealtype*, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:429</i>
	 */
	int IDAGetQuadSens1(Pointer ida_mem, DoubleBuffer tret, int is, N_Vector yyQSret);
	/**
	 * Original signature : <code>int IDAGetQuadSensDky(void*, sunrealtype, int, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:431</i><br>
	 * @deprecated use the safer method {@link #IDAGetQuadSensDky(Pointer, double, int, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAGetQuadSensDky(Pointer ida_mem, double t, int k, Pointer dkyQS);
	/**
	 * Original signature : <code>int IDAGetQuadSensDky(void*, sunrealtype, int, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:431</i>
	 */
	int IDAGetQuadSensDky(Pointer ida_mem, double t, int k, PointerByReference dkyQS);
	/**
	 * Original signature : <code>int IDAGetQuadSensDky1(void*, sunrealtype, int, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:433</i><br>
	 * @deprecated use the safer methods {@link #IDAGetQuadSensDky1(Pointer, double, int, int, N_Vector)} and {@link #IDAGetQuadSensDky1(Pointer, double, int, int, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetQuadSensDky1(Pointer ida_mem, double t, int k, int is, Pointer dkyQS);
	/**
	 * Original signature : <code>int IDAGetQuadSensDky1(void*, sunrealtype, int, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:433</i>
	 */
	int IDAGetQuadSensDky1(Pointer ida_mem, double t, int k, int is, N_Vector dkyQS);
	/**
	 * Optional output specification functions<br>
	 * Original signature : <code>int IDAGetQuadSensNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:437</i><br>
	 * @deprecated use the safer methods {@link #IDAGetQuadSensNumRhsEvals(Pointer, LongBuffer)} and {@link #IDAGetQuadSensNumRhsEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetQuadSensNumRhsEvals(Pointer ida_mem, LongByReference nrhsQSevals);
	/**
	 * Optional output specification functions<br>
	 * Original signature : <code>int IDAGetQuadSensNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:437</i>
	 */
	int IDAGetQuadSensNumRhsEvals(Pointer ida_mem, LongBuffer nrhsQSevals);
	/**
	 * Original signature : <code>int IDAGetQuadSensNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:439</i><br>
	 * @deprecated use the safer methods {@link #IDAGetQuadSensNumErrTestFails(Pointer, LongBuffer)} and {@link #IDAGetQuadSensNumErrTestFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetQuadSensNumErrTestFails(Pointer ida_mem, LongByReference nQSetfails);
	/**
	 * Original signature : <code>int IDAGetQuadSensNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:439</i>
	 */
	int IDAGetQuadSensNumErrTestFails(Pointer ida_mem, LongBuffer nQSetfails);
	/**
	 * Original signature : <code>int IDAGetQuadSensErrWeights(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:441</i><br>
	 * @deprecated use the safer method {@link #IDAGetQuadSensErrWeights(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int IDAGetQuadSensErrWeights(Pointer ida_mem, Pointer eQSweight);
	/**
	 * Original signature : <code>int IDAGetQuadSensErrWeights(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:441</i>
	 */
	int IDAGetQuadSensErrWeights(Pointer ida_mem, PointerByReference eQSweight);
	/**
	 * Original signature : <code>int IDAGetQuadSensStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:442</i><br>
	 * @deprecated use the safer methods {@link #IDAGetQuadSensStats(Pointer, LongBuffer, LongBuffer)} and {@link #IDAGetQuadSensStats(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int IDAGetQuadSensStats(Pointer ida_mem, LongByReference nrhsQSevals, LongByReference nQSetfails);
	/**
	 * Original signature : <code>int IDAGetQuadSensStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas.h:442</i>
	 */
	int IDAGetQuadSensStats(Pointer ida_mem, LongBuffer nrhsQSevals, LongBuffer nQSetfails);
	/**
	 * Free function<br>
	 * Original signature : <code>void IDAQuadSensFree(void*)</code><br>
	 * <i>native declaration : include\idas\idas.h:446</i>
	 */
	void IDAQuadSensFree(Pointer ida_mem);
	/**
	 * Initialization functions<br>
	 * Original signature : <code>int IDAAdjInit(void*, long long, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:454</i>
	 */
	int IDAAdjInit(Pointer ida_mem, long steps, int interp);
	/**
	 * Original signature : <code>int IDAAdjReInit(void*)</code><br>
	 * <i>native declaration : include\idas\idas.h:456</i>
	 */
	int IDAAdjReInit(Pointer ida_mem);
	/**
	 * Original signature : <code>void IDAAdjFree(void*)</code><br>
	 * <i>native declaration : include\idas\idas.h:458</i>
	 */
	void IDAAdjFree(Pointer ida_mem);
	/**
	 * Backward Problem Setup Functions<br>
	 * Original signature : <code>int IDACreateB(void*, int*)</code><br>
	 * <i>native declaration : include\idas\idas.h:462</i><br>
	 * @deprecated use the safer methods {@link #IDACreateB(Pointer, IntBuffer)} and {@link #IDACreateB(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int IDACreateB(Pointer ida_mem, IntByReference which);
	/**
	 * Backward Problem Setup Functions<br>
	 * Original signature : <code>int IDACreateB(void*, int*)</code><br>
	 * <i>native declaration : include\idas\idas.h:462</i>
	 */
	int IDACreateB(Pointer ida_mem, IntBuffer which);
	/**
	 * Original signature : <code>int IDAInitB(void*, int, IDAResFnB, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:464</i><br>
	 * @deprecated use the safer methods {@link #IDAInitB(Pointer, int, IDAResFnB, double, N_Vector, N_Vector)} and {@link #IDAInitB(Pointer, int, IDAResFnB, double, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAInitB(Pointer ida_mem, int which, IDAResFnB resB, double tB0, Pointer yyB0, Pointer ypB0);
	/**
	 * Original signature : <code>int IDAInitB(void*, int, IDAResFnB, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:464</i>
	 */
	int IDAInitB(Pointer ida_mem, int which, IDAResFnB resB, double tB0, N_Vector yyB0, N_Vector ypB0);
	/**
	 * Original signature : <code>int IDAInitBS(void*, int, IDAResFnBS, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:467</i><br>
	 * @deprecated use the safer methods {@link #IDAInitBS(Pointer, int, IDAResFnBS, double, N_Vector, N_Vector)} and {@link #IDAInitBS(Pointer, int, IDAResFnBS, double, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAInitBS(Pointer ida_mem, int which, IDAResFnBS resS, double tB0, Pointer yyB0, Pointer ypB0);
	/**
	 * Original signature : <code>int IDAInitBS(void*, int, IDAResFnBS, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:467</i>
	 */
	int IDAInitBS(Pointer ida_mem, int which, IDAResFnBS resS, double tB0, N_Vector yyB0, N_Vector ypB0);
	/**
	 * Original signature : <code>int IDAReInitB(void*, int, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:470</i><br>
	 * @deprecated use the safer methods {@link #IDAReInitB(Pointer, int, double, N_Vector, N_Vector)} and {@link #IDAReInitB(Pointer, int, double, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAReInitB(Pointer ida_mem, int which, double tB0, Pointer yyB0, Pointer ypB0);
	/**
	 * Original signature : <code>int IDAReInitB(void*, int, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:470</i>
	 */
	int IDAReInitB(Pointer ida_mem, int which, double tB0, N_Vector yyB0, N_Vector ypB0);
	/**
	 * Original signature : <code>int IDASStolerancesB(void*, int, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:473</i>
	 */
	int IDASStolerancesB(Pointer ida_mem, int which, double relTolB, double absTolB);
	/**
	 * Original signature : <code>int IDASVtolerancesB(void*, int, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:475</i><br>
	 * @deprecated use the safer methods {@link #IDASVtolerancesB(Pointer, int, double, N_Vector)} and {@link #IDASVtolerancesB(Pointer, int, double, Pointer)} instead
	 */
	@Deprecated 
	int IDASVtolerancesB(Pointer ida_mem, int which, double relTolB, Pointer absTolB);
	/**
	 * Original signature : <code>int IDASVtolerancesB(void*, int, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:475</i>
	 */
	int IDASVtolerancesB(Pointer ida_mem, int which, double relTolB, N_Vector absTolB);
	/**
	 * Original signature : <code>int IDAQuadInitB(void*, int, IDAQuadRhsFnB, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:478</i><br>
	 * @deprecated use the safer methods {@link #IDAQuadInitB(Pointer, int, IDAQuadRhsFnB, N_Vector)} and {@link #IDAQuadInitB(Pointer, int, IDAQuadRhsFnB, Pointer)} instead
	 */
	@Deprecated 
	int IDAQuadInitB(Pointer ida_mem, int which, IDAQuadRhsFnB rhsQB, Pointer yQB0);
	/**
	 * Original signature : <code>int IDAQuadInitB(void*, int, IDAQuadRhsFnB, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:478</i>
	 */
	int IDAQuadInitB(Pointer ida_mem, int which, IDAQuadRhsFnB rhsQB, N_Vector yQB0);
	/**
	 * Original signature : <code>int IDAQuadInitBS(void*, int, IDAQuadRhsFnBS, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:481</i><br>
	 * @deprecated use the safer methods {@link #IDAQuadInitBS(Pointer, int, IDAQuadRhsFnBS, N_Vector)} and {@link #IDAQuadInitBS(Pointer, int, IDAQuadRhsFnBS, Pointer)} instead
	 */
	@Deprecated 
	int IDAQuadInitBS(Pointer ida_mem, int which, IDAQuadRhsFnBS rhsQS, Pointer yQB0);
	/**
	 * Original signature : <code>int IDAQuadInitBS(void*, int, IDAQuadRhsFnBS, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:481</i>
	 */
	int IDAQuadInitBS(Pointer ida_mem, int which, IDAQuadRhsFnBS rhsQS, N_Vector yQB0);
	/**
	 * Original signature : <code>int IDAQuadReInitB(void*, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:484</i><br>
	 * @deprecated use the safer methods {@link #IDAQuadReInitB(Pointer, int, N_Vector)} and {@link #IDAQuadReInitB(Pointer, int, Pointer)} instead
	 */
	@Deprecated 
	int IDAQuadReInitB(Pointer ida_mem, int which, Pointer yQB0);
	/**
	 * Original signature : <code>int IDAQuadReInitB(void*, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:484</i>
	 */
	int IDAQuadReInitB(Pointer ida_mem, int which, N_Vector yQB0);
	/**
	 * Original signature : <code>int IDAQuadSStolerancesB(void*, int, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:486</i>
	 */
	int IDAQuadSStolerancesB(Pointer ida_mem, int which, double reltolQB, double abstolQB);
	/**
	 * Original signature : <code>int IDAQuadSVtolerancesB(void*, int, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:489</i><br>
	 * @deprecated use the safer methods {@link #IDAQuadSVtolerancesB(Pointer, int, double, N_Vector)} and {@link #IDAQuadSVtolerancesB(Pointer, int, double, Pointer)} instead
	 */
	@Deprecated 
	int IDAQuadSVtolerancesB(Pointer ida_mem, int which, double reltolQB, Pointer abstolQB);
	/**
	 * Original signature : <code>int IDAQuadSVtolerancesB(void*, int, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:489</i>
	 */
	int IDAQuadSVtolerancesB(Pointer ida_mem, int which, double reltolQB, N_Vector abstolQB);
	/**
	 * Consistent IC calculation functions<br>
	 * Original signature : <code>int IDACalcICB(void*, int, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:494</i><br>
	 * @deprecated use the safer methods {@link #IDACalcICB(Pointer, int, double, N_Vector, N_Vector)} and {@link #IDACalcICB(Pointer, int, double, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDACalcICB(Pointer ida_mem, int which, double tout1, Pointer yy0, Pointer yp0);
	/**
	 * Consistent IC calculation functions<br>
	 * Original signature : <code>int IDACalcICB(void*, int, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:494</i>
	 */
	int IDACalcICB(Pointer ida_mem, int which, double tout1, N_Vector yy0, N_Vector yp0);
	/**
	 * Original signature : <code>int IDACalcICBS(void*, int, sunrealtype, N_Vector, N_Vector, N_Vector*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:497</i><br>
	 * @deprecated use the safer methods {@link #IDACalcICBS(Pointer, int, double, N_Vector, N_Vector, PointerByReference, PointerByReference)} and {@link #IDACalcICBS(Pointer, int, double, Pointer, Pointer, PointerByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int IDACalcICBS(Pointer ida_mem, int which, double tout1, Pointer yy0, Pointer yp0, Pointer yyS0, Pointer ypS0);
	/**
	 * Original signature : <code>int IDACalcICBS(void*, int, sunrealtype, N_Vector, N_Vector, N_Vector*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:497</i>
	 */
	int IDACalcICBS(Pointer ida_mem, int which, double tout1, N_Vector yy0, N_Vector yp0, PointerByReference yyS0, PointerByReference ypS0);
	/**
	 * Original signature : <code>int IDACalcICBS(void*, int, sunrealtype, N_Vector, N_Vector, N_Vector*, N_Vector*)</code><br>
	 * <i>native declaration : include\idas\idas.h:497</i>
	 */
	int IDACalcICBS(Pointer ida_mem, int which, double tout1, Pointer yy0, Pointer yp0, PointerByReference yyS0, PointerByReference ypS0);
	/**
	 * Solver Function For Forward Problems<br>
	 * Original signature : <code>int IDASolveF(void*, sunrealtype, sunrealtype*, N_Vector, N_Vector, int, int*)</code><br>
	 * <i>native declaration : include\idas\idas.h:503</i><br>
	 * @deprecated use the safer methods {@link #IDASolveF(Pointer, double, DoubleBuffer, N_Vector, N_Vector, int, IntBuffer)} and {@link #IDASolveF(Pointer, double, DoubleByReference, Pointer, Pointer, int, IntByReference)} instead
	 */
	@Deprecated 
	int IDASolveF(Pointer ida_mem, double tout, DoubleByReference tret, Pointer yret, Pointer ypret, int itask, IntByReference ncheckPtr);
	/**
	 * Solver Function For Forward Problems<br>
	 * Original signature : <code>int IDASolveF(void*, sunrealtype, sunrealtype*, N_Vector, N_Vector, int, int*)</code><br>
	 * <i>native declaration : include\idas\idas.h:503</i>
	 */
	int IDASolveF(Pointer ida_mem, double tout, DoubleBuffer tret, N_Vector yret, N_Vector ypret, int itask, IntBuffer ncheckPtr);
	/**
	 * Solver Function For Backward Problems<br>
	 * Original signature : <code>int IDASolveB(void*, sunrealtype, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:509</i>
	 */
	int IDASolveB(Pointer ida_mem, double tBout, int itaskB);
	/**
	 * Optional Input Functions For Adjoint Problems<br>
	 * Original signature : <code>int IDAAdjSetNoSensi(void*)</code><br>
	 * <i>native declaration : include\idas\idas.h:513</i>
	 */
	int IDAAdjSetNoSensi(Pointer ida_mem);
	/**
	 * Original signature : <code>int IDASetUserDataB(void*, int, void*)</code><br>
	 * <i>native declaration : include\idas\idas.h:515</i>
	 */
	int IDASetUserDataB(Pointer ida_mem, int which, Pointer user_dataB);
	/**
	 * Original signature : <code>int IDASetMaxOrdB(void*, int, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:516</i>
	 */
	int IDASetMaxOrdB(Pointer ida_mem, int which, int maxordB);
	/**
	 * Original signature : <code>int IDASetMaxNumStepsB(void*, int, long long)</code><br>
	 * <i>native declaration : include\idas\idas.h:517</i>
	 */
	int IDASetMaxNumStepsB(Pointer ida_mem, int which, long mxstepsB);
	/**
	 * Original signature : <code>int IDASetInitStepB(void*, int, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:519</i>
	 */
	int IDASetInitStepB(Pointer ida_mem, int which, double hinB);
	/**
	 * Original signature : <code>int IDASetMaxStepB(void*, int, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas.h:520</i>
	 */
	int IDASetMaxStepB(Pointer ida_mem, int which, double hmaxB);
	/**
	 * Original signature : <code>int IDASetSuppressAlgB(void*, int, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:521</i>
	 */
	int IDASetSuppressAlgB(Pointer ida_mem, int which, int suppressalgB);
	/**
	 * Original signature : <code>int IDASetIdB(void*, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:523</i><br>
	 * @deprecated use the safer methods {@link #IDASetIdB(Pointer, int, N_Vector)} and {@link #IDASetIdB(Pointer, int, Pointer)} instead
	 */
	@Deprecated 
	int IDASetIdB(Pointer ida_mem, int which, Pointer idB);
	/**
	 * Original signature : <code>int IDASetIdB(void*, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:523</i>
	 */
	int IDASetIdB(Pointer ida_mem, int which, N_Vector idB);
	/**
	 * Original signature : <code>int IDASetConstraintsB(void*, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:524</i><br>
	 * @deprecated use the safer methods {@link #IDASetConstraintsB(Pointer, int, N_Vector)} and {@link #IDASetConstraintsB(Pointer, int, Pointer)} instead
	 */
	@Deprecated 
	int IDASetConstraintsB(Pointer ida_mem, int which, Pointer constraintsB);
	/**
	 * Original signature : <code>int IDASetConstraintsB(void*, int, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:524</i>
	 */
	int IDASetConstraintsB(Pointer ida_mem, int which, N_Vector constraintsB);
	/**
	 * Original signature : <code>int IDASetQuadErrConB(void*, int, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:526</i>
	 */
	int IDASetQuadErrConB(Pointer ida_mem, int which, int errconQB);
	/**
	 * Original signature : <code>int IDASetNonlinearSolverB(void*, int, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\idas\idas.h:528</i><br>
	 * @deprecated use the safer methods {@link #IDASetNonlinearSolverB(Pointer, int, SUNNonlinearSolver)} and {@link #IDASetNonlinearSolverB(Pointer, int, Pointer)} instead
	 */
	@Deprecated 
	int IDASetNonlinearSolverB(Pointer ida_mem, int which, Pointer NLS);
	/**
	 * Original signature : <code>int IDASetNonlinearSolverB(void*, int, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\idas\idas.h:528</i>
	 */
	int IDASetNonlinearSolverB(Pointer ida_mem, int which, SUNNonlinearSolver NLS);
	/**
	 * Extraction And Dense Output Functions For Backward Problems<br>
	 * Original signature : <code>int IDAGetB(void*, int, sunrealtype*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:533</i><br>
	 * @deprecated use the safer methods {@link #IDAGetB(Pointer, int, DoubleBuffer, N_Vector, N_Vector)} and {@link #IDAGetB(Pointer, int, DoubleByReference, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetB(Pointer ida_mem, int which, DoubleByReference tret, Pointer yy, Pointer yp);
	/**
	 * Extraction And Dense Output Functions For Backward Problems<br>
	 * Original signature : <code>int IDAGetB(void*, int, sunrealtype*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:533</i>
	 */
	int IDAGetB(Pointer ida_mem, int which, DoubleBuffer tret, N_Vector yy, N_Vector yp);
	/**
	 * Original signature : <code>int IDAGetQuadB(void*, int, sunrealtype*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:535</i><br>
	 * @deprecated use the safer methods {@link #IDAGetQuadB(Pointer, int, DoubleBuffer, N_Vector)} and {@link #IDAGetQuadB(Pointer, int, DoubleByReference, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetQuadB(Pointer ida_mem, int which, DoubleByReference tret, Pointer qB);
	/**
	 * Original signature : <code>int IDAGetQuadB(void*, int, sunrealtype*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:535</i>
	 */
	int IDAGetQuadB(Pointer ida_mem, int which, DoubleBuffer tret, N_Vector qB);
	/**
	 * Optional Output Functions For Backward Problems<br>
	 * Original signature : <code>void* IDAGetAdjIDABmem(void*, int)</code><br>
	 * <i>native declaration : include\idas\idas.h:540</i>
	 */
	Pointer IDAGetAdjIDABmem(Pointer ida_mem, int which);
	/**
	 * Original signature : <code>int IDAGetConsistentICB(void*, int, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:542</i><br>
	 * @deprecated use the safer methods {@link #IDAGetConsistentICB(Pointer, int, N_Vector, N_Vector)} and {@link #IDAGetConsistentICB(Pointer, int, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetConsistentICB(Pointer ida_mem, int which, Pointer yyB0, Pointer ypB0);
	/**
	 * Original signature : <code>int IDAGetConsistentICB(void*, int, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:542</i>
	 */
	int IDAGetConsistentICB(Pointer ida_mem, int which, N_Vector yyB0, N_Vector ypB0);
	/**
	 * Original signature : <code>int IDAGetAdjY(void*, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:545</i><br>
	 * @deprecated use the safer methods {@link #IDAGetAdjY(Pointer, double, N_Vector, N_Vector)} and {@link #IDAGetAdjY(Pointer, double, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetAdjY(Pointer ida_mem, double t, Pointer yy, Pointer yp);
	/**
	 * Original signature : <code>int IDAGetAdjY(void*, sunrealtype, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:545</i>
	 */
	int IDAGetAdjY(Pointer ida_mem, double t, N_Vector yy, N_Vector yp);
	/**
	 * Original signature : <code>int IDAGetAdjCheckPointsInfo(void*, IDAadjCheckPointRec*)</code><br>
	 * <i>native declaration : include\idas\idas.h:559</i>
	 */
	int IDAGetAdjCheckPointsInfo(Pointer ida_mem, IDAadjCheckPointRec ckpnt);
	/**
	 * IDALS interface function that depends on IDAResFn<br>
	 * Original signature : <code>int IDASetJacTimesResFnB(void*, int, IDAResFn)</code><br>
	 * <i>native declaration : include\idas\idas.h:563</i>
	 */
	int IDASetJacTimesResFnB(Pointer ida_mem, int which, IDAResFn jtimesResFn);
	/**
	 * -----------------------------------------------------------------<br>
	 * IDAGetAdjDataPointHermite<br>
	 * -----------------------------------------------------------------<br>
	 *    Returns the 2 vectors stored for cubic Hermite interpolation<br>
	 *    at the data point 'which'. The user must allocate space for<br>
	 *    yy and yd. Returns IDA_MEM_NULL if ida_mem is NULL,<br>
	 *    IDA_ILL_INPUT if the interpolation type previously specified<br>
	 *    is not IDA_HERMITE, or IDA_SUCCESS otherwise.<br>
	 * -----------------------------------------------------------------<br>
	 * IDAGetAdjDataPointPolynomial<br>
	 * -----------------------------------------------------------------<br>
	 *    Returns the vector stored for polynomial interpolation<br>
	 *    at the data point 'which'. The user must allocate space for<br>
	 *    y. Returns IDA_MEM_NULL if ida_mem is NULL, IDA_ILL_INPUT if<br>
	 *    the interpolation type previously specified is not<br>
	 *    IDA_POLYNOMIAL, or IDA_SUCCESS otherwise.<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int IDAGetAdjDataPointHermite(void*, int, sunrealtype*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:586</i><br>
	 * @deprecated use the safer methods {@link #IDAGetAdjDataPointHermite(Pointer, int, DoubleBuffer, N_Vector, N_Vector)} and {@link #IDAGetAdjDataPointHermite(Pointer, int, DoubleByReference, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetAdjDataPointHermite(Pointer ida_mem, int which, DoubleByReference t, Pointer yy, Pointer yd);
	/**
	 * -----------------------------------------------------------------<br>
	 * IDAGetAdjDataPointHermite<br>
	 * -----------------------------------------------------------------<br>
	 *    Returns the 2 vectors stored for cubic Hermite interpolation<br>
	 *    at the data point 'which'. The user must allocate space for<br>
	 *    yy and yd. Returns IDA_MEM_NULL if ida_mem is NULL,<br>
	 *    IDA_ILL_INPUT if the interpolation type previously specified<br>
	 *    is not IDA_HERMITE, or IDA_SUCCESS otherwise.<br>
	 * -----------------------------------------------------------------<br>
	 * IDAGetAdjDataPointPolynomial<br>
	 * -----------------------------------------------------------------<br>
	 *    Returns the vector stored for polynomial interpolation<br>
	 *    at the data point 'which'. The user must allocate space for<br>
	 *    y. Returns IDA_MEM_NULL if ida_mem is NULL, IDA_ILL_INPUT if<br>
	 *    the interpolation type previously specified is not<br>
	 *    IDA_POLYNOMIAL, or IDA_SUCCESS otherwise.<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int IDAGetAdjDataPointHermite(void*, int, sunrealtype*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:586</i>
	 */
	int IDAGetAdjDataPointHermite(Pointer ida_mem, int which, DoubleBuffer t, N_Vector yy, N_Vector yd);
	/**
	 * Original signature : <code>int IDAGetAdjDataPointPolynomial(void*, int, sunrealtype*, int*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:590</i><br>
	 * @deprecated use the safer methods {@link #IDAGetAdjDataPointPolynomial(Pointer, int, DoubleBuffer, IntBuffer, N_Vector)} and {@link #IDAGetAdjDataPointPolynomial(Pointer, int, DoubleByReference, IntByReference, Pointer)} instead
	 */
	@Deprecated 
	int IDAGetAdjDataPointPolynomial(Pointer ida_mem, int which, DoubleByReference t, IntByReference order, Pointer y);
	/**
	 * Original signature : <code>int IDAGetAdjDataPointPolynomial(void*, int, sunrealtype*, int*, N_Vector)</code><br>
	 * <i>native declaration : include\idas\idas.h:590</i>
	 */
	int IDAGetAdjDataPointPolynomial(Pointer ida_mem, int which, DoubleBuffer t, IntBuffer order, N_Vector y);
	/**
	 * -----------------------------------------------------------------<br>
	 * IDAGetAdjCurrentCheckPoint<br>
	 *    Returns the address of the 'active' check point.<br>
	 * -----------------------------------------------------------------<br>
	 * Original signature : <code>int IDAGetAdjCurrentCheckPoint(void*, void**)</code><br>
	 * <i>native declaration : include\idas\idas.h:599</i>
	 */
	int IDAGetAdjCurrentCheckPoint(Pointer ida_mem, PointerByReference addr);
	/**
	 * Exported Functions<br>
	 * Original signature : <code>int IDABBDPrecInit(void*, sunindextype, sunindextype, sunindextype, sunindextype, sunindextype, sunrealtype, IDABBDLocalFn, IDABBDCommFn)</code><br>
	 * <i>native declaration : include\idas\idas_bbdpre.h:20</i>
	 */
	int IDABBDPrecInit(Pointer ida_mem, long Nlocal, long mudq, long mldq, long mukeep, long mlkeep, double dq_rel_yy, IDABBDLocalFn Gres, IDABBDCommFn Gcomm);
	/**
	 * Original signature : <code>int IDABBDPrecReInit(void*, sunindextype, sunindextype, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas_bbdpre.h:26</i>
	 */
	int IDABBDPrecReInit(Pointer ida_mem, long mudq, long mldq, double dq_rel_yy);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int IDABBDPrecGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_bbdpre.h:31</i><br>
	 * @deprecated use the safer methods {@link #IDABBDPrecGetWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #IDABBDPrecGetWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int IDABBDPrecGetWorkSpace(Pointer ida_mem, LongByReference lenrwBBDP, LongByReference leniwBBDP);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int IDABBDPrecGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_bbdpre.h:31</i>
	 */
	int IDABBDPrecGetWorkSpace(Pointer ida_mem, LongBuffer lenrwBBDP, LongBuffer leniwBBDP);
	/**
	 * Original signature : <code>int IDABBDPrecGetNumGfnEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_bbdpre.h:34</i><br>
	 * @deprecated use the safer methods {@link #IDABBDPrecGetNumGfnEvals(Pointer, LongBuffer)} and {@link #IDABBDPrecGetNumGfnEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int IDABBDPrecGetNumGfnEvals(Pointer ida_mem, LongByReference ngevalsBBDP);
	/**
	 * Original signature : <code>int IDABBDPrecGetNumGfnEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\idas\idas_bbdpre.h:34</i>
	 */
	int IDABBDPrecGetNumGfnEvals(Pointer ida_mem, LongBuffer ngevalsBBDP);
	/**
	 * Exported Functions<br>
	 * Original signature : <code>int IDABBDPrecInitB(void*, int, sunindextype, sunindextype, sunindextype, sunindextype, sunindextype, sunrealtype, IDABBDLocalFnB, IDABBDCommFnB)</code><br>
	 * <i>native declaration : include\idas\idas_bbdpre.h:53</i>
	 */
	int IDABBDPrecInitB(Pointer ida_mem, int which, long NlocalB, long mudqB, long mldqB, long mukeepB, long mlkeepB, double dq_rel_yyB, IDABBDLocalFnB GresB, IDABBDCommFnB GcommB);
	/**
	 * Original signature : <code>int IDABBDPrecReInitB(void*, int, sunindextype, sunindextype, sunrealtype)</code><br>
	 * <i>native declaration : include\idas\idas_bbdpre.h:59</i>
	 */
	int IDABBDPrecReInitB(Pointer ida_mem, int which, long mudqB, long mldqB, double dq_rel_yyB);
	public static class SUNMatrix extends PointerType {
		public SUNMatrix(Pointer address) {
			super(address);
		}
		public SUNMatrix() {
			super();
		}
	};
	public static class SUNLinearSolver extends PointerType {
		public SUNLinearSolver(Pointer address) {
			super(address);
		}
		public SUNLinearSolver() {
			super();
		}
	};
	public static class SUNNonlinearSolver extends PointerType {
		public SUNNonlinearSolver(Pointer address) {
			super(address);
		}
		public SUNNonlinearSolver() {
			super();
		}
	};
	public static class SUNContext extends PointerType {
		public SUNContext(Pointer address) {
			super(address);
		}
		public SUNContext() {
			super();
		}
	};
	public static class FILE extends PointerType {
		public FILE(Pointer address) {
			super(address);
		}
		public FILE() {
			super();
		}
	};
	public static class N_Vector extends PointerType {
		public N_Vector(Pointer address) {
			super(address);
		}
		public N_Vector() {
			super();
		}
	};
	public static class N_Vector_S extends PointerType {
		public N_Vector_S(Pointer address) {
			super(address);
		}
		public N_Vector_S() {
			super();
		}
	};
}
