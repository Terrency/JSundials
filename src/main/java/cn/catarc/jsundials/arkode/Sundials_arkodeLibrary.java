package cn.catarc.jsundials.arkode;

import com.sun.jna.*;
import com.sun.jna.ptr.*;

import java.nio.DoubleBuffer;
import java.nio.IntBuffer;
import java.nio.LongBuffer;
/**
 * JNA Wrapper for library <b>sundials_arkode</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface Sundials_arkodeLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "sundials_arkode";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(Sundials_arkodeLibrary.JNA_LIBRARY_NAME);
	public static final Sundials_arkodeLibrary INSTANCE = (Sundials_arkodeLibrary)Native.loadLibrary(Sundials_arkodeLibrary.JNA_LIBRARY_NAME, Sundials_arkodeLibrary.class);
	/**
	 * <i>native declaration : include\arkode\arkode.h</i><br>
	 * enum values
	 */
	public static interface ARKRelaxSolver {
		/** <i>native declaration : include\arkode\arkode.h:185</i> */
		public static final int ARK_RELAX_BRENT = 0;
		/** <i>native declaration : include\arkode\arkode.h:186</i> */
		public static final int ARK_RELAX_NEWTON = 1;
	};
	/**
	 * <i>native declaration : include\arkode\arkode_butcher_dirk.h</i><br>
	 * enum values
	 */
	public static interface ARKODE_DIRKTableID {
		/**
		 * ensure enum is signed int<br>
		 * <i>native declaration : include\arkode\arkode_butcher_dirk.h:8</i>
		 */
		public static final int ARKODE_DIRK_NONE = -1;
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:9</i> */
		public static final int ARKODE_MIN_DIRK_NUM = 100;
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:10</i> */
		public static final int ARKODE_SDIRK_2_1_2 = (int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM;
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:11</i> */
		public static final int ARKODE_BILLINGTON_3_3_2 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 1);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:12</i> */
		public static final int ARKODE_TRBDF2_3_3_2 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 2);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:13</i> */
		public static final int ARKODE_KVAERNO_4_2_3 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 3);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:14</i> */
		public static final int ARKODE_ARK324L2SA_DIRK_4_2_3 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 4);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:15</i> */
		public static final int ARKODE_CASH_5_2_4 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 5);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:16</i> */
		public static final int ARKODE_CASH_5_3_4 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 6);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:17</i> */
		public static final int ARKODE_SDIRK_5_3_4 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 7);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:18</i> */
		public static final int ARKODE_KVAERNO_5_3_4 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 8);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:19</i> */
		public static final int ARKODE_ARK436L2SA_DIRK_6_3_4 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 9);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:20</i> */
		public static final int ARKODE_KVAERNO_7_4_5 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 10);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:21</i> */
		public static final int ARKODE_ARK548L2SA_DIRK_8_4_5 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 11);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:22</i> */
		public static final int ARKODE_ARK437L2SA_DIRK_7_3_4 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 12);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:23</i> */
		public static final int ARKODE_ARK548L2SAb_DIRK_8_4_5 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 13);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:24</i> */
		public static final int ARKODE_ESDIRK324L2SA_4_2_3 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 14);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:25</i> */
		public static final int ARKODE_ESDIRK325L2SA_5_2_3 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 15);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:26</i> */
		public static final int ARKODE_ESDIRK32I5L2SA_5_2_3 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 16);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:27</i> */
		public static final int ARKODE_ESDIRK436L2SA_6_3_4 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 17);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:28</i> */
		public static final int ARKODE_ESDIRK43I6L2SA_6_3_4 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 18);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:29</i> */
		public static final int ARKODE_QESDIRK436L2SA_6_3_4 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 19);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:30</i> */
		public static final int ARKODE_ESDIRK437L2SA_7_3_4 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 20);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:31</i> */
		public static final int ARKODE_ESDIRK547L2SA_7_4_5 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 21);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:32</i> */
		public static final int ARKODE_ESDIRK547L2SA2_7_4_5 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 22);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:33</i> */
		public static final int ARKODE_ARK2_DIRK_3_1_2 = ((int) ARKODE_DIRKTableID.ARKODE_MIN_DIRK_NUM + 23);
		/** <i>native declaration : include\arkode\arkode_butcher_dirk.h:34</i> */
		public static final int ARKODE_MAX_DIRK_NUM = (int) ARKODE_DIRKTableID.ARKODE_ARK2_DIRK_3_1_2;
	};
	/**
	 * <i>native declaration : include\arkode\arkode_butcher_erk.h</i><br>
	 * enum values
	 */
	public static interface ARKODE_ERKTableID {
		/**
		 * ensure enum is signed int<br>
		 * <i>native declaration : include\arkode\arkode_butcher_erk.h:8</i>
		 */
		public static final int ARKODE_ERK_NONE = -1;
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:9</i> */
		public static final int ARKODE_MIN_ERK_NUM = 0;
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:10</i> */
		public static final int ARKODE_HEUN_EULER_2_1_2 = (int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM;
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:11</i> */
		public static final int ARKODE_BOGACKI_SHAMPINE_4_2_3 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 1);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:12</i> */
		public static final int ARKODE_ARK324L2SA_ERK_4_2_3 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 2);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:13</i> */
		public static final int ARKODE_ZONNEVELD_5_3_4 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 3);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:14</i> */
		public static final int ARKODE_ARK436L2SA_ERK_6_3_4 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 4);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:15</i> */
		public static final int ARKODE_SAYFY_ABURUB_6_3_4 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 5);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:16</i> */
		public static final int ARKODE_CASH_KARP_6_4_5 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 6);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:17</i> */
		public static final int ARKODE_FEHLBERG_6_4_5 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 7);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:18</i> */
		public static final int ARKODE_DORMAND_PRINCE_7_4_5 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 8);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:19</i> */
		public static final int ARKODE_ARK548L2SA_ERK_8_4_5 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 9);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:20</i> */
		public static final int ARKODE_VERNER_8_5_6 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 10);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:21</i> */
		public static final int ARKODE_FEHLBERG_13_7_8 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 11);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:22</i> */
		public static final int ARKODE_KNOTH_WOLKE_3_3 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 12);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:23</i> */
		public static final int ARKODE_ARK437L2SA_ERK_7_3_4 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 13);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:24</i> */
		public static final int ARKODE_ARK548L2SAb_ERK_8_4_5 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 14);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:25</i> */
		public static final int ARKODE_ARK2_ERK_3_1_2 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 15);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:26</i> */
		public static final int ARKODE_SOFRONIOU_SPALETTA_5_3_4 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 16);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:27</i> */
		public static final int ARKODE_SHU_OSHER_3_2_3 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 17);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:28</i> */
		public static final int ARKODE_VERNER_9_5_6 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 18);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:29</i> */
		public static final int ARKODE_VERNER_10_6_7 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 19);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:30</i> */
		public static final int ARKODE_VERNER_13_7_8 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 20);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:31</i> */
		public static final int ARKODE_VERNER_16_8_9 = ((int) ARKODE_ERKTableID.ARKODE_MIN_ERK_NUM + 21);
		/** <i>native declaration : include\arkode\arkode_butcher_erk.h:32</i> */
		public static final int ARKODE_MAX_ERK_NUM = (int) ARKODE_ERKTableID.ARKODE_VERNER_16_8_9;
	};
	/**
	 * <i>native declaration : include\arkode\arkode_mristep.h</i><br>
	 * enum values
	 */
	public static interface MRISTEP_METHOD_TYPE {
		/** <i>native declaration : include\arkode\arkode_mristep.h:13</i> */
		public static final int MRISTEP_EXPLICIT = 0;
		/** <i>native declaration : include\arkode\arkode_mristep.h:14</i> */
		public static final int MRISTEP_IMPLICIT = 1;
		/** <i>native declaration : include\arkode\arkode_mristep.h:15</i> */
		public static final int MRISTEP_IMEX = 2;
	};
	/**
	 * <i>native declaration : include\arkode\arkode_mristep.h</i><br>
	 * enum values
	 */
	public static interface ARKODE_MRITableID {
		/**
		 * ensure enum is signed int<br>
		 * <i>native declaration : include\arkode\arkode_mristep.h:20</i>
		 */
		public static final int ARKODE_MRI_NONE = -1;
		/** <i>native declaration : include\arkode\arkode_mristep.h:21</i> */
		public static final int ARKODE_MIN_MRI_NUM = 200;
		/** <i>native declaration : include\arkode\arkode_mristep.h:22</i> */
		public static final int ARKODE_MIS_KW3 = (int) ARKODE_MRITableID.ARKODE_MIN_MRI_NUM;
		/** <i>native declaration : include\arkode\arkode_mristep.h:23</i> */
		public static final int ARKODE_MRI_GARK_ERK33a = ((int) ARKODE_MRITableID.ARKODE_MIN_MRI_NUM + 1);
		/** <i>native declaration : include\arkode\arkode_mristep.h:24</i> */
		public static final int ARKODE_MRI_GARK_ERK45a = ((int) ARKODE_MRITableID.ARKODE_MIN_MRI_NUM + 2);
		/** <i>native declaration : include\arkode\arkode_mristep.h:25</i> */
		public static final int ARKODE_MRI_GARK_IRK21a = ((int) ARKODE_MRITableID.ARKODE_MIN_MRI_NUM + 3);
		/** <i>native declaration : include\arkode\arkode_mristep.h:26</i> */
		public static final int ARKODE_MRI_GARK_ESDIRK34a = ((int) ARKODE_MRITableID.ARKODE_MIN_MRI_NUM + 4);
		/** <i>native declaration : include\arkode\arkode_mristep.h:27</i> */
		public static final int ARKODE_MRI_GARK_ESDIRK46a = ((int) ARKODE_MRITableID.ARKODE_MIN_MRI_NUM + 5);
		/** <i>native declaration : include\arkode\arkode_mristep.h:28</i> */
		public static final int ARKODE_IMEX_MRI_GARK3a = ((int) ARKODE_MRITableID.ARKODE_MIN_MRI_NUM + 6);
		/** <i>native declaration : include\arkode\arkode_mristep.h:29</i> */
		public static final int ARKODE_IMEX_MRI_GARK3b = ((int) ARKODE_MRITableID.ARKODE_MIN_MRI_NUM + 7);
		/** <i>native declaration : include\arkode\arkode_mristep.h:30</i> */
		public static final int ARKODE_IMEX_MRI_GARK4 = ((int) ARKODE_MRITableID.ARKODE_MIN_MRI_NUM + 8);
		/** <i>native declaration : include\arkode\arkode_mristep.h:31</i> */
		public static final int ARKODE_MAX_MRI_NUM = (int) ARKODE_MRITableID.ARKODE_IMEX_MRI_GARK4;
	};
	/**
	 * <i>native declaration : include\arkode\arkode_sprk.h</i><br>
	 * enum values
	 */
	public static interface ARKODE_SPRKMethodID {
		/**
		 * ensure enum is signed int<br>
		 * <i>native declaration : include\arkode\arkode_sprk.h:8</i>
		 */
		public static final int ARKODE_SPRK_NONE = -1;
		/** <i>native declaration : include\arkode\arkode_sprk.h:9</i> */
		public static final int ARKODE_MIN_SPRK_NUM = 0;
		/** <i>native declaration : include\arkode\arkode_sprk.h:10</i> */
		public static final int ARKODE_SPRK_EULER_1_1 = (int) ARKODE_SPRKMethodID.ARKODE_MIN_SPRK_NUM;
		/** <i>native declaration : include\arkode\arkode_sprk.h:11</i> */
		public static final int ARKODE_SPRK_LEAPFROG_2_2 = ((int) ARKODE_SPRKMethodID.ARKODE_MIN_SPRK_NUM + 1);
		/** <i>native declaration : include\arkode\arkode_sprk.h:12</i> */
		public static final int ARKODE_SPRK_PSEUDO_LEAPFROG_2_2 = ((int) ARKODE_SPRKMethodID.ARKODE_MIN_SPRK_NUM + 2);
		/** <i>native declaration : include\arkode\arkode_sprk.h:13</i> */
		public static final int ARKODE_SPRK_RUTH_3_3 = ((int) ARKODE_SPRKMethodID.ARKODE_MIN_SPRK_NUM + 3);
		/** <i>native declaration : include\arkode\arkode_sprk.h:14</i> */
		public static final int ARKODE_SPRK_MCLACHLAN_2_2 = ((int) ARKODE_SPRKMethodID.ARKODE_MIN_SPRK_NUM + 4);
		/** <i>native declaration : include\arkode\arkode_sprk.h:15</i> */
		public static final int ARKODE_SPRK_MCLACHLAN_3_3 = ((int) ARKODE_SPRKMethodID.ARKODE_MIN_SPRK_NUM + 5);
		/** <i>native declaration : include\arkode\arkode_sprk.h:16</i> */
		public static final int ARKODE_SPRK_CANDY_ROZMUS_4_4 = ((int) ARKODE_SPRKMethodID.ARKODE_MIN_SPRK_NUM + 6);
		/** <i>native declaration : include\arkode\arkode_sprk.h:17</i> */
		public static final int ARKODE_SPRK_MCLACHLAN_4_4 = ((int) ARKODE_SPRKMethodID.ARKODE_MIN_SPRK_NUM + 7);
		/** <i>native declaration : include\arkode\arkode_sprk.h:18</i> */
		public static final int ARKODE_SPRK_MCLACHLAN_5_6 = ((int) ARKODE_SPRKMethodID.ARKODE_MIN_SPRK_NUM + 8);
		/** <i>native declaration : include\arkode\arkode_sprk.h:19</i> */
		public static final int ARKODE_SPRK_YOSHIDA_6_8 = ((int) ARKODE_SPRKMethodID.ARKODE_MIN_SPRK_NUM + 9);
		/** <i>native declaration : include\arkode\arkode_sprk.h:20</i> */
		public static final int ARKODE_SPRK_SUZUKI_UMENO_8_16 = ((int) ARKODE_SPRKMethodID.ARKODE_MIN_SPRK_NUM + 10);
		/** <i>native declaration : include\arkode\arkode_sprk.h:21</i> */
		public static final int ARKODE_SPRK_SOFRONIOU_10_36 = ((int) ARKODE_SPRKMethodID.ARKODE_MIN_SPRK_NUM + 11);
		/** <i>native declaration : include\arkode\arkode_sprk.h:22</i> */
		public static final int ARKODE_MAX_SPRK_NUM = (int) ARKODE_SPRKMethodID.ARKODE_SPRK_SOFRONIOU_10_36;
	};
	/** explicit */
	public static final int ARKSTEP_DEFAULT_ERK_2 = (int) ARKODE_ERKTableID.ARKODE_HEUN_EULER_2_1_2;
	public static final int ARKSTEP_DEFAULT_ERK_3 = (int) ARKODE_ERKTableID.ARKODE_BOGACKI_SHAMPINE_4_2_3;
	public static final int ARKSTEP_DEFAULT_ERK_4 = (int) ARKODE_ERKTableID.ARKODE_ZONNEVELD_5_3_4;
	public static final int ARKSTEP_DEFAULT_ERK_5 = (int) ARKODE_ERKTableID.ARKODE_CASH_KARP_6_4_5;
	public static final int ARKSTEP_DEFAULT_ERK_6 = (int) ARKODE_ERKTableID.ARKODE_VERNER_8_5_6;
	public static final int ARKSTEP_DEFAULT_ERK_7 = (int) ARKODE_ERKTableID.ARKODE_VERNER_10_6_7;
	public static final int ARKSTEP_DEFAULT_ERK_8 = (int) ARKODE_ERKTableID.ARKODE_FEHLBERG_13_7_8;
	public static final int ARKSTEP_DEFAULT_ERK_9 = (int) ARKODE_ERKTableID.ARKODE_VERNER_16_8_9;
	/** implicit */
	public static final int ARKSTEP_DEFAULT_DIRK_2 = (int) ARKODE_DIRKTableID.ARKODE_SDIRK_2_1_2;
	public static final int ARKSTEP_DEFAULT_DIRK_3 = (int) ARKODE_DIRKTableID.ARKODE_ARK324L2SA_DIRK_4_2_3;
	public static final int ARKSTEP_DEFAULT_DIRK_4 = (int) ARKODE_DIRKTableID.ARKODE_SDIRK_5_3_4;
	public static final int ARKSTEP_DEFAULT_DIRK_5 = (int) ARKODE_DIRKTableID.ARKODE_ARK548L2SA_DIRK_8_4_5;
	/** ImEx */
	public static final int ARKSTEP_DEFAULT_ARK_ETABLE_2 = (int) ARKODE_ERKTableID.ARKODE_ARK2_ERK_3_1_2;
	public static final int ARKSTEP_DEFAULT_ARK_ETABLE_3 = (int) ARKODE_ERKTableID.ARKODE_ARK324L2SA_ERK_4_2_3;
	public static final int ARKSTEP_DEFAULT_ARK_ETABLE_4 = (int) ARKODE_ERKTableID.ARKODE_ARK436L2SA_ERK_6_3_4;
	public static final int ARKSTEP_DEFAULT_ARK_ETABLE_5 = (int) ARKODE_ERKTableID.ARKODE_ARK548L2SA_ERK_8_4_5;
	public static final int ARKSTEP_DEFAULT_ARK_ITABLE_2 = (int) ARKODE_DIRKTableID.ARKODE_ARK2_DIRK_3_1_2;
	public static final int ARKSTEP_DEFAULT_ARK_ITABLE_3 = (int) ARKODE_DIRKTableID.ARKODE_ARK324L2SA_DIRK_4_2_3;
	public static final int ARKSTEP_DEFAULT_ARK_ITABLE_4 = (int) ARKODE_DIRKTableID.ARKODE_ARK436L2SA_DIRK_6_3_4;
	public static final int ARKSTEP_DEFAULT_ARK_ITABLE_5 = (int) ARKODE_DIRKTableID.ARKODE_ARK548L2SA_DIRK_8_4_5;
	/** Default Butcher tables for each order */
	public static final int ERKSTEP_DEFAULT_2 = (int) ARKODE_ERKTableID.ARKODE_HEUN_EULER_2_1_2;
	public static final int ERKSTEP_DEFAULT_3 = (int) ARKODE_ERKTableID.ARKODE_BOGACKI_SHAMPINE_4_2_3;
	public static final int ERKSTEP_DEFAULT_4 = (int) ARKODE_ERKTableID.ARKODE_ZONNEVELD_5_3_4;
	public static final int ERKSTEP_DEFAULT_5 = (int) ARKODE_ERKTableID.ARKODE_CASH_KARP_6_4_5;
	public static final int ERKSTEP_DEFAULT_6 = (int) ARKODE_ERKTableID.ARKODE_VERNER_8_5_6;
	public static final int ERKSTEP_DEFAULT_7 = (int) ARKODE_ERKTableID.ARKODE_VERNER_10_6_7;
	public static final int ERKSTEP_DEFAULT_8 = (int) ARKODE_ERKTableID.ARKODE_FEHLBERG_13_7_8;
	public static final int ERKSTEP_DEFAULT_9 = (int) ARKODE_ERKTableID.ARKODE_VERNER_16_8_9;
	/** Default MRI coupling tables for each order */
	public static final int MRISTEP_DEFAULT_3 = (int) ARKODE_MRITableID.ARKODE_MIS_KW3;
	public static final int MRISTEP_DEFAULT_EXPL_3 = (int) ARKODE_MRITableID.ARKODE_MIS_KW3;
	public static final int MRISTEP_DEFAULT_EXPL_4 = (int) ARKODE_MRITableID.ARKODE_MRI_GARK_ERK45a;
	public static final int MRISTEP_DEFAULT_IMPL_SD_2 = (int) ARKODE_MRITableID.ARKODE_MRI_GARK_IRK21a;
	public static final int MRISTEP_DEFAULT_IMPL_SD_3 = (int) ARKODE_MRITableID.ARKODE_MRI_GARK_ESDIRK34a;
	public static final int MRISTEP_DEFAULT_IMPL_SD_4 = (int) ARKODE_MRITableID.ARKODE_MRI_GARK_ESDIRK46a;
	public static final int MRISTEP_DEFAULT_IMEX_SD_3 = (int) ARKODE_MRITableID.ARKODE_IMEX_MRI_GARK3b;
	public static final int MRISTEP_DEFAULT_IMEX_SD_4 = (int) ARKODE_MRITableID.ARKODE_IMEX_MRI_GARK4;
	/**
	 * -----------------<br>
	 * SPRKStep Constants<br>
	 * -----------------
	 */
	public static final int SPRKSTEP_DEFAULT_1 = (int) ARKODE_SPRKMethodID.ARKODE_SPRK_EULER_1_1;
	public static final int SPRKSTEP_DEFAULT_2 = (int) ARKODE_SPRKMethodID.ARKODE_SPRK_LEAPFROG_2_2;
	public static final int SPRKSTEP_DEFAULT_3 = (int) ARKODE_SPRKMethodID.ARKODE_SPRK_MCLACHLAN_3_3;
	public static final int SPRKSTEP_DEFAULT_4 = (int) ARKODE_SPRKMethodID.ARKODE_SPRK_MCLACHLAN_4_4;
	public static final int SPRKSTEP_DEFAULT_5 = (int) ARKODE_SPRKMethodID.ARKODE_SPRK_MCLACHLAN_5_6;
	public static final int SPRKSTEP_DEFAULT_6 = (int) ARKODE_SPRKMethodID.ARKODE_SPRK_YOSHIDA_6_8;
	public static final int SPRKSTEP_DEFAULT_8 = (int) ARKODE_SPRKMethodID.ARKODE_SPRK_SUZUKI_UMENO_8_16;
	public static final int SPRKSTEP_DEFAULT_10 = (int) ARKODE_SPRKMethodID.ARKODE_SPRK_SOFRONIOU_10_36;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_NORMAL = (int)1;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_ONE_STEP = (int)2;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_ADAPT_CUSTOM = (int)-1;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_ADAPT_PID = (int)0;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_ADAPT_PI = (int)1;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_ADAPT_I = (int)2;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_ADAPT_EXP_GUS = (int)3;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_ADAPT_IMP_GUS = (int)4;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_ADAPT_IMEX_GUS = (int)5;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_FULLRHS_START = (int)0;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_FULLRHS_END = (int)1;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_FULLRHS_OTHER = (int)2;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_INTERP_MAX_DEGREE = (int)5;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_INTERP_HERMITE = (int)0;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_INTERP_LAGRANGE = (int)1;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_SUCCESS = (int)0;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_TSTOP_RETURN = (int)1;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_ROOT_RETURN = (int)2;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_WARNING = (int)99;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_TOO_MUCH_WORK = (int)-1;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_TOO_MUCH_ACC = (int)-2;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_ERR_FAILURE = (int)-3;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_CONV_FAILURE = (int)-4;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_LINIT_FAIL = (int)-5;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_LSETUP_FAIL = (int)-6;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_LSOLVE_FAIL = (int)-7;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_RHSFUNC_FAIL = (int)-8;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_FIRST_RHSFUNC_ERR = (int)-9;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_REPTD_RHSFUNC_ERR = (int)-10;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_UNREC_RHSFUNC_ERR = (int)-11;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_RTFUNC_FAIL = (int)-12;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_LFREE_FAIL = (int)-13;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_MASSINIT_FAIL = (int)-14;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_MASSSETUP_FAIL = (int)-15;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_MASSSOLVE_FAIL = (int)-16;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_MASSFREE_FAIL = (int)-17;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_MASSMULT_FAIL = (int)-18;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_CONSTR_FAIL = (int)-19;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_MEM_FAIL = (int)-20;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_MEM_NULL = (int)-21;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_ILL_INPUT = (int)-22;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_NO_MALLOC = (int)-23;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_BAD_K = (int)-24;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_BAD_T = (int)-25;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_BAD_DKY = (int)-26;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_TOO_CLOSE = (int)-27;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_VECTOROP_ERR = (int)-28;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_NLS_INIT_FAIL = (int)-29;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_NLS_SETUP_FAIL = (int)-30;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_NLS_SETUP_RECVR = (int)-31;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_NLS_OP_ERR = (int)-32;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_INNERSTEP_ATTACH_ERR = (int)-33;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_INNERSTEP_FAIL = (int)-34;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_OUTERTOINNER_FAIL = (int)-35;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_INNERTOOUTER_FAIL = (int)-36;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_POSTPROCESS_FAIL = (int)-37;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_POSTPROCESS_STEP_FAIL = (int)-37;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_POSTPROCESS_STAGE_FAIL = (int)-38;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_USER_PREDICT_FAIL = (int)-39;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_INTERP_FAIL = (int)-40;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_INVALID_TABLE = (int)-41;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_CONTEXT_ERR = (int)-42;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_RELAX_FAIL = (int)-43;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_RELAX_MEM_NULL = (int)-44;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_RELAX_FUNC_FAIL = (int)-45;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_RELAX_JAC_FAIL = (int)-46;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_CONTROLLER_ERR = (int)-47;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public static final int ARK_UNRECOGNIZED_ERROR = (int)-99;
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public static final int ARKLS_SUCCESS = (int)0;
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public static final int ARKLS_MEM_NULL = (int)-1;
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public static final int ARKLS_LMEM_NULL = (int)-2;
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public static final int ARKLS_ILL_INPUT = (int)-3;
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public static final int ARKLS_MEM_FAIL = (int)-4;
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public static final int ARKLS_PMEM_NULL = (int)-5;
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public static final int ARKLS_MASSMEM_NULL = (int)-6;
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public static final int ARKLS_JACFUNC_UNRECVR = (int)-7;
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public static final int ARKLS_JACFUNC_RECVR = (int)-8;
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public static final int ARKLS_MASSFUNC_UNRECVR = (int)-9;
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public static final int ARKLS_MASSFUNC_RECVR = (int)-10;
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public static final int ARKLS_SUNMAT_FAIL = (int)-11;
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public static final int ARKLS_SUNLS_FAIL = (int)-12;
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public interface ARKRhsFn extends Callback {
		int apply(double t, Pointer y, Pointer ydot, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public interface ARKRootFn extends Callback {
		int apply(double t, Pointer y, DoubleByReference gout, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public interface ARKEwtFn extends Callback {
		int apply(Pointer y, Pointer ewt, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public interface ARKRwtFn extends Callback {
		int apply(Pointer y, Pointer rwt, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public interface ARKAdaptFn extends Callback {
		int apply(Pointer y, double t, double h1, double h2, double h3, double e1, double e2, double e3, int q, int p, DoubleByReference hnew, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public interface ARKExpStabFn extends Callback {
		int apply(Pointer y, double t, DoubleByReference hstab, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public interface ARKVecResizeFn extends Callback {
		int apply(Pointer y, Pointer ytemplate, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public interface ARKPostProcessFn extends Callback {
		int apply(double t, Pointer y, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public interface ARKStagePredictFn extends Callback {
		int apply(double t, Pointer zpred, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public interface ARKRelaxFn extends Callback {
		int apply(Pointer y, DoubleByReference r, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode.h</i> */
	public interface ARKRelaxJacFn extends Callback {
		int apply(Pointer y, Pointer J, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public interface ARKLsJacFn extends Callback {
		int apply(double t, Pointer y, Pointer fy, Pointer Jac, Pointer user_data, Pointer tmp1, Pointer tmp2, Pointer tmp3);
	};
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public interface ARKLsMassFn extends Callback {
		int apply(double t, Pointer M, Pointer user_data, Pointer tmp1, Pointer tmp2, Pointer tmp3);
	};
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public interface ARKLsPrecSetupFn extends Callback {
		int apply(double t, Pointer y, Pointer fy, int jok, IntByReference jcurPtr, double gamma, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public interface ARKLsPrecSolveFn extends Callback {
		int apply(double t, Pointer y, Pointer fy, Pointer r, Pointer z, double gamma, double delta, int lr, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public interface ARKLsJacTimesSetupFn extends Callback {
		int apply(double t, Pointer y, Pointer fy, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public interface ARKLsJacTimesVecFn extends Callback {
		int apply(Pointer v, Pointer Jv, double t, Pointer y, Pointer fy, Pointer user_data, Pointer tmp);
	};
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public interface ARKLsLinSysFn extends Callback {
		int apply(double t, Pointer y, Pointer fy, Pointer A, Pointer M, int jok, IntByReference jcur, double gamma, Pointer user_data, Pointer tmp1, Pointer tmp2, Pointer tmp3);
	};
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public interface ARKLsMassTimesSetupFn extends Callback {
		int apply(double t, Pointer mtimes_data);
	};
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public interface ARKLsMassTimesVecFn extends Callback {
		int apply(Pointer v, Pointer Mv, double t, Pointer mtimes_data);
	};
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public interface ARKLsMassPrecSetupFn extends Callback {
		int apply(double t, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode_ls.h</i> */
	public interface ARKLsMassPrecSolveFn extends Callback {
		int apply(double t, Pointer r, Pointer z, double delta, int lr, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode_bbdpre.h</i> */
	public interface ARKLocalFn extends Callback {
		int apply(long Nlocal, double t, Pointer y, Pointer g, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode_bbdpre.h</i> */
	public interface ARKCommFn extends Callback {
		int apply(long Nlocal, double t, Pointer y, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode_mristep.h</i> */
	public interface MRIStepInnerEvolveFn extends Callback {
		int apply(Pointer stepper, double t0, double tout, Pointer y);
	};
	/** <i>native declaration : include\arkode\arkode_mristep.h</i> */
	public interface MRIStepInnerFullRhsFn extends Callback {
		int apply(Pointer stepper, double t, Pointer y, Pointer f, int mode);
	};
	/** <i>native declaration : include\arkode\arkode_mristep.h</i> */
	public interface MRIStepInnerResetFn extends Callback {
		int apply(Pointer stepper, double tR, Pointer yR);
	};
	/** <i>native declaration : include\arkode\arkode_mristep.h</i> */
	public interface MRIStepPreInnerFn extends Callback {
		int apply(double t, Pointer f, int nvecs, Pointer user_data);
	};
	/** <i>native declaration : include\arkode\arkode_mristep.h</i> */
	public interface MRIStepPostInnerFn extends Callback {
		int apply(double t, Pointer y, Pointer user_data);
	};
	/**
	 * Utility routines to allocate/free/output Butcher table structures<br>
	 * Original signature : <code>ARKodeButcherTable ARKodeButcherTable_Alloc(int, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:43</i>
	 */
	ARKodeButcherTableMem ARKodeButcherTable_Alloc(int stages, int embedded);
	/**
	 * Original signature : <code>ARKodeButcherTable ARKodeButcherTable_Create(int, int, int, sunrealtype*, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:45</i><br>
	 * @deprecated use the safer methods {@link #ARKodeButcherTable_Create(int, int, int, DoubleBuffer, DoubleBuffer, DoubleBuffer, DoubleBuffer)} and {@link #ARKodeButcherTable_Create(int, int, int, DoubleByReference, DoubleByReference, DoubleByReference, DoubleByReference)} instead
	 */
	@Deprecated 
	ARKodeButcherTableMem ARKodeButcherTable_Create(int s, int q, int p, DoubleByReference c, DoubleByReference A, DoubleByReference b, DoubleByReference d);
	/**
	 * Original signature : <code>ARKodeButcherTable ARKodeButcherTable_Create(int, int, int, sunrealtype*, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:45</i>
	 */
	ARKodeButcherTableMem ARKodeButcherTable_Create(int s, int q, int p, DoubleBuffer c, DoubleBuffer A, DoubleBuffer b, DoubleBuffer d);
	/**
	 * Original signature : <code>ARKodeButcherTable ARKodeButcherTable_Copy(ARKodeButcherTable)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:50</i>
	 */
	ARKodeButcherTableMem ARKodeButcherTable_Copy(ARKodeButcherTableMem B);
	/**
	 * Original signature : <code>void ARKodeButcherTable_Space(ARKodeButcherTable, sunindextype*, sunindextype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:51</i><br>
	 * @deprecated use the safer methods {@link #ARKodeButcherTable_Space(ARKodeButcherTableMem, LongBuffer, LongBuffer)} and {@link #ARKodeButcherTable_Space(ARKodeButcherTableMem, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	void ARKodeButcherTable_Space(ARKodeButcherTableMem B, LongByReference liw, LongByReference lrw);
	/**
	 * Original signature : <code>void ARKodeButcherTable_Space(ARKodeButcherTable, sunindextype*, sunindextype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:51</i>
	 */
	void ARKodeButcherTable_Space(ARKodeButcherTableMem B, LongBuffer liw, LongBuffer lrw);
	/**
	 * Original signature : <code>void ARKodeButcherTable_Free(ARKodeButcherTable)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:54</i>
	 */
	void ARKodeButcherTable_Free(ARKodeButcherTableMem B);
	/**
	 * Original signature : <code>void ARKodeButcherTable_Write(ARKodeButcherTable, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:55</i><br>
	 * @deprecated use the safer method {@link #ARKodeButcherTable_Write(ARKodeButcherTableMem, PointerByReference)} instead
	 */
	@Deprecated 
	void ARKodeButcherTable_Write(ARKodeButcherTableMem B, Pointer outfile);
	/**
	 * Original signature : <code>void ARKodeButcherTable_Write(ARKodeButcherTable, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:55</i>
	 */
	void ARKodeButcherTable_Write(ARKodeButcherTableMem B, PointerByReference outfile);
	/**
	 * Original signature : <code>int ARKodeButcherTable_IsStifflyAccurate(ARKodeButcherTable)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:57</i>
	 */
	int ARKodeButcherTable_IsStifflyAccurate(ARKodeButcherTableMem B);
	/**
	 * Original signature : <code>int ARKodeButcherTable_CheckOrder(ARKodeButcherTable, int*, int*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:59</i><br>
	 * @deprecated use the safer methods {@link #ARKodeButcherTable_CheckOrder(ARKodeButcherTableMem, IntBuffer, IntBuffer, PointerByReference)} and {@link #ARKodeButcherTable_CheckOrder(ARKodeButcherTableMem, IntByReference, IntByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int ARKodeButcherTable_CheckOrder(ARKodeButcherTableMem B, IntByReference q, IntByReference p, Pointer outfile);
	/**
	 * Original signature : <code>int ARKodeButcherTable_CheckOrder(ARKodeButcherTable, int*, int*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:59</i>
	 */
	int ARKodeButcherTable_CheckOrder(ARKodeButcherTableMem B, IntBuffer q, IntBuffer p, PointerByReference outfile);
	/**
	 * Original signature : <code>int ARKodeButcherTable_CheckOrder(ARKodeButcherTable, int*, int*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:59</i>
	 */
	int ARKodeButcherTable_CheckOrder(ARKodeButcherTableMem B, IntByReference q, IntByReference p, PointerByReference outfile);
	/**
	 * Original signature : <code>int ARKodeButcherTable_CheckARKOrder(ARKodeButcherTable, ARKodeButcherTable, int*, int*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:61</i><br>
	 * @deprecated use the safer methods {@link #ARKodeButcherTable_CheckARKOrder(ARKodeButcherTableMem, ARKodeButcherTableMem, IntBuffer, IntBuffer, PointerByReference)} and {@link #ARKodeButcherTable_CheckARKOrder(ARKodeButcherTableMem, ARKodeButcherTableMem, IntByReference, IntByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int ARKodeButcherTable_CheckARKOrder(ARKodeButcherTableMem B1, ARKodeButcherTableMem B2, IntByReference q, IntByReference p, Pointer outfile);
	/**
	 * Original signature : <code>int ARKodeButcherTable_CheckARKOrder(ARKodeButcherTable, ARKodeButcherTable, int*, int*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:61</i>
	 */
	int ARKodeButcherTable_CheckARKOrder(ARKodeButcherTableMem B1, ARKodeButcherTableMem B2, IntBuffer q, IntBuffer p, PointerByReference outfile);
	/**
	 * Original signature : <code>int ARKodeButcherTable_CheckARKOrder(ARKodeButcherTable, ARKodeButcherTable, int*, int*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher.h:61</i>
	 */
	int ARKodeButcherTable_CheckARKOrder(ARKodeButcherTableMem B1, ARKodeButcherTableMem B2, IntByReference q, IntByReference p, PointerByReference outfile);
	/**
	 * Accessor routine to load built-in DIRK table<br>
	 * Original signature : <code>ARKodeButcherTable ARKodeButcherTable_LoadDIRK(ARKODE_DIRKTableID)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher_dirk.h:38</i>
	 */
	ARKodeButcherTableMem ARKodeButcherTable_LoadDIRK(int imethod);
	/**
	 * Accessor routine to load built-in DIRK table<br>
	 * Original signature : <code>ARKodeButcherTable ARKodeButcherTable_LoadDIRKByName(const char*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher_dirk.h:42</i><br>
	 * @deprecated use the safer methods {@link #ARKodeButcherTable_LoadDIRKByName(String)} and {@link #ARKodeButcherTable_LoadDIRKByName(Pointer)} instead
	 */
	@Deprecated 
	ARKodeButcherTableMem ARKodeButcherTable_LoadDIRKByName(Pointer imethod);
	/**
	 * Accessor routine to load built-in DIRK table<br>
	 * Original signature : <code>ARKodeButcherTable ARKodeButcherTable_LoadDIRKByName(const char*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher_dirk.h:42</i>
	 */
	ARKodeButcherTableMem ARKodeButcherTable_LoadDIRKByName(String imethod);
	/**
	 * Accessor routine to load built-in ERK table<br>
	 * Original signature : <code>ARKodeButcherTable ARKodeButcherTable_LoadERK(ARKODE_ERKTableID)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher_erk.h:36</i>
	 */
	ARKodeButcherTableMem ARKodeButcherTable_LoadERK(int emethod);
	/**
	 * Original signature : <code>ARKodeButcherTable ARKodeButcherTable_LoadERKByName(const char*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher_erk.h:39</i><br>
	 * @deprecated use the safer methods {@link #ARKodeButcherTable_LoadERKByName(String)} and {@link #ARKodeButcherTable_LoadERKByName(Pointer)} instead
	 */
	@Deprecated 
	ARKodeButcherTableMem ARKodeButcherTable_LoadERKByName(Pointer emethod);
	/**
	 * Original signature : <code>ARKodeButcherTable ARKodeButcherTable_LoadERKByName(const char*)</code><br>
	 * <i>native declaration : include\arkode\arkode_butcher_erk.h:39</i>
	 */
	ARKodeButcherTableMem ARKodeButcherTable_LoadERKByName(String emethod);
	/**
	 * Create, Resize, and Reinitialization functions<br>
	 * Original signature : <code>void* ARKStepCreate(ARKRhsFn, ARKRhsFn, sunrealtype, N_Vector, SUNContext)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:67</i><br>
	 * @deprecated use the safer methods {@link #ARKStepCreate(ARKRhsFn, ARKRhsFn, double, N_Vector, SUNContext)} and {@link #ARKStepCreate(ARKRhsFn, ARKRhsFn, double, Pointer, Pointer)} instead
	 */
	@Deprecated 
	Pointer ARKStepCreate(ARKRhsFn fe, ARKRhsFn fi, double t0, Pointer y0, Pointer sunctx);
	/**
	 * Create, Resize, and Reinitialization functions<br>
	 * Original signature : <code>void* ARKStepCreate(ARKRhsFn, ARKRhsFn, sunrealtype, N_Vector, SUNContext)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:67</i>
	 */
	Pointer ARKStepCreate(ARKRhsFn fe, ARKRhsFn fi, double t0, N_Vector y0, SUNContext sunctx);
	/**
	 * Original signature : <code>int ARKStepResize(void*, N_Vector, sunrealtype, sunrealtype, ARKVecResizeFn, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:70</i><br>
	 * @deprecated use the safer methods {@link #ARKStepResize(Pointer, N_Vector, double, double, ARKVecResizeFn, Pointer)} and {@link #ARKStepResize(Pointer, Pointer, double, double, ARKVecResizeFn, Pointer)} instead
	 */
	@Deprecated 
	int ARKStepResize(Pointer arkode_mem, Pointer ynew, double hscale, double t0, ARKVecResizeFn resize, Pointer resize_data);
	/**
	 * Original signature : <code>int ARKStepResize(void*, N_Vector, sunrealtype, sunrealtype, ARKVecResizeFn, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:70</i>
	 */
	int ARKStepResize(Pointer arkode_mem, N_Vector ynew, double hscale, double t0, ARKVecResizeFn resize, Pointer resize_data);
	/**
	 * Original signature : <code>int ARKStepReInit(void*, ARKRhsFn, ARKRhsFn, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:74</i><br>
	 * @deprecated use the safer methods {@link #ARKStepReInit(Pointer, ARKRhsFn, ARKRhsFn, double, N_Vector)} and {@link #ARKStepReInit(Pointer, ARKRhsFn, ARKRhsFn, double, Pointer)} instead
	 */
	@Deprecated 
	int ARKStepReInit(Pointer arkode_mem, ARKRhsFn fe, ARKRhsFn fi, double t0, Pointer y0);
	/**
	 * Original signature : <code>int ARKStepReInit(void*, ARKRhsFn, ARKRhsFn, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:74</i>
	 */
	int ARKStepReInit(Pointer arkode_mem, ARKRhsFn fe, ARKRhsFn fi, double t0, N_Vector y0);
	/**
	 * Original signature : <code>int ARKStepReset(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:77</i><br>
	 * @deprecated use the safer methods {@link #ARKStepReset(Pointer, double, N_Vector)} and {@link #ARKStepReset(Pointer, double, Pointer)} instead
	 */
	@Deprecated 
	int ARKStepReset(Pointer arkode_mem, double tR, Pointer yR);
	/**
	 * Original signature : <code>int ARKStepReset(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:77</i>
	 */
	int ARKStepReset(Pointer arkode_mem, double tR, N_Vector yR);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int ARKStepSStolerances(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:80</i>
	 */
	int ARKStepSStolerances(Pointer arkode_mem, double reltol, double abstol);
	/**
	 * Original signature : <code>int ARKStepSVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:82</i><br>
	 * @deprecated use the safer methods {@link #ARKStepSVtolerances(Pointer, double, N_Vector)} and {@link #ARKStepSVtolerances(Pointer, double, Pointer)} instead
	 */
	@Deprecated 
	int ARKStepSVtolerances(Pointer arkode_mem, double reltol, Pointer abstol);
	/**
	 * Original signature : <code>int ARKStepSVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:82</i>
	 */
	int ARKStepSVtolerances(Pointer arkode_mem, double reltol, N_Vector abstol);
	/**
	 * Original signature : <code>int ARKStepWFtolerances(void*, ARKEwtFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:84</i>
	 */
	int ARKStepWFtolerances(Pointer arkode_mem, ARKEwtFn efun);
	/**
	 * Residual tolerance input functions<br>
	 * Original signature : <code>int ARKStepResStolerance(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:87</i>
	 */
	int ARKStepResStolerance(Pointer arkode_mem, double rabstol);
	/**
	 * Original signature : <code>int ARKStepResVtolerance(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:88</i><br>
	 * @deprecated use the safer methods {@link #ARKStepResVtolerance(Pointer, N_Vector)} and {@link #ARKStepResVtolerance(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int ARKStepResVtolerance(Pointer arkode_mem, Pointer rabstol);
	/**
	 * Original signature : <code>int ARKStepResVtolerance(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:88</i>
	 */
	int ARKStepResVtolerance(Pointer arkode_mem, N_Vector rabstol);
	/**
	 * Original signature : <code>int ARKStepResFtolerance(void*, ARKRwtFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:89</i>
	 */
	int ARKStepResFtolerance(Pointer arkode_mem, ARKRwtFn rfun);
	/**
	 * Linear solver set functions<br>
	 * Original signature : <code>int ARKStepSetLinearSolver(void*, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:92</i><br>
	 * @deprecated use the safer methods {@link #ARKStepSetLinearSolver(Pointer, SUNLinearSolver, SUNMatrix)} and {@link #ARKStepSetLinearSolver(Pointer, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int ARKStepSetLinearSolver(Pointer arkode_mem, Pointer LS, Pointer A);
	/**
	 * Linear solver set functions<br>
	 * Original signature : <code>int ARKStepSetLinearSolver(void*, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:92</i>
	 */
	int ARKStepSetLinearSolver(Pointer arkode_mem, SUNLinearSolver LS, SUNMatrix A);
	/**
	 * Original signature : <code>int ARKStepSetMassLinearSolver(void*, SUNLinearSolver, SUNMatrix, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:94</i><br>
	 * @deprecated use the safer methods {@link #ARKStepSetMassLinearSolver(Pointer, SUNLinearSolver, SUNMatrix, int)} and {@link #ARKStepSetMassLinearSolver(Pointer, Pointer, Pointer, int)} instead
	 */
	@Deprecated 
	int ARKStepSetMassLinearSolver(Pointer arkode_mem, Pointer LS, Pointer M, int time_dep);
	/**
	 * Original signature : <code>int ARKStepSetMassLinearSolver(void*, SUNLinearSolver, SUNMatrix, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:94</i>
	 */
	int ARKStepSetMassLinearSolver(Pointer arkode_mem, SUNLinearSolver LS, SUNMatrix M, int time_dep);
	/**
	 * Rootfinding initialization<br>
	 * Original signature : <code>int ARKStepRootInit(void*, int, ARKRootFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:99</i>
	 */
	int ARKStepRootInit(Pointer arkode_mem, int nrtfn, ARKRootFn g);
	/**
	 * Optional input functions -- must be called AFTER ARKStepCreate<br>
	 * Original signature : <code>int ARKStepSetDefaults(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:102</i>
	 */
	int ARKStepSetDefaults(Pointer arkode_mem);
	/**
	 * Original signature : <code>int ARKStepSetOptimalParams(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:103</i>
	 */
	int ARKStepSetOptimalParams(Pointer arkode_mem);
	/**
	 * Original signature : <code>int ARKStepSetOrder(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:104</i>
	 */
	int ARKStepSetOrder(Pointer arkode_mem, int maxord);
	/**
	 * Original signature : <code>int ARKStepSetInterpolantType(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:105</i>
	 */
	int ARKStepSetInterpolantType(Pointer arkode_mem, int itype);
	/**
	 * Original signature : <code>int ARKStepSetInterpolantDegree(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:106</i>
	 */
	int ARKStepSetInterpolantDegree(Pointer arkode_mem, int degree);
	/**
	 * Original signature : <code>int ARKStepSetDenseOrder(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:107</i>
	 */
	int ARKStepSetDenseOrder(Pointer arkode_mem, int dord);
	/**
	 * Original signature : <code>int ARKStepSetNonlinearSolver(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:108</i><br>
	 * @deprecated use the safer methods {@link #ARKStepSetNonlinearSolver(Pointer, SUNNonlinearSolver)} and {@link #ARKStepSetNonlinearSolver(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int ARKStepSetNonlinearSolver(Pointer arkode_mem, Pointer NLS);
	/**
	 * Original signature : <code>int ARKStepSetNonlinearSolver(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:108</i>
	 */
	int ARKStepSetNonlinearSolver(Pointer arkode_mem, SUNNonlinearSolver NLS);
	/**
	 * Original signature : <code>int ARKStepSetNlsRhsFn(void*, ARKRhsFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:110</i>
	 */
	int ARKStepSetNlsRhsFn(Pointer arkode_mem, ARKRhsFn nls_fi);
	/**
	 * Original signature : <code>int ARKStepSetLinear(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:111</i>
	 */
	int ARKStepSetLinear(Pointer arkode_mem, int timedepend);
	/**
	 * Original signature : <code>int ARKStepSetNonlinear(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:112</i>
	 */
	int ARKStepSetNonlinear(Pointer arkode_mem);
	/**
	 * Original signature : <code>int ARKStepSetExplicit(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:113</i>
	 */
	int ARKStepSetExplicit(Pointer arkode_mem);
	/**
	 * Original signature : <code>int ARKStepSetImplicit(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:114</i>
	 */
	int ARKStepSetImplicit(Pointer arkode_mem);
	/**
	 * Original signature : <code>int ARKStepSetImEx(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:115</i>
	 */
	int ARKStepSetImEx(Pointer arkode_mem);
	/**
	 * Original signature : <code>int ARKStepSetDeduceImplicitRhs(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:116</i>
	 */
	int ARKStepSetDeduceImplicitRhs(Pointer arkode_mem, int deduce);
	/**
	 * Original signature : <code>int ARKStepSetTables(void*, int, int, ARKodeButcherTable, ARKodeButcherTable)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:118</i>
	 */
	int ARKStepSetTables(Pointer arkode_mem, int q, int p, ARKodeButcherTableMem Bi, ARKodeButcherTableMem Be);
	/**
	 * Original signature : <code>int ARKStepSetTableNum(void*, ARKODE_DIRKTableID, ARKODE_ERKTableID)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:121</i>
	 */
	int ARKStepSetTableNum(Pointer arkode_mem, int itable, int etable);
	/**
	 * Original signature : <code>int ARKStepSetTableName(void*, const char*, const char*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:124</i><br>
	 * @deprecated use the safer methods {@link #ARKStepSetTableName(Pointer, String, String)} and {@link #ARKStepSetTableName(Pointer, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int ARKStepSetTableName(Pointer arkode_mem, Pointer itable, Pointer etable);
	/**
	 * Original signature : <code>int ARKStepSetTableName(void*, const char*, const char*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:124</i>
	 */
	int ARKStepSetTableName(Pointer arkode_mem, String itable, String etable);
	/**
	 * Original signature : <code>int ARKStepSetAdaptController(void*, SUNAdaptController)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:126</i><br>
	 * @deprecated use the safer methods {@link #ARKStepSetAdaptController(Pointer, SUNAdaptController)} and {@link #ARKStepSetAdaptController(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int ARKStepSetAdaptController(Pointer arkode_mem, Pointer C);
	/**
	 * Original signature : <code>int ARKStepSetAdaptController(void*, SUNAdaptController)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:126</i>
	 */
	int ARKStepSetAdaptController(Pointer arkode_mem, SUNAdaptController C);
	/**
	 * Original signature : <code>int ARKStepSetAdaptivityAdjustment(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:128</i>
	 */
	int ARKStepSetAdaptivityAdjustment(Pointer arkode_mem, int adjust);
	/**
	 * Original signature : <code>int ARKStepSetCFLFraction(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:129</i>
	 */
	int ARKStepSetCFLFraction(Pointer arkode_mem, double cfl_frac);
	/**
	 * Original signature : <code>int ARKStepSetSafetyFactor(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:130</i>
	 */
	int ARKStepSetSafetyFactor(Pointer arkode_mem, double safety);
	/**
	 * Original signature : <code>int ARKStepSetErrorBias(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:131</i>
	 */
	int ARKStepSetErrorBias(Pointer arkode_mem, double bias);
	/**
	 * Original signature : <code>int ARKStepSetMaxGrowth(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:133</i>
	 */
	int ARKStepSetMaxGrowth(Pointer arkode_mem, double mx_growth);
	/**
	 * Original signature : <code>int ARKStepSetMinReduction(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:134</i>
	 */
	int ARKStepSetMinReduction(Pointer arkode_mem, double eta_min);
	/**
	 * Original signature : <code>int ARKStepSetFixedStepBounds(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:135</i>
	 */
	int ARKStepSetFixedStepBounds(Pointer arkode_mem, double lb, double ub);
	/**
	 * Original signature : <code>int ARKStepSetAdaptivityMethod(void*, int, int, int, sunrealtype[3])</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:137</i><br>
	 * @deprecated use the safer methods {@link #ARKStepSetAdaptivityMethod(Pointer, int, int, int, DoubleBuffer)} and {@link #ARKStepSetAdaptivityMethod(Pointer, int, int, int, DoubleByReference)} instead
	 */
	@Deprecated 
	int ARKStepSetAdaptivityMethod(Pointer arkode_mem, int imethod, int idefault, int pq, DoubleByReference adapt_params);
	/**
	 * Original signature : <code>int ARKStepSetAdaptivityMethod(void*, int, int, int, sunrealtype[3])</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:137</i>
	 */
	int ARKStepSetAdaptivityMethod(Pointer arkode_mem, int imethod, int idefault, int pq, DoubleBuffer adapt_params);
	/**
	 * Original signature : <code>int ARKStepSetAdaptivityFn(void*, ARKAdaptFn, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:140</i>
	 */
	int ARKStepSetAdaptivityFn(Pointer arkode_mem, ARKAdaptFn hfun, Pointer h_data);
	/**
	 * Original signature : <code>int ARKStepSetMaxFirstGrowth(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:142</i>
	 */
	int ARKStepSetMaxFirstGrowth(Pointer arkode_mem, double etamx1);
	/**
	 * Original signature : <code>int ARKStepSetMaxEFailGrowth(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:144</i>
	 */
	int ARKStepSetMaxEFailGrowth(Pointer arkode_mem, double etamxf);
	/**
	 * Original signature : <code>int ARKStepSetSmallNumEFails(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:146</i>
	 */
	int ARKStepSetSmallNumEFails(Pointer arkode_mem, int small_nef);
	/**
	 * Original signature : <code>int ARKStepSetMaxCFailGrowth(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:147</i>
	 */
	int ARKStepSetMaxCFailGrowth(Pointer arkode_mem, double etacf);
	/**
	 * Original signature : <code>int ARKStepSetNonlinCRDown(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:148</i>
	 */
	int ARKStepSetNonlinCRDown(Pointer arkode_mem, double crdown);
	/**
	 * Original signature : <code>int ARKStepSetNonlinRDiv(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:149</i>
	 */
	int ARKStepSetNonlinRDiv(Pointer arkode_mem, double rdiv);
	/**
	 * Original signature : <code>int ARKStepSetDeltaGammaMax(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:150</i>
	 */
	int ARKStepSetDeltaGammaMax(Pointer arkode_mem, double dgmax);
	/**
	 * Original signature : <code>int ARKStepSetLSetupFrequency(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:151</i>
	 */
	int ARKStepSetLSetupFrequency(Pointer arkode_mem, int msbp);
	/**
	 * Original signature : <code>int ARKStepSetPredictorMethod(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:152</i>
	 */
	int ARKStepSetPredictorMethod(Pointer arkode_mem, int method);
	/**
	 * Original signature : <code>int ARKStepSetStabilityFn(void*, ARKExpStabFn, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:153</i>
	 */
	int ARKStepSetStabilityFn(Pointer arkode_mem, ARKExpStabFn EStab, Pointer estab_data);
	/**
	 * Original signature : <code>int ARKStepSetMaxErrTestFails(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:155</i>
	 */
	int ARKStepSetMaxErrTestFails(Pointer arkode_mem, int maxnef);
	/**
	 * Original signature : <code>int ARKStepSetMaxNonlinIters(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:156</i>
	 */
	int ARKStepSetMaxNonlinIters(Pointer arkode_mem, int maxcor);
	/**
	 * Original signature : <code>int ARKStepSetMaxConvFails(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:157</i>
	 */
	int ARKStepSetMaxConvFails(Pointer arkode_mem, int maxncf);
	/**
	 * Original signature : <code>int ARKStepSetNonlinConvCoef(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:158</i>
	 */
	int ARKStepSetNonlinConvCoef(Pointer arkode_mem, double nlscoef);
	/**
	 * Original signature : <code>int ARKStepSetConstraints(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:160</i><br>
	 * @deprecated use the safer methods {@link #ARKStepSetConstraints(Pointer, N_Vector)} and {@link #ARKStepSetConstraints(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int ARKStepSetConstraints(Pointer arkode_mem, Pointer constraints);
	/**
	 * Original signature : <code>int ARKStepSetConstraints(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:160</i>
	 */
	int ARKStepSetConstraints(Pointer arkode_mem, N_Vector constraints);
	/**
	 * Original signature : <code>int ARKStepSetMaxNumSteps(void*, long long)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:161</i>
	 */
	int ARKStepSetMaxNumSteps(Pointer arkode_mem, long mxsteps);
	/**
	 * Original signature : <code>int ARKStepSetMaxHnilWarns(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:162</i>
	 */
	int ARKStepSetMaxHnilWarns(Pointer arkode_mem, int mxhnil);
	/**
	 * Original signature : <code>int ARKStepSetInitStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:163</i>
	 */
	int ARKStepSetInitStep(Pointer arkode_mem, double hin);
	/**
	 * Original signature : <code>int ARKStepSetMinStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:164</i>
	 */
	int ARKStepSetMinStep(Pointer arkode_mem, double hmin);
	/**
	 * Original signature : <code>int ARKStepSetMaxStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:165</i>
	 */
	int ARKStepSetMaxStep(Pointer arkode_mem, double hmax);
	/**
	 * Original signature : <code>int ARKStepSetInterpolateStopTime(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:166</i>
	 */
	int ARKStepSetInterpolateStopTime(Pointer arkode_mem, int interp);
	/**
	 * Original signature : <code>int ARKStepSetStopTime(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:168</i>
	 */
	int ARKStepSetStopTime(Pointer arkode_mem, double tstop);
	/**
	 * Original signature : <code>int ARKStepClearStopTime(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:169</i>
	 */
	int ARKStepClearStopTime(Pointer arkode_mem);
	/**
	 * Original signature : <code>int ARKStepSetFixedStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:170</i>
	 */
	int ARKStepSetFixedStep(Pointer arkode_mem, double hfixed);
	/**
	 * Original signature : <code>int ARKStepSetMaxNumConstrFails(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:171</i>
	 */
	int ARKStepSetMaxNumConstrFails(Pointer arkode_mem, int maxfails);
	/**
	 * Original signature : <code>int ARKStepSetRootDirection(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:173</i><br>
	 * @deprecated use the safer methods {@link #ARKStepSetRootDirection(Pointer, IntBuffer)} and {@link #ARKStepSetRootDirection(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int ARKStepSetRootDirection(Pointer arkode_mem, IntByReference rootdir);
	/**
	 * Original signature : <code>int ARKStepSetRootDirection(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:173</i>
	 */
	int ARKStepSetRootDirection(Pointer arkode_mem, IntBuffer rootdir);
	/**
	 * Original signature : <code>int ARKStepSetNoInactiveRootWarn(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:174</i>
	 */
	int ARKStepSetNoInactiveRootWarn(Pointer arkode_mem);
	/**
	 * Original signature : <code>int ARKStepSetUserData(void*, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:176</i>
	 */
	int ARKStepSetUserData(Pointer arkode_mem, Pointer user_data);
	/**
	 * Original signature : <code>int ARKStepSetPostprocessStepFn(void*, ARKPostProcessFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:178</i>
	 */
	int ARKStepSetPostprocessStepFn(Pointer arkode_mem, ARKPostProcessFn ProcessStep);
	/**
	 * Original signature : <code>int ARKStepSetPostprocessStageFn(void*, ARKPostProcessFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:180</i>
	 */
	int ARKStepSetPostprocessStageFn(Pointer arkode_mem, ARKPostProcessFn ProcessStage);
	/**
	 * Original signature : <code>int ARKStepSetStagePredictFn(void*, ARKStagePredictFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:182</i>
	 */
	int ARKStepSetStagePredictFn(Pointer arkode_mem, ARKStagePredictFn PredictStage);
	/**
	 * Linear solver interface optional input functions -- must be called<br>
	 * AFTER ARKStepSetLinearSolver and/or ARKStepSetMassLinearSolver<br>
	 * Original signature : <code>int ARKStepSetJacFn(void*, ARKLsJacFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:187</i>
	 */
	int ARKStepSetJacFn(Pointer arkode_mem, ARKLsJacFn jac);
	/**
	 * Original signature : <code>int ARKStepSetMassFn(void*, ARKLsMassFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:188</i>
	 */
	int ARKStepSetMassFn(Pointer arkode_mem, ARKLsMassFn mass);
	/**
	 * Original signature : <code>int ARKStepSetJacEvalFrequency(void*, long long)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:189</i>
	 */
	int ARKStepSetJacEvalFrequency(Pointer arkode_mem, long msbj);
	/**
	 * Original signature : <code>int ARKStepSetLinearSolutionScaling(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:190</i>
	 */
	int ARKStepSetLinearSolutionScaling(Pointer arkode_mem, int onoff);
	/**
	 * Original signature : <code>int ARKStepSetEpsLin(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:192</i>
	 */
	int ARKStepSetEpsLin(Pointer arkode_mem, double eplifac);
	/**
	 * Original signature : <code>int ARKStepSetMassEpsLin(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:193</i>
	 */
	int ARKStepSetMassEpsLin(Pointer arkode_mem, double eplifac);
	/**
	 * Original signature : <code>int ARKStepSetLSNormFactor(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:194</i>
	 */
	int ARKStepSetLSNormFactor(Pointer arkode_mem, double nrmfac);
	/**
	 * Original signature : <code>int ARKStepSetMassLSNormFactor(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:195</i>
	 */
	int ARKStepSetMassLSNormFactor(Pointer arkode_mem, double nrmfac);
	/**
	 * Original signature : <code>int ARKStepSetPreconditioner(void*, ARKLsPrecSetupFn, ARKLsPrecSolveFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:197</i>
	 */
	int ARKStepSetPreconditioner(Pointer arkode_mem, ARKLsPrecSetupFn psetup, ARKLsPrecSolveFn psolve);
	/**
	 * Original signature : <code>int ARKStepSetMassPreconditioner(void*, ARKLsMassPrecSetupFn, ARKLsMassPrecSolveFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:200</i>
	 */
	int ARKStepSetMassPreconditioner(Pointer arkode_mem, ARKLsMassPrecSetupFn psetup, ARKLsMassPrecSolveFn psolve);
	/**
	 * Original signature : <code>int ARKStepSetJacTimes(void*, ARKLsJacTimesSetupFn, ARKLsJacTimesVecFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:203</i>
	 */
	int ARKStepSetJacTimes(Pointer arkode_mem, ARKLsJacTimesSetupFn jtsetup, ARKLsJacTimesVecFn jtimes);
	/**
	 * Original signature : <code>int ARKStepSetJacTimesRhsFn(void*, ARKRhsFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:206</i>
	 */
	int ARKStepSetJacTimesRhsFn(Pointer arkode_mem, ARKRhsFn jtimesRhsFn);
	/**
	 * Original signature : <code>int ARKStepSetMassTimes(void*, ARKLsMassTimesSetupFn, ARKLsMassTimesVecFn, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:208</i>
	 */
	int ARKStepSetMassTimes(Pointer arkode_mem, ARKLsMassTimesSetupFn msetup, ARKLsMassTimesVecFn mtimes, Pointer mtimes_data);
	/**
	 * Original signature : <code>int ARKStepSetLinSysFn(void*, ARKLsLinSysFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:212</i>
	 */
	int ARKStepSetLinSysFn(Pointer arkode_mem, ARKLsLinSysFn linsys);
	/**
	 * Integrate the ODE over an interval in t<br>
	 * Original signature : <code>int ARKStepEvolve(void*, sunrealtype, N_Vector, sunrealtype*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:215</i><br>
	 * @deprecated use the safer methods {@link #ARKStepEvolve(Pointer, double, N_Vector, DoubleBuffer, int)} and {@link #ARKStepEvolve(Pointer, double, Pointer, DoubleByReference, int)} instead
	 */
	@Deprecated 
	int ARKStepEvolve(Pointer arkode_mem, double tout, Pointer yout, DoubleByReference tret, int itask);
	/**
	 * Integrate the ODE over an interval in t<br>
	 * Original signature : <code>int ARKStepEvolve(void*, sunrealtype, N_Vector, sunrealtype*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:215</i>
	 */
	int ARKStepEvolve(Pointer arkode_mem, double tout, N_Vector yout, DoubleBuffer tret, int itask);
	/**
	 * Computes the kth derivative of the y function at time t<br>
	 * Original signature : <code>int ARKStepGetDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:219</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetDky(Pointer, double, int, N_Vector)} and {@link #ARKStepGetDky(Pointer, double, int, Pointer)} instead
	 */
	@Deprecated 
	int ARKStepGetDky(Pointer arkode_mem, double t, int k, Pointer dky);
	/**
	 * Computes the kth derivative of the y function at time t<br>
	 * Original signature : <code>int ARKStepGetDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:219</i>
	 */
	int ARKStepGetDky(Pointer arkode_mem, double t, int k, N_Vector dky);
	/**
	 * Utility function to update/compute y based on zcor<br>
	 * Original signature : <code>int ARKStepComputeState(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:223</i><br>
	 * @deprecated use the safer methods {@link #ARKStepComputeState(Pointer, N_Vector, N_Vector)} and {@link #ARKStepComputeState(Pointer, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int ARKStepComputeState(Pointer arkode_mem, Pointer zcor, Pointer z);
	/**
	 * Utility function to update/compute y based on zcor<br>
	 * Original signature : <code>int ARKStepComputeState(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:223</i>
	 */
	int ARKStepComputeState(Pointer arkode_mem, N_Vector zcor, N_Vector z);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int ARKStepGetNumExpSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:227</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumExpSteps(Pointer, LongBuffer)} and {@link #ARKStepGetNumExpSteps(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumExpSteps(Pointer arkode_mem, LongByReference expsteps);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int ARKStepGetNumExpSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:227</i>
	 */
	int ARKStepGetNumExpSteps(Pointer arkode_mem, LongBuffer expsteps);
	/**
	 * Original signature : <code>int ARKStepGetNumAccSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:228</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumAccSteps(Pointer, LongBuffer)} and {@link #ARKStepGetNumAccSteps(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumAccSteps(Pointer arkode_mem, LongByReference accsteps);
	/**
	 * Original signature : <code>int ARKStepGetNumAccSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:228</i>
	 */
	int ARKStepGetNumAccSteps(Pointer arkode_mem, LongBuffer accsteps);
	/**
	 * Original signature : <code>int ARKStepGetNumStepAttempts(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:229</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumStepAttempts(Pointer, LongBuffer)} and {@link #ARKStepGetNumStepAttempts(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumStepAttempts(Pointer arkode_mem, LongByReference step_attempts);
	/**
	 * Original signature : <code>int ARKStepGetNumStepAttempts(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:229</i>
	 */
	int ARKStepGetNumStepAttempts(Pointer arkode_mem, LongBuffer step_attempts);
	/**
	 * Original signature : <code>int ARKStepGetNumRhsEvals(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:231</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumRhsEvals(Pointer, LongBuffer, LongBuffer)} and {@link #ARKStepGetNumRhsEvals(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumRhsEvals(Pointer arkode_mem, LongByReference nfe_evals, LongByReference nfi_evals);
	/**
	 * Original signature : <code>int ARKStepGetNumRhsEvals(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:231</i>
	 */
	int ARKStepGetNumRhsEvals(Pointer arkode_mem, LongBuffer nfe_evals, LongBuffer nfi_evals);
	/**
	 * Original signature : <code>int ARKStepGetNumLinSolvSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:233</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumLinSolvSetups(Pointer, LongBuffer)} and {@link #ARKStepGetNumLinSolvSetups(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumLinSolvSetups(Pointer arkode_mem, LongByReference nlinsetups);
	/**
	 * Original signature : <code>int ARKStepGetNumLinSolvSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:233</i>
	 */
	int ARKStepGetNumLinSolvSetups(Pointer arkode_mem, LongBuffer nlinsetups);
	/**
	 * Original signature : <code>int ARKStepGetNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:235</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumErrTestFails(Pointer, LongBuffer)} and {@link #ARKStepGetNumErrTestFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumErrTestFails(Pointer arkode_mem, LongByReference netfails);
	/**
	 * Original signature : <code>int ARKStepGetNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:235</i>
	 */
	int ARKStepGetNumErrTestFails(Pointer arkode_mem, LongBuffer netfails);
	/**
	 * Original signature : <code>int ARKStepGetCurrentButcherTables(void*, ARKodeButcherTable*, ARKodeButcherTable*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:237</i><br>
	 * @deprecated use the safer method {@link #ARKStepGetCurrentButcherTables(Pointer, ARKodeButcherTableMem.ByReference[], ARKodeButcherTableMem.ByReference[])} instead
	 */
	@Deprecated 
	int ARKStepGetCurrentButcherTables(Pointer arkode_mem, PointerByReference Bi, PointerByReference Be);
	/**
	 * Original signature : <code>int ARKStepGetCurrentButcherTables(void*, ARKodeButcherTable*, ARKodeButcherTable*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:237</i>
	 */
	int ARKStepGetCurrentButcherTables(Pointer arkode_mem, ARKodeButcherTableMem.ByReference Bi[], ARKodeButcherTableMem.ByReference Be[]);
	/**
	 * Original signature : <code>int ARKStepGetEstLocalErrors(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:240</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetEstLocalErrors(Pointer, N_Vector)} and {@link #ARKStepGetEstLocalErrors(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int ARKStepGetEstLocalErrors(Pointer arkode_mem, Pointer ele);
	/**
	 * Original signature : <code>int ARKStepGetEstLocalErrors(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:240</i>
	 */
	int ARKStepGetEstLocalErrors(Pointer arkode_mem, N_Vector ele);
	/**
	 * Original signature : <code>int ARKStepGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:241</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #ARKStepGetWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetWorkSpace(Pointer arkode_mem, LongByReference lenrw, LongByReference leniw);
	/**
	 * Original signature : <code>int ARKStepGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:241</i>
	 */
	int ARKStepGetWorkSpace(Pointer arkode_mem, LongBuffer lenrw, LongBuffer leniw);
	/**
	 * Original signature : <code>int ARKStepGetNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:243</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumSteps(Pointer, LongBuffer)} and {@link #ARKStepGetNumSteps(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumSteps(Pointer arkode_mem, LongByReference nsteps);
	/**
	 * Original signature : <code>int ARKStepGetNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:243</i>
	 */
	int ARKStepGetNumSteps(Pointer arkode_mem, LongBuffer nsteps);
	/**
	 * Original signature : <code>int ARKStepGetActualInitStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:244</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetActualInitStep(Pointer, DoubleBuffer)} and {@link #ARKStepGetActualInitStep(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetActualInitStep(Pointer arkode_mem, DoubleByReference hinused);
	/**
	 * Original signature : <code>int ARKStepGetActualInitStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:244</i>
	 */
	int ARKStepGetActualInitStep(Pointer arkode_mem, DoubleBuffer hinused);
	/**
	 * Original signature : <code>int ARKStepGetLastStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:246</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetLastStep(Pointer, DoubleBuffer)} and {@link #ARKStepGetLastStep(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetLastStep(Pointer arkode_mem, DoubleByReference hlast);
	/**
	 * Original signature : <code>int ARKStepGetLastStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:246</i>
	 */
	int ARKStepGetLastStep(Pointer arkode_mem, DoubleBuffer hlast);
	/**
	 * Original signature : <code>int ARKStepGetCurrentStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:247</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetCurrentStep(Pointer, DoubleBuffer)} and {@link #ARKStepGetCurrentStep(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetCurrentStep(Pointer arkode_mem, DoubleByReference hcur);
	/**
	 * Original signature : <code>int ARKStepGetCurrentStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:247</i>
	 */
	int ARKStepGetCurrentStep(Pointer arkode_mem, DoubleBuffer hcur);
	/**
	 * Original signature : <code>int ARKStepGetCurrentTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:248</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetCurrentTime(Pointer, DoubleBuffer)} and {@link #ARKStepGetCurrentTime(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetCurrentTime(Pointer arkode_mem, DoubleByReference tcur);
	/**
	 * Original signature : <code>int ARKStepGetCurrentTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:248</i>
	 */
	int ARKStepGetCurrentTime(Pointer arkode_mem, DoubleBuffer tcur);
	/**
	 * Original signature : <code>int ARKStepGetCurrentState(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:249</i><br>
	 * @deprecated use the safer method {@link #ARKStepGetCurrentState(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetCurrentState(Pointer arkode_mem, Pointer state);
	/**
	 * Original signature : <code>int ARKStepGetCurrentState(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:249</i>
	 */
	int ARKStepGetCurrentState(Pointer arkode_mem, PointerByReference state);
	/**
	 * Original signature : <code>int ARKStepGetCurrentGamma(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:250</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetCurrentGamma(Pointer, DoubleBuffer)} and {@link #ARKStepGetCurrentGamma(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetCurrentGamma(Pointer arkode_mem, DoubleByReference gamma);
	/**
	 * Original signature : <code>int ARKStepGetCurrentGamma(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:250</i>
	 */
	int ARKStepGetCurrentGamma(Pointer arkode_mem, DoubleBuffer gamma);
	/**
	 * Original signature : <code>int ARKStepGetCurrentMassMatrix(void*, SUNMatrix*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:251</i><br>
	 * @deprecated use the safer method {@link #ARKStepGetCurrentMassMatrix(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetCurrentMassMatrix(Pointer arkode_mem, Pointer M);
	/**
	 * Original signature : <code>int ARKStepGetCurrentMassMatrix(void*, SUNMatrix*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:251</i>
	 */
	int ARKStepGetCurrentMassMatrix(Pointer arkode_mem, PointerByReference M);
	/**
	 * Original signature : <code>int ARKStepGetTolScaleFactor(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:252</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetTolScaleFactor(Pointer, DoubleBuffer)} and {@link #ARKStepGetTolScaleFactor(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetTolScaleFactor(Pointer arkode_mem, DoubleByReference tolsfac);
	/**
	 * Original signature : <code>int ARKStepGetTolScaleFactor(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:252</i>
	 */
	int ARKStepGetTolScaleFactor(Pointer arkode_mem, DoubleBuffer tolsfac);
	/**
	 * Original signature : <code>int ARKStepGetErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:254</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetErrWeights(Pointer, N_Vector)} and {@link #ARKStepGetErrWeights(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int ARKStepGetErrWeights(Pointer arkode_mem, Pointer eweight);
	/**
	 * Original signature : <code>int ARKStepGetErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:254</i>
	 */
	int ARKStepGetErrWeights(Pointer arkode_mem, N_Vector eweight);
	/**
	 * Original signature : <code>int ARKStepGetResWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:255</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetResWeights(Pointer, N_Vector)} and {@link #ARKStepGetResWeights(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int ARKStepGetResWeights(Pointer arkode_mem, Pointer rweight);
	/**
	 * Original signature : <code>int ARKStepGetResWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:255</i>
	 */
	int ARKStepGetResWeights(Pointer arkode_mem, N_Vector rweight);
	/**
	 * Original signature : <code>int ARKStepGetNumGEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:256</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumGEvals(Pointer, LongBuffer)} and {@link #ARKStepGetNumGEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumGEvals(Pointer arkode_mem, LongByReference ngevals);
	/**
	 * Original signature : <code>int ARKStepGetNumGEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:256</i>
	 */
	int ARKStepGetNumGEvals(Pointer arkode_mem, LongBuffer ngevals);
	/**
	 * Original signature : <code>int ARKStepGetRootInfo(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:257</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetRootInfo(Pointer, IntBuffer)} and {@link #ARKStepGetRootInfo(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetRootInfo(Pointer arkode_mem, IntByReference rootsfound);
	/**
	 * Original signature : <code>int ARKStepGetRootInfo(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:257</i>
	 */
	int ARKStepGetRootInfo(Pointer arkode_mem, IntBuffer rootsfound);
	/**
	 * Original signature : <code>int ARKStepGetNumConstrFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:258</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumConstrFails(Pointer, LongBuffer)} and {@link #ARKStepGetNumConstrFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumConstrFails(Pointer arkode_mem, LongByReference nconstrfails);
	/**
	 * Original signature : <code>int ARKStepGetNumConstrFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:258</i>
	 */
	int ARKStepGetNumConstrFails(Pointer arkode_mem, LongBuffer nconstrfails);
	/**
	 * Original signature : <code>int ARKStepGetUserData(void*, void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:260</i>
	 */
	int ARKStepGetUserData(Pointer arkode_mem, PointerByReference user_data);
	/**
	 * Original signature : <code>int ARKStepPrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:261</i><br>
	 * @deprecated use the safer method {@link #ARKStepPrintAllStats(Pointer, PointerByReference, int)} instead
	 */
	@Deprecated 
	int ARKStepPrintAllStats(Pointer arkode_mem, Pointer outfile, int fmt);
	/**
	 * Original signature : <code>int ARKStepPrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:261</i>
	 */
	int ARKStepPrintAllStats(Pointer arkode_mem, PointerByReference outfile, int fmt);
	/**
	 * Original signature : <code>char* ARKStepGetReturnFlagName(long long)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:263</i>
	 */
	Pointer ARKStepGetReturnFlagName(long flag);
	/**
	 * Original signature : <code>int ARKStepWriteParameters(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:265</i><br>
	 * @deprecated use the safer method {@link #ARKStepWriteParameters(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int ARKStepWriteParameters(Pointer arkode_mem, Pointer fp);
	/**
	 * Original signature : <code>int ARKStepWriteParameters(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:265</i>
	 */
	int ARKStepWriteParameters(Pointer arkode_mem, PointerByReference fp);
	/**
	 * Original signature : <code>int ARKStepWriteButcher(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:267</i><br>
	 * @deprecated use the safer method {@link #ARKStepWriteButcher(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int ARKStepWriteButcher(Pointer arkode_mem, Pointer fp);
	/**
	 * Original signature : <code>int ARKStepWriteButcher(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:267</i>
	 */
	int ARKStepWriteButcher(Pointer arkode_mem, PointerByReference fp);
	/**
	 * Grouped optional output functions<br>
	 * Original signature : <code>int ARKStepGetTimestepperStats(void*, long long*, long long*, long long*, long long*, long long*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:270</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetTimestepperStats(Pointer, LongBuffer, LongBuffer, LongBuffer, LongBuffer, LongBuffer, LongBuffer, LongBuffer)} and {@link #ARKStepGetTimestepperStats(Pointer, LongByReference, LongByReference, LongByReference, LongByReference, LongByReference, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetTimestepperStats(Pointer arkode_mem, LongByReference expsteps, LongByReference accsteps, LongByReference step_attempts, LongByReference nfe_evals, LongByReference nfi_evals, LongByReference nlinsetups, LongByReference netfails);
	/**
	 * Grouped optional output functions<br>
	 * Original signature : <code>int ARKStepGetTimestepperStats(void*, long long*, long long*, long long*, long long*, long long*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:270</i>
	 */
	int ARKStepGetTimestepperStats(Pointer arkode_mem, LongBuffer expsteps, LongBuffer accsteps, LongBuffer step_attempts, LongBuffer nfe_evals, LongBuffer nfi_evals, LongBuffer nlinsetups, LongBuffer netfails);
	/**
	 * Original signature : <code>int ARKStepGetStepStats(void*, long long*, sunrealtype*, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:274</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetStepStats(Pointer, LongBuffer, DoubleBuffer, DoubleBuffer, DoubleBuffer, DoubleBuffer)} and {@link #ARKStepGetStepStats(Pointer, LongByReference, DoubleByReference, DoubleByReference, DoubleByReference, DoubleByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetStepStats(Pointer arkode_mem, LongByReference nsteps, DoubleByReference hinused, DoubleByReference hlast, DoubleByReference hcur, DoubleByReference tcur);
	/**
	 * Original signature : <code>int ARKStepGetStepStats(void*, long long*, sunrealtype*, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:274</i>
	 */
	int ARKStepGetStepStats(Pointer arkode_mem, LongBuffer nsteps, DoubleBuffer hinused, DoubleBuffer hlast, DoubleBuffer hcur, DoubleBuffer tcur);
	/**
	 * Nonlinear solver optional output functions<br>
	 * Original signature : <code>int ARKStepGetNonlinearSystemData(void*, sunrealtype*, N_Vector*, N_Vector*, N_Vector*, sunrealtype*, N_Vector*, void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:279</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNonlinearSystemData(Pointer, DoubleBuffer, PointerByReference, PointerByReference, PointerByReference, DoubleBuffer, PointerByReference, PointerByReference)} and {@link #ARKStepGetNonlinearSystemData(Pointer, DoubleByReference, PointerByReference, PointerByReference, PointerByReference, DoubleByReference, PointerByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNonlinearSystemData(Pointer arkode_mem, DoubleByReference tcur, Pointer zpred, Pointer z, Pointer Fi, DoubleByReference gamma, Pointer sdata, PointerByReference user_data);
	/**
	 * Nonlinear solver optional output functions<br>
	 * Original signature : <code>int ARKStepGetNonlinearSystemData(void*, sunrealtype*, N_Vector*, N_Vector*, N_Vector*, sunrealtype*, N_Vector*, void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:279</i>
	 */
	int ARKStepGetNonlinearSystemData(Pointer arkode_mem, DoubleBuffer tcur, PointerByReference zpred, PointerByReference z, PointerByReference Fi, DoubleBuffer gamma, PointerByReference sdata, PointerByReference user_data);
	/**
	 * Nonlinear solver optional output functions<br>
	 * Original signature : <code>int ARKStepGetNonlinearSystemData(void*, sunrealtype*, N_Vector*, N_Vector*, N_Vector*, sunrealtype*, N_Vector*, void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:279</i>
	 */
	int ARKStepGetNonlinearSystemData(Pointer arkode_mem, DoubleByReference tcur, PointerByReference zpred, PointerByReference z, PointerByReference Fi, DoubleByReference gamma, PointerByReference sdata, PointerByReference user_data);
	/**
	 * Original signature : <code>int ARKStepGetNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:283</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumNonlinSolvIters(Pointer, LongBuffer)} and {@link #ARKStepGetNumNonlinSolvIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumNonlinSolvIters(Pointer arkode_mem, LongByReference nniters);
	/**
	 * Original signature : <code>int ARKStepGetNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:283</i>
	 */
	int ARKStepGetNumNonlinSolvIters(Pointer arkode_mem, LongBuffer nniters);
	/**
	 * Original signature : <code>int ARKStepGetNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:285</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumNonlinSolvConvFails(Pointer, LongBuffer)} and {@link #ARKStepGetNumNonlinSolvConvFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumNonlinSolvConvFails(Pointer arkode_mem, LongByReference nnfails);
	/**
	 * Original signature : <code>int ARKStepGetNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:285</i>
	 */
	int ARKStepGetNumNonlinSolvConvFails(Pointer arkode_mem, LongBuffer nnfails);
	/**
	 * Original signature : <code>int ARKStepGetNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:287</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNonlinSolvStats(Pointer, LongBuffer, LongBuffer)} and {@link #ARKStepGetNonlinSolvStats(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNonlinSolvStats(Pointer arkode_mem, LongByReference nniters, LongByReference nnfails);
	/**
	 * Original signature : <code>int ARKStepGetNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:287</i>
	 */
	int ARKStepGetNonlinSolvStats(Pointer arkode_mem, LongBuffer nniters, LongBuffer nnfails);
	/**
	 * Original signature : <code>int ARKStepGetNumStepSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:289</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumStepSolveFails(Pointer, LongBuffer)} and {@link #ARKStepGetNumStepSolveFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumStepSolveFails(Pointer arkode_mem, LongByReference nncfails);
	/**
	 * Original signature : <code>int ARKStepGetNumStepSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:289</i>
	 */
	int ARKStepGetNumStepSolveFails(Pointer arkode_mem, LongBuffer nncfails);
	/**
	 * Linear solver optional output functions<br>
	 * Original signature : <code>int ARKStepGetJac(void*, SUNMatrix*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:293</i><br>
	 * @deprecated use the safer method {@link #ARKStepGetJac(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetJac(Pointer arkode_mem, Pointer J);
	/**
	 * Linear solver optional output functions<br>
	 * Original signature : <code>int ARKStepGetJac(void*, SUNMatrix*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:293</i>
	 */
	int ARKStepGetJac(Pointer arkode_mem, PointerByReference J);
	/**
	 * Original signature : <code>int ARKStepGetJacTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:294</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetJacTime(Pointer, DoubleBuffer)} and {@link #ARKStepGetJacTime(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetJacTime(Pointer arkode_mem, DoubleByReference t_J);
	/**
	 * Original signature : <code>int ARKStepGetJacTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:294</i>
	 */
	int ARKStepGetJacTime(Pointer arkode_mem, DoubleBuffer t_J);
	/**
	 * Original signature : <code>int ARKStepGetJacNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:295</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetJacNumSteps(Pointer, LongBuffer)} and {@link #ARKStepGetJacNumSteps(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetJacNumSteps(Pointer arkode_mem, LongByReference nst_J);
	/**
	 * Original signature : <code>int ARKStepGetJacNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:295</i>
	 */
	int ARKStepGetJacNumSteps(Pointer arkode_mem, LongBuffer nst_J);
	/**
	 * Original signature : <code>int ARKStepGetLinWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:296</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetLinWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #ARKStepGetLinWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetLinWorkSpace(Pointer arkode_mem, LongByReference lenrwLS, LongByReference leniwLS);
	/**
	 * Original signature : <code>int ARKStepGetLinWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:296</i>
	 */
	int ARKStepGetLinWorkSpace(Pointer arkode_mem, LongBuffer lenrwLS, LongBuffer leniwLS);
	/**
	 * Original signature : <code>int ARKStepGetNumJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:298</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumJacEvals(Pointer, LongBuffer)} and {@link #ARKStepGetNumJacEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumJacEvals(Pointer arkode_mem, LongByReference njevals);
	/**
	 * Original signature : <code>int ARKStepGetNumJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:298</i>
	 */
	int ARKStepGetNumJacEvals(Pointer arkode_mem, LongBuffer njevals);
	/**
	 * Original signature : <code>int ARKStepGetNumPrecEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:299</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumPrecEvals(Pointer, LongBuffer)} and {@link #ARKStepGetNumPrecEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumPrecEvals(Pointer arkode_mem, LongByReference npevals);
	/**
	 * Original signature : <code>int ARKStepGetNumPrecEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:299</i>
	 */
	int ARKStepGetNumPrecEvals(Pointer arkode_mem, LongBuffer npevals);
	/**
	 * Original signature : <code>int ARKStepGetNumPrecSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:300</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumPrecSolves(Pointer, LongBuffer)} and {@link #ARKStepGetNumPrecSolves(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumPrecSolves(Pointer arkode_mem, LongByReference npsolves);
	/**
	 * Original signature : <code>int ARKStepGetNumPrecSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:300</i>
	 */
	int ARKStepGetNumPrecSolves(Pointer arkode_mem, LongBuffer npsolves);
	/**
	 * Original signature : <code>int ARKStepGetNumLinIters(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:301</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumLinIters(Pointer, LongBuffer)} and {@link #ARKStepGetNumLinIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumLinIters(Pointer arkode_mem, LongByReference nliters);
	/**
	 * Original signature : <code>int ARKStepGetNumLinIters(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:301</i>
	 */
	int ARKStepGetNumLinIters(Pointer arkode_mem, LongBuffer nliters);
	/**
	 * Original signature : <code>int ARKStepGetNumLinConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:302</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumLinConvFails(Pointer, LongBuffer)} and {@link #ARKStepGetNumLinConvFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumLinConvFails(Pointer arkode_mem, LongByReference nlcfails);
	/**
	 * Original signature : <code>int ARKStepGetNumLinConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:302</i>
	 */
	int ARKStepGetNumLinConvFails(Pointer arkode_mem, LongBuffer nlcfails);
	/**
	 * Original signature : <code>int ARKStepGetNumJTSetupEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:304</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumJTSetupEvals(Pointer, LongBuffer)} and {@link #ARKStepGetNumJTSetupEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumJTSetupEvals(Pointer arkode_mem, LongByReference njtsetups);
	/**
	 * Original signature : <code>int ARKStepGetNumJTSetupEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:304</i>
	 */
	int ARKStepGetNumJTSetupEvals(Pointer arkode_mem, LongBuffer njtsetups);
	/**
	 * Original signature : <code>int ARKStepGetNumJtimesEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:306</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumJtimesEvals(Pointer, LongBuffer)} and {@link #ARKStepGetNumJtimesEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumJtimesEvals(Pointer arkode_mem, LongByReference njvevals);
	/**
	 * Original signature : <code>int ARKStepGetNumJtimesEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:306</i>
	 */
	int ARKStepGetNumJtimesEvals(Pointer arkode_mem, LongBuffer njvevals);
	/**
	 * Original signature : <code>int ARKStepGetNumLinRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:308</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumLinRhsEvals(Pointer, LongBuffer)} and {@link #ARKStepGetNumLinRhsEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumLinRhsEvals(Pointer arkode_mem, LongByReference nfevalsLS);
	/**
	 * Original signature : <code>int ARKStepGetNumLinRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:308</i>
	 */
	int ARKStepGetNumLinRhsEvals(Pointer arkode_mem, LongBuffer nfevalsLS);
	/**
	 * Original signature : <code>int ARKStepGetLastLinFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:310</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetLastLinFlag(Pointer, LongBuffer)} and {@link #ARKStepGetLastLinFlag(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetLastLinFlag(Pointer arkode_mem, LongByReference flag);
	/**
	 * Original signature : <code>int ARKStepGetLastLinFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:310</i>
	 */
	int ARKStepGetLastLinFlag(Pointer arkode_mem, LongBuffer flag);
	/**
	 * Original signature : <code>int ARKStepGetMassWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:312</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetMassWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #ARKStepGetMassWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetMassWorkSpace(Pointer arkode_mem, LongByReference lenrwMLS, LongByReference leniwMLS);
	/**
	 * Original signature : <code>int ARKStepGetMassWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:312</i>
	 */
	int ARKStepGetMassWorkSpace(Pointer arkode_mem, LongBuffer lenrwMLS, LongBuffer leniwMLS);
	/**
	 * Original signature : <code>int ARKStepGetNumMassSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:314</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumMassSetups(Pointer, LongBuffer)} and {@link #ARKStepGetNumMassSetups(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumMassSetups(Pointer arkode_mem, LongByReference nmsetups);
	/**
	 * Original signature : <code>int ARKStepGetNumMassSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:314</i>
	 */
	int ARKStepGetNumMassSetups(Pointer arkode_mem, LongBuffer nmsetups);
	/**
	 * Original signature : <code>int ARKStepGetNumMassMultSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:315</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumMassMultSetups(Pointer, LongBuffer)} and {@link #ARKStepGetNumMassMultSetups(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumMassMultSetups(Pointer arkode_mem, LongByReference nmvsetups);
	/**
	 * Original signature : <code>int ARKStepGetNumMassMultSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:315</i>
	 */
	int ARKStepGetNumMassMultSetups(Pointer arkode_mem, LongBuffer nmvsetups);
	/**
	 * Original signature : <code>int ARKStepGetNumMassMult(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:317</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumMassMult(Pointer, LongBuffer)} and {@link #ARKStepGetNumMassMult(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumMassMult(Pointer arkode_mem, LongByReference nmvevals);
	/**
	 * Original signature : <code>int ARKStepGetNumMassMult(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:317</i>
	 */
	int ARKStepGetNumMassMult(Pointer arkode_mem, LongBuffer nmvevals);
	/**
	 * Original signature : <code>int ARKStepGetNumMassSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:318</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumMassSolves(Pointer, LongBuffer)} and {@link #ARKStepGetNumMassSolves(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumMassSolves(Pointer arkode_mem, LongByReference nmsolves);
	/**
	 * Original signature : <code>int ARKStepGetNumMassSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:318</i>
	 */
	int ARKStepGetNumMassSolves(Pointer arkode_mem, LongBuffer nmsolves);
	/**
	 * Original signature : <code>int ARKStepGetNumMassPrecEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:319</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumMassPrecEvals(Pointer, LongBuffer)} and {@link #ARKStepGetNumMassPrecEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumMassPrecEvals(Pointer arkode_mem, LongByReference nmpevals);
	/**
	 * Original signature : <code>int ARKStepGetNumMassPrecEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:319</i>
	 */
	int ARKStepGetNumMassPrecEvals(Pointer arkode_mem, LongBuffer nmpevals);
	/**
	 * Original signature : <code>int ARKStepGetNumMassPrecSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:321</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumMassPrecSolves(Pointer, LongBuffer)} and {@link #ARKStepGetNumMassPrecSolves(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumMassPrecSolves(Pointer arkode_mem, LongByReference nmpsolves);
	/**
	 * Original signature : <code>int ARKStepGetNumMassPrecSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:321</i>
	 */
	int ARKStepGetNumMassPrecSolves(Pointer arkode_mem, LongBuffer nmpsolves);
	/**
	 * Original signature : <code>int ARKStepGetNumMassIters(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:323</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumMassIters(Pointer, LongBuffer)} and {@link #ARKStepGetNumMassIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumMassIters(Pointer arkode_mem, LongByReference nmiters);
	/**
	 * Original signature : <code>int ARKStepGetNumMassIters(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:323</i>
	 */
	int ARKStepGetNumMassIters(Pointer arkode_mem, LongBuffer nmiters);
	/**
	 * Original signature : <code>int ARKStepGetNumMassConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:324</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumMassConvFails(Pointer, LongBuffer)} and {@link #ARKStepGetNumMassConvFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumMassConvFails(Pointer arkode_mem, LongByReference nmcfails);
	/**
	 * Original signature : <code>int ARKStepGetNumMassConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:324</i>
	 */
	int ARKStepGetNumMassConvFails(Pointer arkode_mem, LongBuffer nmcfails);
	/**
	 * Original signature : <code>int ARKStepGetNumMTSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:326</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumMTSetups(Pointer, LongBuffer)} and {@link #ARKStepGetNumMTSetups(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumMTSetups(Pointer arkode_mem, LongByReference nmtsetups);
	/**
	 * Original signature : <code>int ARKStepGetNumMTSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:326</i>
	 */
	int ARKStepGetNumMTSetups(Pointer arkode_mem, LongBuffer nmtsetups);
	/**
	 * Original signature : <code>int ARKStepGetLastMassFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:327</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetLastMassFlag(Pointer, LongBuffer)} and {@link #ARKStepGetLastMassFlag(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetLastMassFlag(Pointer arkode_mem, LongByReference flag);
	/**
	 * Original signature : <code>int ARKStepGetLastMassFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:327</i>
	 */
	int ARKStepGetLastMassFlag(Pointer arkode_mem, LongBuffer flag);
	/**
	 * Original signature : <code>char* ARKStepGetLinReturnFlagName(long long)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:329</i>
	 */
	Pointer ARKStepGetLinReturnFlagName(long flag);
	/**
	 * Free function<br>
	 * Original signature : <code>void ARKStepFree(void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:332</i>
	 */
	void ARKStepFree(PointerByReference arkode_mem);
	/**
	 * Output the ARKStep memory structure (useful when debugging)<br>
	 * Original signature : <code>void ARKStepPrintMem(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:335</i><br>
	 * @deprecated use the safer method {@link #ARKStepPrintMem(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	void ARKStepPrintMem(Pointer arkode_mem, Pointer outfile);
	/**
	 * Output the ARKStep memory structure (useful when debugging)<br>
	 * Original signature : <code>void ARKStepPrintMem(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:335</i>
	 */
	void ARKStepPrintMem(Pointer arkode_mem, PointerByReference outfile);
	/**
	 * MRIStep interface functions<br>
	 * Original signature : <code>int ARKStepCreateMRIStepInnerStepper(void*, MRIStepInnerStepper*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:338</i><br>
	 * @deprecated use the safer method {@link #ARKStepCreateMRIStepInnerStepper(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int ARKStepCreateMRIStepInnerStepper(Pointer arkode_mem, Pointer stepper);
	/**
	 * MRIStep interface functions<br>
	 * Original signature : <code>int ARKStepCreateMRIStepInnerStepper(void*, MRIStepInnerStepper*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:338</i>
	 */
	int ARKStepCreateMRIStepInnerStepper(Pointer arkode_mem, PointerByReference stepper);
	/**
	 * Relaxation functions<br>
	 * Original signature : <code>int ARKStepSetRelaxFn(void*, ARKRelaxFn, ARKRelaxJacFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:342</i>
	 */
	int ARKStepSetRelaxFn(Pointer arkode_mem, ARKRelaxFn rfn, ARKRelaxJacFn rjac);
	/**
	 * Original signature : <code>int ARKStepSetRelaxEtaFail(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:344</i>
	 */
	int ARKStepSetRelaxEtaFail(Pointer arkode_mem, double eta_rf);
	/**
	 * Original signature : <code>int ARKStepSetRelaxLowerBound(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:345</i>
	 */
	int ARKStepSetRelaxLowerBound(Pointer arkode_mem, double lower);
	/**
	 * Original signature : <code>int ARKStepSetRelaxMaxFails(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:347</i>
	 */
	int ARKStepSetRelaxMaxFails(Pointer arkode_mem, int max_fails);
	/**
	 * Original signature : <code>int ARKStepSetRelaxMaxIters(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:348</i>
	 */
	int ARKStepSetRelaxMaxIters(Pointer arkode_mem, int max_iters);
	/**
	 * Original signature : <code>int ARKStepSetRelaxSolver(void*, ARKRelaxSolver)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:349</i>
	 */
	int ARKStepSetRelaxSolver(Pointer arkode_mem, int solver);
	/**
	 * Original signature : <code>int ARKStepSetRelaxResTol(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:351</i>
	 */
	int ARKStepSetRelaxResTol(Pointer arkode_mem, double res_tol);
	/**
	 * Original signature : <code>int ARKStepSetRelaxTol(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:352</i>
	 */
	int ARKStepSetRelaxTol(Pointer arkode_mem, double rel_tol, double abs_tol);
	/**
	 * Original signature : <code>int ARKStepSetRelaxUpperBound(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:354</i>
	 */
	int ARKStepSetRelaxUpperBound(Pointer arkode_mem, double upper);
	/**
	 * Original signature : <code>int ARKStepGetNumRelaxFnEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:356</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumRelaxFnEvals(Pointer, LongBuffer)} and {@link #ARKStepGetNumRelaxFnEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumRelaxFnEvals(Pointer arkode_mem, LongByReference r_evals);
	/**
	 * Original signature : <code>int ARKStepGetNumRelaxFnEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:356</i>
	 */
	int ARKStepGetNumRelaxFnEvals(Pointer arkode_mem, LongBuffer r_evals);
	/**
	 * Original signature : <code>int ARKStepGetNumRelaxJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:358</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumRelaxJacEvals(Pointer, LongBuffer)} and {@link #ARKStepGetNumRelaxJacEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumRelaxJacEvals(Pointer arkode_mem, LongByReference J_evals);
	/**
	 * Original signature : <code>int ARKStepGetNumRelaxJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:358</i>
	 */
	int ARKStepGetNumRelaxJacEvals(Pointer arkode_mem, LongBuffer J_evals);
	/**
	 * Original signature : <code>int ARKStepGetNumRelaxFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:360</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumRelaxFails(Pointer, LongBuffer)} and {@link #ARKStepGetNumRelaxFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumRelaxFails(Pointer arkode_mem, LongByReference relax_fails);
	/**
	 * Original signature : <code>int ARKStepGetNumRelaxFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:360</i>
	 */
	int ARKStepGetNumRelaxFails(Pointer arkode_mem, LongBuffer relax_fails);
	/**
	 * Original signature : <code>int ARKStepGetNumRelaxBoundFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:362</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumRelaxBoundFails(Pointer, LongBuffer)} and {@link #ARKStepGetNumRelaxBoundFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumRelaxBoundFails(Pointer arkode_mem, LongByReference fails);
	/**
	 * Original signature : <code>int ARKStepGetNumRelaxBoundFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:362</i>
	 */
	int ARKStepGetNumRelaxBoundFails(Pointer arkode_mem, LongBuffer fails);
	/**
	 * Original signature : <code>int ARKStepGetNumRelaxSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:364</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumRelaxSolveFails(Pointer, LongBuffer)} and {@link #ARKStepGetNumRelaxSolveFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumRelaxSolveFails(Pointer arkode_mem, LongByReference fails);
	/**
	 * Original signature : <code>int ARKStepGetNumRelaxSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:364</i>
	 */
	int ARKStepGetNumRelaxSolveFails(Pointer arkode_mem, LongBuffer fails);
	/**
	 * Original signature : <code>int ARKStepGetNumRelaxSolveIters(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:366</i><br>
	 * @deprecated use the safer methods {@link #ARKStepGetNumRelaxSolveIters(Pointer, LongBuffer)} and {@link #ARKStepGetNumRelaxSolveIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKStepGetNumRelaxSolveIters(Pointer arkode_mem, LongByReference iters);
	/**
	 * Original signature : <code>int ARKStepGetNumRelaxSolveIters(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_arkstep.h:366</i>
	 */
	int ARKStepGetNumRelaxSolveIters(Pointer arkode_mem, LongBuffer iters);
	/**
	 * BandPrec inititialization function<br>
	 * Original signature : <code>int ARKBandPrecInit(void*, sunindextype, sunindextype, sunindextype)</code><br>
	 * <i>native declaration : include\arkode\arkode_bandpre.h:8</i>
	 */
	int ARKBandPrecInit(Pointer arkode_mem, long N, long mu, long ml);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int ARKBandPrecGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_bandpre.h:13</i><br>
	 * @deprecated use the safer methods {@link #ARKBandPrecGetWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #ARKBandPrecGetWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int ARKBandPrecGetWorkSpace(Pointer arkode_mem, LongByReference lenrwLS, LongByReference leniwLS);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int ARKBandPrecGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_bandpre.h:13</i>
	 */
	int ARKBandPrecGetWorkSpace(Pointer arkode_mem, LongBuffer lenrwLS, LongBuffer leniwLS);
	/**
	 * Original signature : <code>int ARKBandPrecGetNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_bandpre.h:15</i><br>
	 * @deprecated use the safer methods {@link #ARKBandPrecGetNumRhsEvals(Pointer, LongBuffer)} and {@link #ARKBandPrecGetNumRhsEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKBandPrecGetNumRhsEvals(Pointer arkode_mem, LongByReference nfevalsBP);
	/**
	 * Original signature : <code>int ARKBandPrecGetNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_bandpre.h:15</i>
	 */
	int ARKBandPrecGetNumRhsEvals(Pointer arkode_mem, LongBuffer nfevalsBP);
	/**
	 * Exported Functions<br>
	 * Original signature : <code>int ARKBBDPrecInit(void*, sunindextype, sunindextype, sunindextype, sunindextype, sunindextype, sunrealtype, ARKLocalFn, ARKCommFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_bbdpre.h:16</i>
	 */
	int ARKBBDPrecInit(Pointer arkode_mem, long Nlocal, long mudq, long mldq, long mukeep, long mlkeep, double dqrely, ARKLocalFn gloc, ARKCommFn cfn);
	/**
	 * Original signature : <code>int ARKBBDPrecReInit(void*, sunindextype, sunindextype, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_bbdpre.h:22</i>
	 */
	int ARKBBDPrecReInit(Pointer arkode_mem, long mudq, long mldq, double dqrely);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int ARKBBDPrecGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_bbdpre.h:27</i><br>
	 * @deprecated use the safer methods {@link #ARKBBDPrecGetWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #ARKBBDPrecGetWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int ARKBBDPrecGetWorkSpace(Pointer arkode_mem, LongByReference lenrwBBDP, LongByReference leniwBBDP);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int ARKBBDPrecGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_bbdpre.h:27</i>
	 */
	int ARKBBDPrecGetWorkSpace(Pointer arkode_mem, LongBuffer lenrwBBDP, LongBuffer leniwBBDP);
	/**
	 * Original signature : <code>int ARKBBDPrecGetNumGfnEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_bbdpre.h:30</i><br>
	 * @deprecated use the safer methods {@link #ARKBBDPrecGetNumGfnEvals(Pointer, LongBuffer)} and {@link #ARKBBDPrecGetNumGfnEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ARKBBDPrecGetNumGfnEvals(Pointer arkode_mem, LongByReference ngevalsBBDP);
	/**
	 * Original signature : <code>int ARKBBDPrecGetNumGfnEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_bbdpre.h:30</i>
	 */
	int ARKBBDPrecGetNumGfnEvals(Pointer arkode_mem, LongBuffer ngevalsBBDP);
	/**
	 * Create, Resize, and Reinitialization functions<br>
	 * Original signature : <code>void* ERKStepCreate(ARKRhsFn, sunrealtype, N_Vector, SUNContext)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:26</i><br>
	 * @deprecated use the safer methods {@link #ERKStepCreate(ARKRhsFn, double, N_Vector, SUNContext)} and {@link #ERKStepCreate(ARKRhsFn, double, Pointer, Pointer)} instead
	 */
	@Deprecated 
	Pointer ERKStepCreate(ARKRhsFn f, double t0, Pointer y0, Pointer sunctx);
	/**
	 * Create, Resize, and Reinitialization functions<br>
	 * Original signature : <code>void* ERKStepCreate(ARKRhsFn, sunrealtype, N_Vector, SUNContext)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:26</i>
	 */
	Pointer ERKStepCreate(ARKRhsFn f, double t0, N_Vector y0, SUNContext sunctx);
	/**
	 * Original signature : <code>int ERKStepResize(void*, N_Vector, sunrealtype, sunrealtype, ARKVecResizeFn, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:29</i><br>
	 * @deprecated use the safer methods {@link #ERKStepResize(Pointer, N_Vector, double, double, ARKVecResizeFn, Pointer)} and {@link #ERKStepResize(Pointer, Pointer, double, double, ARKVecResizeFn, Pointer)} instead
	 */
	@Deprecated 
	int ERKStepResize(Pointer arkode_mem, Pointer ynew, double hscale, double t0, ARKVecResizeFn resize, Pointer resize_data);
	/**
	 * Original signature : <code>int ERKStepResize(void*, N_Vector, sunrealtype, sunrealtype, ARKVecResizeFn, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:29</i>
	 */
	int ERKStepResize(Pointer arkode_mem, N_Vector ynew, double hscale, double t0, ARKVecResizeFn resize, Pointer resize_data);
	/**
	 * Original signature : <code>int ERKStepReInit(void*, ARKRhsFn, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:33</i><br>
	 * @deprecated use the safer methods {@link #ERKStepReInit(Pointer, ARKRhsFn, double, N_Vector)} and {@link #ERKStepReInit(Pointer, ARKRhsFn, double, Pointer)} instead
	 */
	@Deprecated 
	int ERKStepReInit(Pointer arkode_mem, ARKRhsFn f, double t0, Pointer y0);
	/**
	 * Original signature : <code>int ERKStepReInit(void*, ARKRhsFn, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:33</i>
	 */
	int ERKStepReInit(Pointer arkode_mem, ARKRhsFn f, double t0, N_Vector y0);
	/**
	 * Original signature : <code>int ERKStepReset(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:36</i><br>
	 * @deprecated use the safer methods {@link #ERKStepReset(Pointer, double, N_Vector)} and {@link #ERKStepReset(Pointer, double, Pointer)} instead
	 */
	@Deprecated 
	int ERKStepReset(Pointer arkode_mem, double tR, Pointer yR);
	/**
	 * Original signature : <code>int ERKStepReset(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:36</i>
	 */
	int ERKStepReset(Pointer arkode_mem, double tR, N_Vector yR);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int ERKStepSStolerances(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:39</i>
	 */
	int ERKStepSStolerances(Pointer arkode_mem, double reltol, double abstol);
	/**
	 * Original signature : <code>int ERKStepSVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:41</i><br>
	 * @deprecated use the safer methods {@link #ERKStepSVtolerances(Pointer, double, N_Vector)} and {@link #ERKStepSVtolerances(Pointer, double, Pointer)} instead
	 */
	@Deprecated 
	int ERKStepSVtolerances(Pointer arkode_mem, double reltol, Pointer abstol);
	/**
	 * Original signature : <code>int ERKStepSVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:41</i>
	 */
	int ERKStepSVtolerances(Pointer arkode_mem, double reltol, N_Vector abstol);
	/**
	 * Original signature : <code>int ERKStepWFtolerances(void*, ARKEwtFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:43</i>
	 */
	int ERKStepWFtolerances(Pointer arkode_mem, ARKEwtFn efun);
	/**
	 * Rootfinding initialization<br>
	 * Original signature : <code>int ERKStepRootInit(void*, int, ARKRootFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:46</i>
	 */
	int ERKStepRootInit(Pointer arkode_mem, int nrtfn, ARKRootFn g);
	/**
	 * Optional input functions -- must be called AFTER ERKStepCreate<br>
	 * Original signature : <code>int ERKStepSetDefaults(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:49</i>
	 */
	int ERKStepSetDefaults(Pointer arkode_mem);
	/**
	 * Original signature : <code>int ERKStepSetOrder(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:50</i>
	 */
	int ERKStepSetOrder(Pointer arkode_mem, int maxord);
	/**
	 * Original signature : <code>int ERKStepSetInterpolantType(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:51</i>
	 */
	int ERKStepSetInterpolantType(Pointer arkode_mem, int itype);
	/**
	 * Original signature : <code>int ERKStepSetInterpolantDegree(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:52</i>
	 */
	int ERKStepSetInterpolantDegree(Pointer arkode_mem, int degree);
	/**
	 * Original signature : <code>int ERKStepSetDenseOrder(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:53</i>
	 */
	int ERKStepSetDenseOrder(Pointer arkode_mem, int dord);
	/**
	 * Original signature : <code>int ERKStepSetTable(void*, ARKodeButcherTable)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:54</i>
	 */
	int ERKStepSetTable(Pointer arkode_mem, ARKodeButcherTableMem B);
	/**
	 * Original signature : <code>int ERKStepSetTableNum(void*, ARKODE_ERKTableID)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:55</i>
	 */
	int ERKStepSetTableNum(Pointer arkode_mem, int etable);
	/**
	 * Original signature : <code>int ERKStepSetTableName(void*, const char*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:57</i><br>
	 * @deprecated use the safer methods {@link #ERKStepSetTableName(Pointer, String)} and {@link #ERKStepSetTableName(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int ERKStepSetTableName(Pointer arkode_mem, Pointer etable);
	/**
	 * Original signature : <code>int ERKStepSetTableName(void*, const char*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:57</i>
	 */
	int ERKStepSetTableName(Pointer arkode_mem, String etable);
	/**
	 * Original signature : <code>int ERKStepSetAdaptController(void*, SUNAdaptController)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:58</i><br>
	 * @deprecated use the safer methods {@link #ERKStepSetAdaptController(Pointer, SUNAdaptController)} and {@link #ERKStepSetAdaptController(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int ERKStepSetAdaptController(Pointer arkode_mem, Pointer C);
	/**
	 * Original signature : <code>int ERKStepSetAdaptController(void*, SUNAdaptController)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:58</i>
	 */
	int ERKStepSetAdaptController(Pointer arkode_mem, SUNAdaptController C);
	/**
	 * Original signature : <code>int ERKStepSetAdaptivityAdjustment(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:60</i>
	 */
	int ERKStepSetAdaptivityAdjustment(Pointer arkode_mem, int adjust);
	/**
	 * Original signature : <code>int ERKStepSetCFLFraction(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:61</i>
	 */
	int ERKStepSetCFLFraction(Pointer arkode_mem, double cfl_frac);
	/**
	 * Original signature : <code>int ERKStepSetSafetyFactor(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:62</i>
	 */
	int ERKStepSetSafetyFactor(Pointer arkode_mem, double safety);
	/**
	 * Original signature : <code>int ERKStepSetErrorBias(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:63</i>
	 */
	int ERKStepSetErrorBias(Pointer arkode_mem, double bias);
	/**
	 * Original signature : <code>int ERKStepSetMaxGrowth(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:65</i>
	 */
	int ERKStepSetMaxGrowth(Pointer arkode_mem, double mx_growth);
	/**
	 * Original signature : <code>int ERKStepSetMinReduction(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:66</i>
	 */
	int ERKStepSetMinReduction(Pointer arkode_mem, double eta_min);
	/**
	 * Original signature : <code>int ERKStepSetFixedStepBounds(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:67</i>
	 */
	int ERKStepSetFixedStepBounds(Pointer arkode_mem, double lb, double ub);
	/**
	 * Original signature : <code>int ERKStepSetAdaptivityMethod(void*, int, int, int, sunrealtype[3])</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:69</i><br>
	 * @deprecated use the safer methods {@link #ERKStepSetAdaptivityMethod(Pointer, int, int, int, DoubleBuffer)} and {@link #ERKStepSetAdaptivityMethod(Pointer, int, int, int, DoubleByReference)} instead
	 */
	@Deprecated 
	int ERKStepSetAdaptivityMethod(Pointer arkode_mem, int imethod, int idefault, int pq, DoubleByReference adapt_params);
	/**
	 * Original signature : <code>int ERKStepSetAdaptivityMethod(void*, int, int, int, sunrealtype[3])</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:69</i>
	 */
	int ERKStepSetAdaptivityMethod(Pointer arkode_mem, int imethod, int idefault, int pq, DoubleBuffer adapt_params);
	/**
	 * Original signature : <code>int ERKStepSetAdaptivityFn(void*, ARKAdaptFn, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:72</i>
	 */
	int ERKStepSetAdaptivityFn(Pointer arkode_mem, ARKAdaptFn hfun, Pointer h_data);
	/**
	 * Original signature : <code>int ERKStepSetMaxFirstGrowth(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:74</i>
	 */
	int ERKStepSetMaxFirstGrowth(Pointer arkode_mem, double etamx1);
	/**
	 * Original signature : <code>int ERKStepSetMaxEFailGrowth(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:76</i>
	 */
	int ERKStepSetMaxEFailGrowth(Pointer arkode_mem, double etamxf);
	/**
	 * Original signature : <code>int ERKStepSetSmallNumEFails(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:78</i>
	 */
	int ERKStepSetSmallNumEFails(Pointer arkode_mem, int small_nef);
	/**
	 * Original signature : <code>int ERKStepSetStabilityFn(void*, ARKExpStabFn, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:79</i>
	 */
	int ERKStepSetStabilityFn(Pointer arkode_mem, ARKExpStabFn EStab, Pointer estab_data);
	/**
	 * Original signature : <code>int ERKStepSetMaxErrTestFails(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:81</i>
	 */
	int ERKStepSetMaxErrTestFails(Pointer arkode_mem, int maxnef);
	/**
	 * Original signature : <code>int ERKStepSetConstraints(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:82</i><br>
	 * @deprecated use the safer methods {@link #ERKStepSetConstraints(Pointer, N_Vector)} and {@link #ERKStepSetConstraints(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int ERKStepSetConstraints(Pointer arkode_mem, Pointer constraints);
	/**
	 * Original signature : <code>int ERKStepSetConstraints(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:82</i>
	 */
	int ERKStepSetConstraints(Pointer arkode_mem, N_Vector constraints);
	/**
	 * Original signature : <code>int ERKStepSetMaxNumSteps(void*, long long)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:83</i>
	 */
	int ERKStepSetMaxNumSteps(Pointer arkode_mem, long mxsteps);
	/**
	 * Original signature : <code>int ERKStepSetMaxHnilWarns(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:84</i>
	 */
	int ERKStepSetMaxHnilWarns(Pointer arkode_mem, int mxhnil);
	/**
	 * Original signature : <code>int ERKStepSetInitStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:85</i>
	 */
	int ERKStepSetInitStep(Pointer arkode_mem, double hin);
	/**
	 * Original signature : <code>int ERKStepSetMinStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:86</i>
	 */
	int ERKStepSetMinStep(Pointer arkode_mem, double hmin);
	/**
	 * Original signature : <code>int ERKStepSetMaxStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:87</i>
	 */
	int ERKStepSetMaxStep(Pointer arkode_mem, double hmax);
	/**
	 * Original signature : <code>int ERKStepSetInterpolateStopTime(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:88</i>
	 */
	int ERKStepSetInterpolateStopTime(Pointer arkode_mem, int interp);
	/**
	 * Original signature : <code>int ERKStepSetStopTime(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:90</i>
	 */
	int ERKStepSetStopTime(Pointer arkode_mem, double tstop);
	/**
	 * Original signature : <code>int ERKStepClearStopTime(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:91</i>
	 */
	int ERKStepClearStopTime(Pointer arkode_mem);
	/**
	 * Original signature : <code>int ERKStepSetFixedStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:92</i>
	 */
	int ERKStepSetFixedStep(Pointer arkode_mem, double hfixed);
	/**
	 * Original signature : <code>int ERKStepSetMaxNumConstrFails(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:93</i>
	 */
	int ERKStepSetMaxNumConstrFails(Pointer arkode_mem, int maxfails);
	/**
	 * Original signature : <code>int ERKStepSetRootDirection(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:95</i><br>
	 * @deprecated use the safer methods {@link #ERKStepSetRootDirection(Pointer, IntBuffer)} and {@link #ERKStepSetRootDirection(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int ERKStepSetRootDirection(Pointer arkode_mem, IntByReference rootdir);
	/**
	 * Original signature : <code>int ERKStepSetRootDirection(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:95</i>
	 */
	int ERKStepSetRootDirection(Pointer arkode_mem, IntBuffer rootdir);
	/**
	 * Original signature : <code>int ERKStepSetNoInactiveRootWarn(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:96</i>
	 */
	int ERKStepSetNoInactiveRootWarn(Pointer arkode_mem);
	/**
	 * Original signature : <code>int ERKStepSetUserData(void*, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:98</i>
	 */
	int ERKStepSetUserData(Pointer arkode_mem, Pointer user_data);
	/**
	 * Original signature : <code>int ERKStepSetPostprocessStepFn(void*, ARKPostProcessFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:100</i>
	 */
	int ERKStepSetPostprocessStepFn(Pointer arkode_mem, ARKPostProcessFn ProcessStep);
	/**
	 * Original signature : <code>int ERKStepSetPostprocessStageFn(void*, ARKPostProcessFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:102</i>
	 */
	int ERKStepSetPostprocessStageFn(Pointer arkode_mem, ARKPostProcessFn ProcessStage);
	/**
	 * Integrate the ODE over an interval in t<br>
	 * Original signature : <code>int ERKStepEvolve(void*, sunrealtype, N_Vector, sunrealtype*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:106</i><br>
	 * @deprecated use the safer methods {@link #ERKStepEvolve(Pointer, double, N_Vector, DoubleBuffer, int)} and {@link #ERKStepEvolve(Pointer, double, Pointer, DoubleByReference, int)} instead
	 */
	@Deprecated 
	int ERKStepEvolve(Pointer arkode_mem, double tout, Pointer yout, DoubleByReference tret, int itask);
	/**
	 * Integrate the ODE over an interval in t<br>
	 * Original signature : <code>int ERKStepEvolve(void*, sunrealtype, N_Vector, sunrealtype*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:106</i>
	 */
	int ERKStepEvolve(Pointer arkode_mem, double tout, N_Vector yout, DoubleBuffer tret, int itask);
	/**
	 * Computes the kth derivative of the y function at time t<br>
	 * Original signature : <code>int ERKStepGetDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:110</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetDky(Pointer, double, int, N_Vector)} and {@link #ERKStepGetDky(Pointer, double, int, Pointer)} instead
	 */
	@Deprecated 
	int ERKStepGetDky(Pointer arkode_mem, double t, int k, Pointer dky);
	/**
	 * Computes the kth derivative of the y function at time t<br>
	 * Original signature : <code>int ERKStepGetDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:110</i>
	 */
	int ERKStepGetDky(Pointer arkode_mem, double t, int k, N_Vector dky);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int ERKStepGetNumExpSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:114</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetNumExpSteps(Pointer, LongBuffer)} and {@link #ERKStepGetNumExpSteps(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetNumExpSteps(Pointer arkode_mem, LongByReference expsteps);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int ERKStepGetNumExpSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:114</i>
	 */
	int ERKStepGetNumExpSteps(Pointer arkode_mem, LongBuffer expsteps);
	/**
	 * Original signature : <code>int ERKStepGetNumAccSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:115</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetNumAccSteps(Pointer, LongBuffer)} and {@link #ERKStepGetNumAccSteps(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetNumAccSteps(Pointer arkode_mem, LongByReference accsteps);
	/**
	 * Original signature : <code>int ERKStepGetNumAccSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:115</i>
	 */
	int ERKStepGetNumAccSteps(Pointer arkode_mem, LongBuffer accsteps);
	/**
	 * Original signature : <code>int ERKStepGetNumStepAttempts(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:116</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetNumStepAttempts(Pointer, LongBuffer)} and {@link #ERKStepGetNumStepAttempts(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetNumStepAttempts(Pointer arkode_mem, LongByReference step_attempts);
	/**
	 * Original signature : <code>int ERKStepGetNumStepAttempts(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:116</i>
	 */
	int ERKStepGetNumStepAttempts(Pointer arkode_mem, LongBuffer step_attempts);
	/**
	 * Original signature : <code>int ERKStepGetNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:118</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetNumRhsEvals(Pointer, LongBuffer)} and {@link #ERKStepGetNumRhsEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetNumRhsEvals(Pointer arkode_mem, LongByReference nfevals);
	/**
	 * Original signature : <code>int ERKStepGetNumRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:118</i>
	 */
	int ERKStepGetNumRhsEvals(Pointer arkode_mem, LongBuffer nfevals);
	/**
	 * Original signature : <code>int ERKStepGetNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:119</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetNumErrTestFails(Pointer, LongBuffer)} and {@link #ERKStepGetNumErrTestFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetNumErrTestFails(Pointer arkode_mem, LongByReference netfails);
	/**
	 * Original signature : <code>int ERKStepGetNumErrTestFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:119</i>
	 */
	int ERKStepGetNumErrTestFails(Pointer arkode_mem, LongBuffer netfails);
	/**
	 * Original signature : <code>int ERKStepGetCurrentButcherTable(void*, ARKodeButcherTable*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:121</i><br>
	 * @deprecated use the safer method {@link #ERKStepGetCurrentButcherTable(Pointer, ARKodeButcherTableMem.ByReference[])} instead
	 */
	@Deprecated 
	int ERKStepGetCurrentButcherTable(Pointer arkode_mem, PointerByReference B);
	/**
	 * Original signature : <code>int ERKStepGetCurrentButcherTable(void*, ARKodeButcherTable*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:121</i>
	 */
	int ERKStepGetCurrentButcherTable(Pointer arkode_mem, ARKodeButcherTableMem.ByReference B[]);
	/**
	 * Original signature : <code>int ERKStepGetEstLocalErrors(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:123</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetEstLocalErrors(Pointer, N_Vector)} and {@link #ERKStepGetEstLocalErrors(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int ERKStepGetEstLocalErrors(Pointer arkode_mem, Pointer ele);
	/**
	 * Original signature : <code>int ERKStepGetEstLocalErrors(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:123</i>
	 */
	int ERKStepGetEstLocalErrors(Pointer arkode_mem, N_Vector ele);
	/**
	 * Original signature : <code>int ERKStepGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:124</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #ERKStepGetWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetWorkSpace(Pointer arkode_mem, LongByReference lenrw, LongByReference leniw);
	/**
	 * Original signature : <code>int ERKStepGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:124</i>
	 */
	int ERKStepGetWorkSpace(Pointer arkode_mem, LongBuffer lenrw, LongBuffer leniw);
	/**
	 * Original signature : <code>int ERKStepGetNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:126</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetNumSteps(Pointer, LongBuffer)} and {@link #ERKStepGetNumSteps(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetNumSteps(Pointer arkode_mem, LongByReference nsteps);
	/**
	 * Original signature : <code>int ERKStepGetNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:126</i>
	 */
	int ERKStepGetNumSteps(Pointer arkode_mem, LongBuffer nsteps);
	/**
	 * Original signature : <code>int ERKStepGetActualInitStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:127</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetActualInitStep(Pointer, DoubleBuffer)} and {@link #ERKStepGetActualInitStep(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetActualInitStep(Pointer arkode_mem, DoubleByReference hinused);
	/**
	 * Original signature : <code>int ERKStepGetActualInitStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:127</i>
	 */
	int ERKStepGetActualInitStep(Pointer arkode_mem, DoubleBuffer hinused);
	/**
	 * Original signature : <code>int ERKStepGetLastStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:129</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetLastStep(Pointer, DoubleBuffer)} and {@link #ERKStepGetLastStep(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetLastStep(Pointer arkode_mem, DoubleByReference hlast);
	/**
	 * Original signature : <code>int ERKStepGetLastStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:129</i>
	 */
	int ERKStepGetLastStep(Pointer arkode_mem, DoubleBuffer hlast);
	/**
	 * Original signature : <code>int ERKStepGetCurrentStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:130</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetCurrentStep(Pointer, DoubleBuffer)} and {@link #ERKStepGetCurrentStep(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetCurrentStep(Pointer arkode_mem, DoubleByReference hcur);
	/**
	 * Original signature : <code>int ERKStepGetCurrentStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:130</i>
	 */
	int ERKStepGetCurrentStep(Pointer arkode_mem, DoubleBuffer hcur);
	/**
	 * Original signature : <code>int ERKStepGetCurrentTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:131</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetCurrentTime(Pointer, DoubleBuffer)} and {@link #ERKStepGetCurrentTime(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetCurrentTime(Pointer arkode_mem, DoubleByReference tcur);
	/**
	 * Original signature : <code>int ERKStepGetCurrentTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:131</i>
	 */
	int ERKStepGetCurrentTime(Pointer arkode_mem, DoubleBuffer tcur);
	/**
	 * Original signature : <code>int ERKStepGetTolScaleFactor(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:132</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetTolScaleFactor(Pointer, DoubleBuffer)} and {@link #ERKStepGetTolScaleFactor(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetTolScaleFactor(Pointer arkode_mem, DoubleByReference tolsfac);
	/**
	 * Original signature : <code>int ERKStepGetTolScaleFactor(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:132</i>
	 */
	int ERKStepGetTolScaleFactor(Pointer arkode_mem, DoubleBuffer tolsfac);
	/**
	 * Original signature : <code>int ERKStepGetErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:134</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetErrWeights(Pointer, N_Vector)} and {@link #ERKStepGetErrWeights(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int ERKStepGetErrWeights(Pointer arkode_mem, Pointer eweight);
	/**
	 * Original signature : <code>int ERKStepGetErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:134</i>
	 */
	int ERKStepGetErrWeights(Pointer arkode_mem, N_Vector eweight);
	/**
	 * Original signature : <code>int ERKStepGetNumGEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:135</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetNumGEvals(Pointer, LongBuffer)} and {@link #ERKStepGetNumGEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetNumGEvals(Pointer arkode_mem, LongByReference ngevals);
	/**
	 * Original signature : <code>int ERKStepGetNumGEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:135</i>
	 */
	int ERKStepGetNumGEvals(Pointer arkode_mem, LongBuffer ngevals);
	/**
	 * Original signature : <code>int ERKStepGetRootInfo(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:136</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetRootInfo(Pointer, IntBuffer)} and {@link #ERKStepGetRootInfo(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetRootInfo(Pointer arkode_mem, IntByReference rootsfound);
	/**
	 * Original signature : <code>int ERKStepGetRootInfo(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:136</i>
	 */
	int ERKStepGetRootInfo(Pointer arkode_mem, IntBuffer rootsfound);
	/**
	 * Original signature : <code>int ERKStepGetNumConstrFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:137</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetNumConstrFails(Pointer, LongBuffer)} and {@link #ERKStepGetNumConstrFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetNumConstrFails(Pointer arkode_mem, LongByReference nconstrfails);
	/**
	 * Original signature : <code>int ERKStepGetNumConstrFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:137</i>
	 */
	int ERKStepGetNumConstrFails(Pointer arkode_mem, LongBuffer nconstrfails);
	/**
	 * Original signature : <code>int ERKStepGetUserData(void*, void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:139</i>
	 */
	int ERKStepGetUserData(Pointer arkode_mem, PointerByReference user_data);
	/**
	 * Original signature : <code>int ERKStepPrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:140</i><br>
	 * @deprecated use the safer method {@link #ERKStepPrintAllStats(Pointer, PointerByReference, int)} instead
	 */
	@Deprecated 
	int ERKStepPrintAllStats(Pointer arkode_mem, Pointer outfile, int fmt);
	/**
	 * Original signature : <code>int ERKStepPrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:140</i>
	 */
	int ERKStepPrintAllStats(Pointer arkode_mem, PointerByReference outfile, int fmt);
	/**
	 * Original signature : <code>char* ERKStepGetReturnFlagName(long long)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:142</i>
	 */
	Pointer ERKStepGetReturnFlagName(long flag);
	/**
	 * Original signature : <code>int ERKStepWriteParameters(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:144</i><br>
	 * @deprecated use the safer method {@link #ERKStepWriteParameters(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int ERKStepWriteParameters(Pointer arkode_mem, Pointer fp);
	/**
	 * Original signature : <code>int ERKStepWriteParameters(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:144</i>
	 */
	int ERKStepWriteParameters(Pointer arkode_mem, PointerByReference fp);
	/**
	 * Original signature : <code>int ERKStepWriteButcher(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:146</i><br>
	 * @deprecated use the safer method {@link #ERKStepWriteButcher(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int ERKStepWriteButcher(Pointer arkode_mem, Pointer fp);
	/**
	 * Original signature : <code>int ERKStepWriteButcher(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:146</i>
	 */
	int ERKStepWriteButcher(Pointer arkode_mem, PointerByReference fp);
	/**
	 * Grouped optional output functions<br>
	 * Original signature : <code>int ERKStepGetTimestepperStats(void*, long long*, long long*, long long*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:149</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetTimestepperStats(Pointer, LongBuffer, LongBuffer, LongBuffer, LongBuffer, LongBuffer)} and {@link #ERKStepGetTimestepperStats(Pointer, LongByReference, LongByReference, LongByReference, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetTimestepperStats(Pointer arkode_mem, LongByReference expsteps, LongByReference accsteps, LongByReference step_attempts, LongByReference nfevals, LongByReference netfails);
	/**
	 * Grouped optional output functions<br>
	 * Original signature : <code>int ERKStepGetTimestepperStats(void*, long long*, long long*, long long*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:149</i>
	 */
	int ERKStepGetTimestepperStats(Pointer arkode_mem, LongBuffer expsteps, LongBuffer accsteps, LongBuffer step_attempts, LongBuffer nfevals, LongBuffer netfails);
	/**
	 * Original signature : <code>int ERKStepGetStepStats(void*, long long*, sunrealtype*, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:152</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetStepStats(Pointer, LongBuffer, DoubleBuffer, DoubleBuffer, DoubleBuffer, DoubleBuffer)} and {@link #ERKStepGetStepStats(Pointer, LongByReference, DoubleByReference, DoubleByReference, DoubleByReference, DoubleByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetStepStats(Pointer arkode_mem, LongByReference nsteps, DoubleByReference hinused, DoubleByReference hlast, DoubleByReference hcur, DoubleByReference tcur);
	/**
	 * Original signature : <code>int ERKStepGetStepStats(void*, long long*, sunrealtype*, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:152</i>
	 */
	int ERKStepGetStepStats(Pointer arkode_mem, LongBuffer nsteps, DoubleBuffer hinused, DoubleBuffer hlast, DoubleBuffer hcur, DoubleBuffer tcur);
	/**
	 * Free function<br>
	 * Original signature : <code>void ERKStepFree(void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:157</i>
	 */
	void ERKStepFree(PointerByReference arkode_mem);
	/**
	 * Output the ERKStep memory structure (useful when debugging)<br>
	 * Original signature : <code>void ERKStepPrintMem(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:160</i><br>
	 * @deprecated use the safer method {@link #ERKStepPrintMem(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	void ERKStepPrintMem(Pointer arkode_mem, Pointer outfile);
	/**
	 * Output the ERKStep memory structure (useful when debugging)<br>
	 * Original signature : <code>void ERKStepPrintMem(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:160</i>
	 */
	void ERKStepPrintMem(Pointer arkode_mem, PointerByReference outfile);
	/**
	 * Relaxation functions<br>
	 * Original signature : <code>int ERKStepSetRelaxFn(void*, ARKRelaxFn, ARKRelaxJacFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:163</i>
	 */
	int ERKStepSetRelaxFn(Pointer arkode_mem, ARKRelaxFn rfn, ARKRelaxJacFn rjac);
	/**
	 * Original signature : <code>int ERKStepSetRelaxEtaFail(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:165</i>
	 */
	int ERKStepSetRelaxEtaFail(Pointer arkode_mem, double eta_rf);
	/**
	 * Original signature : <code>int ERKStepSetRelaxLowerBound(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:166</i>
	 */
	int ERKStepSetRelaxLowerBound(Pointer arkode_mem, double lower);
	/**
	 * Original signature : <code>int ERKStepSetRelaxMaxFails(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:168</i>
	 */
	int ERKStepSetRelaxMaxFails(Pointer arkode_mem, int max_fails);
	/**
	 * Original signature : <code>int ERKStepSetRelaxMaxIters(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:169</i>
	 */
	int ERKStepSetRelaxMaxIters(Pointer arkode_mem, int max_iters);
	/**
	 * Original signature : <code>int ERKStepSetRelaxSolver(void*, ARKRelaxSolver)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:170</i>
	 */
	int ERKStepSetRelaxSolver(Pointer arkode_mem, int solver);
	/**
	 * Original signature : <code>int ERKStepSetRelaxResTol(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:172</i>
	 */
	int ERKStepSetRelaxResTol(Pointer arkode_mem, double res_tol);
	/**
	 * Original signature : <code>int ERKStepSetRelaxTol(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:173</i>
	 */
	int ERKStepSetRelaxTol(Pointer arkode_mem, double rel_tol, double abs_tol);
	/**
	 * Original signature : <code>int ERKStepSetRelaxUpperBound(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:175</i>
	 */
	int ERKStepSetRelaxUpperBound(Pointer arkode_mem, double upper);
	/**
	 * Original signature : <code>int ERKStepGetNumRelaxFnEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:177</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetNumRelaxFnEvals(Pointer, LongBuffer)} and {@link #ERKStepGetNumRelaxFnEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetNumRelaxFnEvals(Pointer arkode_mem, LongByReference r_evals);
	/**
	 * Original signature : <code>int ERKStepGetNumRelaxFnEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:177</i>
	 */
	int ERKStepGetNumRelaxFnEvals(Pointer arkode_mem, LongBuffer r_evals);
	/**
	 * Original signature : <code>int ERKStepGetNumRelaxJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:179</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetNumRelaxJacEvals(Pointer, LongBuffer)} and {@link #ERKStepGetNumRelaxJacEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetNumRelaxJacEvals(Pointer arkode_mem, LongByReference J_evals);
	/**
	 * Original signature : <code>int ERKStepGetNumRelaxJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:179</i>
	 */
	int ERKStepGetNumRelaxJacEvals(Pointer arkode_mem, LongBuffer J_evals);
	/**
	 * Original signature : <code>int ERKStepGetNumRelaxFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:181</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetNumRelaxFails(Pointer, LongBuffer)} and {@link #ERKStepGetNumRelaxFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetNumRelaxFails(Pointer arkode_mem, LongByReference relax_fails);
	/**
	 * Original signature : <code>int ERKStepGetNumRelaxFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:181</i>
	 */
	int ERKStepGetNumRelaxFails(Pointer arkode_mem, LongBuffer relax_fails);
	/**
	 * Original signature : <code>int ERKStepGetNumRelaxBoundFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:183</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetNumRelaxBoundFails(Pointer, LongBuffer)} and {@link #ERKStepGetNumRelaxBoundFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetNumRelaxBoundFails(Pointer arkode_mem, LongByReference fails);
	/**
	 * Original signature : <code>int ERKStepGetNumRelaxBoundFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:183</i>
	 */
	int ERKStepGetNumRelaxBoundFails(Pointer arkode_mem, LongBuffer fails);
	/**
	 * Original signature : <code>int ERKStepGetNumRelaxSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:185</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetNumRelaxSolveFails(Pointer, LongBuffer)} and {@link #ERKStepGetNumRelaxSolveFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetNumRelaxSolveFails(Pointer arkode_mem, LongByReference fails);
	/**
	 * Original signature : <code>int ERKStepGetNumRelaxSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:185</i>
	 */
	int ERKStepGetNumRelaxSolveFails(Pointer arkode_mem, LongBuffer fails);
	/**
	 * Original signature : <code>int ERKStepGetNumRelaxSolveIters(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:187</i><br>
	 * @deprecated use the safer methods {@link #ERKStepGetNumRelaxSolveIters(Pointer, LongBuffer)} and {@link #ERKStepGetNumRelaxSolveIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int ERKStepGetNumRelaxSolveIters(Pointer arkode_mem, LongByReference iters);
	/**
	 * Original signature : <code>int ERKStepGetNumRelaxSolveIters(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_erkstep.h:187</i>
	 */
	int ERKStepGetNumRelaxSolveIters(Pointer arkode_mem, LongBuffer iters);
	/**
	 * Accessor routine to load built-in MRI table<br>
	 * Original signature : <code>MRIStepCoupling MRIStepCoupling_LoadTable(ARKODE_MRITableID)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:75</i>
	 */
	MRIStepCouplingMem MRIStepCoupling_LoadTable(int method);
	/**
	 * Accessor routine to load built-in MRI table from string<br>
	 * Original signature : <code>MRIStepCoupling MRIStepCoupling_LoadTableByName(const char*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:78</i><br>
	 * @deprecated use the safer methods {@link #MRIStepCoupling_LoadTableByName(String)} and {@link #MRIStepCoupling_LoadTableByName(Pointer)} instead
	 */
	@Deprecated 
	MRIStepCouplingMem MRIStepCoupling_LoadTableByName(Pointer method);
	/**
	 * Accessor routine to load built-in MRI table from string<br>
	 * Original signature : <code>MRIStepCoupling MRIStepCoupling_LoadTableByName(const char*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:78</i>
	 */
	MRIStepCouplingMem MRIStepCoupling_LoadTableByName(String method);
	/**
	 * Utility routines to allocate/free/output coupling table structures<br>
	 * Original signature : <code>MRIStepCoupling MRIStepCoupling_Alloc(int, int, MRISTEP_METHOD_TYPE)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:81</i>
	 */
	MRIStepCouplingMem MRIStepCoupling_Alloc(int nmat, int stages, int type);
	/**
	 * Original signature : <code>MRIStepCoupling MRIStepCoupling_Create(int, int, int, int, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:83</i><br>
	 * @deprecated use the safer methods {@link #MRIStepCoupling_Create(int, int, int, int, DoubleBuffer, DoubleBuffer, DoubleBuffer)} and {@link #MRIStepCoupling_Create(int, int, int, int, DoubleByReference, DoubleByReference, DoubleByReference)} instead
	 */
	@Deprecated 
	MRIStepCouplingMem MRIStepCoupling_Create(int nmat, int stages, int q, int p, DoubleByReference W, DoubleByReference G, DoubleByReference c);
	/**
	 * Original signature : <code>MRIStepCoupling MRIStepCoupling_Create(int, int, int, int, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:83</i>
	 */
	MRIStepCouplingMem MRIStepCoupling_Create(int nmat, int stages, int q, int p, DoubleBuffer W, DoubleBuffer G, DoubleBuffer c);
	/**
	 * Original signature : <code>MRIStepCoupling MRIStepCoupling_MIStoMRI(ARKodeButcherTable, int, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:88</i>
	 */
	MRIStepCouplingMem MRIStepCoupling_MIStoMRI(ARKodeButcherTableMem B, int q, int p);
	/**
	 * Original signature : <code>MRIStepCoupling MRIStepCoupling_Copy(MRIStepCoupling)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:90</i>
	 */
	MRIStepCouplingMem MRIStepCoupling_Copy(MRIStepCouplingMem MRIC);
	/**
	 * Original signature : <code>void MRIStepCoupling_Space(MRIStepCoupling, sunindextype*, sunindextype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:91</i><br>
	 * @deprecated use the safer methods {@link #MRIStepCoupling_Space(MRIStepCouplingMem, LongBuffer, LongBuffer)} and {@link #MRIStepCoupling_Space(MRIStepCouplingMem, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	void MRIStepCoupling_Space(MRIStepCouplingMem MRIC, LongByReference liw, LongByReference lrw);
	/**
	 * Original signature : <code>void MRIStepCoupling_Space(MRIStepCoupling, sunindextype*, sunindextype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:91</i>
	 */
	void MRIStepCoupling_Space(MRIStepCouplingMem MRIC, LongBuffer liw, LongBuffer lrw);
	/**
	 * Original signature : <code>void MRIStepCoupling_Free(MRIStepCoupling)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:93</i>
	 */
	void MRIStepCoupling_Free(MRIStepCouplingMem MRIC);
	/**
	 * Original signature : <code>void MRIStepCoupling_Write(MRIStepCoupling, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:94</i><br>
	 * @deprecated use the safer method {@link #MRIStepCoupling_Write(MRIStepCouplingMem, PointerByReference)} instead
	 */
	@Deprecated 
	void MRIStepCoupling_Write(MRIStepCouplingMem MRIC, Pointer outfile);
	/**
	 * Original signature : <code>void MRIStepCoupling_Write(MRIStepCoupling, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:94</i>
	 */
	void MRIStepCoupling_Write(MRIStepCouplingMem MRIC, PointerByReference outfile);
	/**
	 * Create, Resize, and Reinitialization functions<br>
	 * Original signature : <code>void* MRIStepCreate(ARKRhsFn, ARKRhsFn, sunrealtype, N_Vector, MRIStepInnerStepper, SUNContext)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:110</i><br>
	 * @deprecated use the safer methods {@link #MRIStepCreate(ARKRhsFn, ARKRhsFn, double, N_Vector, MRIStepInnerStepper, SUNContext)} and {@link #MRIStepCreate(ARKRhsFn, ARKRhsFn, double, Pointer, Pointer, Pointer)} instead
	 */
	@Deprecated 
	Pointer MRIStepCreate(ARKRhsFn fse, ARKRhsFn fsi, double t0, Pointer y0, Pointer stepper, Pointer sunctx);
	/**
	 * Create, Resize, and Reinitialization functions<br>
	 * Original signature : <code>void* MRIStepCreate(ARKRhsFn, ARKRhsFn, sunrealtype, N_Vector, MRIStepInnerStepper, SUNContext)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:110</i>
	 */
	Pointer MRIStepCreate(ARKRhsFn fse, ARKRhsFn fsi, double t0, N_Vector y0, MRIStepInnerStepper stepper, SUNContext sunctx);
	/**
	 * Original signature : <code>int MRIStepResize(void*, N_Vector, sunrealtype, ARKVecResizeFn, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:114</i><br>
	 * @deprecated use the safer methods {@link #MRIStepResize(Pointer, N_Vector, double, ARKVecResizeFn, Pointer)} and {@link #MRIStepResize(Pointer, Pointer, double, ARKVecResizeFn, Pointer)} instead
	 */
	@Deprecated 
	int MRIStepResize(Pointer arkode_mem, Pointer ynew, double t0, ARKVecResizeFn resize, Pointer resize_data);
	/**
	 * Original signature : <code>int MRIStepResize(void*, N_Vector, sunrealtype, ARKVecResizeFn, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:114</i>
	 */
	int MRIStepResize(Pointer arkode_mem, N_Vector ynew, double t0, ARKVecResizeFn resize, Pointer resize_data);
	/**
	 * Original signature : <code>int MRIStepReInit(void*, ARKRhsFn, ARKRhsFn, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:117</i><br>
	 * @deprecated use the safer methods {@link #MRIStepReInit(Pointer, ARKRhsFn, ARKRhsFn, double, N_Vector)} and {@link #MRIStepReInit(Pointer, ARKRhsFn, ARKRhsFn, double, Pointer)} instead
	 */
	@Deprecated 
	int MRIStepReInit(Pointer arkode_mem, ARKRhsFn fse, ARKRhsFn fsi, double t0, Pointer y0);
	/**
	 * Original signature : <code>int MRIStepReInit(void*, ARKRhsFn, ARKRhsFn, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:117</i>
	 */
	int MRIStepReInit(Pointer arkode_mem, ARKRhsFn fse, ARKRhsFn fsi, double t0, N_Vector y0);
	/**
	 * Original signature : <code>int MRIStepReset(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:120</i><br>
	 * @deprecated use the safer methods {@link #MRIStepReset(Pointer, double, N_Vector)} and {@link #MRIStepReset(Pointer, double, Pointer)} instead
	 */
	@Deprecated 
	int MRIStepReset(Pointer arkode_mem, double tR, Pointer yR);
	/**
	 * Original signature : <code>int MRIStepReset(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:120</i>
	 */
	int MRIStepReset(Pointer arkode_mem, double tR, N_Vector yR);
	/**
	 * Tolerance input functions<br>
	 * Original signature : <code>int MRIStepSStolerances(void*, sunrealtype, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:123</i>
	 */
	int MRIStepSStolerances(Pointer arkode_mem, double reltol, double abstol);
	/**
	 * Original signature : <code>int MRIStepSVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:125</i><br>
	 * @deprecated use the safer methods {@link #MRIStepSVtolerances(Pointer, double, N_Vector)} and {@link #MRIStepSVtolerances(Pointer, double, Pointer)} instead
	 */
	@Deprecated 
	int MRIStepSVtolerances(Pointer arkode_mem, double reltol, Pointer abstol);
	/**
	 * Original signature : <code>int MRIStepSVtolerances(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:125</i>
	 */
	int MRIStepSVtolerances(Pointer arkode_mem, double reltol, N_Vector abstol);
	/**
	 * Original signature : <code>int MRIStepWFtolerances(void*, ARKEwtFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:127</i>
	 */
	int MRIStepWFtolerances(Pointer arkode_mem, ARKEwtFn efun);
	/**
	 * Linear solver set function<br>
	 * Original signature : <code>int MRIStepSetLinearSolver(void*, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:130</i><br>
	 * @deprecated use the safer methods {@link #MRIStepSetLinearSolver(Pointer, SUNLinearSolver, SUNMatrix)} and {@link #MRIStepSetLinearSolver(Pointer, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int MRIStepSetLinearSolver(Pointer arkode_mem, Pointer LS, Pointer A);
	/**
	 * Linear solver set function<br>
	 * Original signature : <code>int MRIStepSetLinearSolver(void*, SUNLinearSolver, SUNMatrix)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:130</i>
	 */
	int MRIStepSetLinearSolver(Pointer arkode_mem, SUNLinearSolver LS, SUNMatrix A);
	/**
	 * Rootfinding initialization<br>
	 * Original signature : <code>int MRIStepRootInit(void*, int, ARKRootFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:134</i>
	 */
	int MRIStepRootInit(Pointer arkode_mem, int nrtfn, ARKRootFn g);
	/**
	 * Optional input functions -- must be called AFTER MRIStepCreate<br>
	 * Original signature : <code>int MRIStepSetDefaults(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:137</i>
	 */
	int MRIStepSetDefaults(Pointer arkode_mem);
	/**
	 * Original signature : <code>int MRIStepSetOrder(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:138</i>
	 */
	int MRIStepSetOrder(Pointer arkode_mem, int ord);
	/**
	 * Original signature : <code>int MRIStepSetInterpolantType(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:139</i>
	 */
	int MRIStepSetInterpolantType(Pointer arkode_mem, int itype);
	/**
	 * Original signature : <code>int MRIStepSetInterpolantDegree(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:140</i>
	 */
	int MRIStepSetInterpolantDegree(Pointer arkode_mem, int degree);
	/**
	 * Original signature : <code>int MRIStepSetDenseOrder(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:141</i>
	 */
	int MRIStepSetDenseOrder(Pointer arkode_mem, int dord);
	/**
	 * Original signature : <code>int MRIStepSetNonlinearSolver(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:142</i><br>
	 * @deprecated use the safer methods {@link #MRIStepSetNonlinearSolver(Pointer, SUNNonlinearSolver)} and {@link #MRIStepSetNonlinearSolver(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int MRIStepSetNonlinearSolver(Pointer arkode_mem, Pointer NLS);
	/**
	 * Original signature : <code>int MRIStepSetNonlinearSolver(void*, SUNNonlinearSolver)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:142</i>
	 */
	int MRIStepSetNonlinearSolver(Pointer arkode_mem, SUNNonlinearSolver NLS);
	/**
	 * Original signature : <code>int MRIStepSetNlsRhsFn(void*, ARKRhsFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:144</i>
	 */
	int MRIStepSetNlsRhsFn(Pointer arkode_mem, ARKRhsFn nls_fs);
	/**
	 * Original signature : <code>int MRIStepSetLinear(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:145</i>
	 */
	int MRIStepSetLinear(Pointer arkode_mem, int timedepend);
	/**
	 * Original signature : <code>int MRIStepSetNonlinear(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:146</i>
	 */
	int MRIStepSetNonlinear(Pointer arkode_mem);
	/**
	 * Original signature : <code>int MRIStepSetCoupling(void*, MRIStepCoupling)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:147</i>
	 */
	int MRIStepSetCoupling(Pointer arkode_mem, MRIStepCouplingMem MRIC);
	/**
	 * Original signature : <code>int MRIStepSetMaxNumSteps(void*, long long)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:148</i>
	 */
	int MRIStepSetMaxNumSteps(Pointer arkode_mem, long mxsteps);
	/**
	 * Original signature : <code>int MRIStepSetNonlinCRDown(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:149</i>
	 */
	int MRIStepSetNonlinCRDown(Pointer arkode_mem, double crdown);
	/**
	 * Original signature : <code>int MRIStepSetNonlinRDiv(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:150</i>
	 */
	int MRIStepSetNonlinRDiv(Pointer arkode_mem, double rdiv);
	/**
	 * Original signature : <code>int MRIStepSetDeltaGammaMax(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:151</i>
	 */
	int MRIStepSetDeltaGammaMax(Pointer arkode_mem, double dgmax);
	/**
	 * Original signature : <code>int MRIStepSetLSetupFrequency(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:152</i>
	 */
	int MRIStepSetLSetupFrequency(Pointer arkode_mem, int msbp);
	/**
	 * Original signature : <code>int MRIStepSetPredictorMethod(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:153</i>
	 */
	int MRIStepSetPredictorMethod(Pointer arkode_mem, int method);
	/**
	 * Original signature : <code>int MRIStepSetMaxNonlinIters(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:154</i>
	 */
	int MRIStepSetMaxNonlinIters(Pointer arkode_mem, int maxcor);
	/**
	 * Original signature : <code>int MRIStepSetNonlinConvCoef(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:155</i>
	 */
	int MRIStepSetNonlinConvCoef(Pointer arkode_mem, double nlscoef);
	/**
	 * Original signature : <code>int MRIStepSetMaxHnilWarns(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:157</i>
	 */
	int MRIStepSetMaxHnilWarns(Pointer arkode_mem, int mxhnil);
	/**
	 * Original signature : <code>int MRIStepSetStopTime(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:158</i>
	 */
	int MRIStepSetStopTime(Pointer arkode_mem, double tstop);
	/**
	 * Original signature : <code>int MRIStepSetInterpolateStopTime(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:159</i>
	 */
	int MRIStepSetInterpolateStopTime(Pointer arkode_mem, int interp);
	/**
	 * Original signature : <code>int MRIStepClearStopTime(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:161</i>
	 */
	int MRIStepClearStopTime(Pointer arkode_mem);
	/**
	 * Original signature : <code>int MRIStepSetFixedStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:162</i>
	 */
	int MRIStepSetFixedStep(Pointer arkode_mem, double hsfixed);
	/**
	 * Original signature : <code>int MRIStepSetRootDirection(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:163</i><br>
	 * @deprecated use the safer methods {@link #MRIStepSetRootDirection(Pointer, IntBuffer)} and {@link #MRIStepSetRootDirection(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int MRIStepSetRootDirection(Pointer arkode_mem, IntByReference rootdir);
	/**
	 * Original signature : <code>int MRIStepSetRootDirection(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:163</i>
	 */
	int MRIStepSetRootDirection(Pointer arkode_mem, IntBuffer rootdir);
	/**
	 * Original signature : <code>int MRIStepSetNoInactiveRootWarn(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:164</i>
	 */
	int MRIStepSetNoInactiveRootWarn(Pointer arkode_mem);
	/**
	 * Original signature : <code>int MRIStepSetUserData(void*, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:165</i>
	 */
	int MRIStepSetUserData(Pointer arkode_mem, Pointer user_data);
	/**
	 * Original signature : <code>int MRIStepSetPostprocessStepFn(void*, ARKPostProcessFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:166</i>
	 */
	int MRIStepSetPostprocessStepFn(Pointer arkode_mem, ARKPostProcessFn ProcessStep);
	/**
	 * Original signature : <code>int MRIStepSetPostprocessStageFn(void*, ARKPostProcessFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:168</i>
	 */
	int MRIStepSetPostprocessStageFn(Pointer arkode_mem, ARKPostProcessFn ProcessStage);
	/**
	 * Original signature : <code>int MRIStepSetPreInnerFn(void*, MRIStepPreInnerFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:170</i>
	 */
	int MRIStepSetPreInnerFn(Pointer arkode_mem, MRIStepPreInnerFn prefn);
	/**
	 * Original signature : <code>int MRIStepSetPostInnerFn(void*, MRIStepPostInnerFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:172</i>
	 */
	int MRIStepSetPostInnerFn(Pointer arkode_mem, MRIStepPostInnerFn postfn);
	/**
	 * Original signature : <code>int MRIStepSetStagePredictFn(void*, ARKStagePredictFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:174</i>
	 */
	int MRIStepSetStagePredictFn(Pointer arkode_mem, ARKStagePredictFn PredictStage);
	/**
	 * Original signature : <code>int MRIStepSetDeduceImplicitRhs(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:176</i>
	 */
	int MRIStepSetDeduceImplicitRhs(Pointer arkode_mem, int deduce);
	/**
	 * Linear solver interface optional input functions -- must be called<br>
	 * AFTER MRIStepSetLinearSolver<br>
	 * Original signature : <code>int MRIStepSetJacFn(void*, ARKLsJacFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:181</i>
	 */
	int MRIStepSetJacFn(Pointer arkode_mem, ARKLsJacFn jac);
	/**
	 * Original signature : <code>int MRIStepSetJacEvalFrequency(void*, long long)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:182</i>
	 */
	int MRIStepSetJacEvalFrequency(Pointer arkode_mem, long msbj);
	/**
	 * Original signature : <code>int MRIStepSetLinearSolutionScaling(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:183</i>
	 */
	int MRIStepSetLinearSolutionScaling(Pointer arkode_mem, int onoff);
	/**
	 * Original signature : <code>int MRIStepSetEpsLin(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:185</i>
	 */
	int MRIStepSetEpsLin(Pointer arkode_mem, double eplifac);
	/**
	 * Original signature : <code>int MRIStepSetLSNormFactor(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:186</i>
	 */
	int MRIStepSetLSNormFactor(Pointer arkode_mem, double nrmfac);
	/**
	 * Original signature : <code>int MRIStepSetPreconditioner(void*, ARKLsPrecSetupFn, ARKLsPrecSolveFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:187</i>
	 */
	int MRIStepSetPreconditioner(Pointer arkode_mem, ARKLsPrecSetupFn psetup, ARKLsPrecSolveFn psolve);
	/**
	 * Original signature : <code>int MRIStepSetJacTimes(void*, ARKLsJacTimesSetupFn, ARKLsJacTimesVecFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:190</i>
	 */
	int MRIStepSetJacTimes(Pointer arkode_mem, ARKLsJacTimesSetupFn jtsetup, ARKLsJacTimesVecFn jtimes);
	/**
	 * Original signature : <code>int MRIStepSetJacTimesRhsFn(void*, ARKRhsFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:193</i>
	 */
	int MRIStepSetJacTimesRhsFn(Pointer arkode_mem, ARKRhsFn jtimesRhsFn);
	/**
	 * Original signature : <code>int MRIStepSetLinSysFn(void*, ARKLsLinSysFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:195</i>
	 */
	int MRIStepSetLinSysFn(Pointer arkode_mem, ARKLsLinSysFn linsys);
	/**
	 * Integrate the ODE over an interval in t<br>
	 * Original signature : <code>int MRIStepEvolve(void*, sunrealtype, N_Vector, sunrealtype*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:198</i><br>
	 * @deprecated use the safer methods {@link #MRIStepEvolve(Pointer, double, N_Vector, DoubleBuffer, int)} and {@link #MRIStepEvolve(Pointer, double, Pointer, DoubleByReference, int)} instead
	 */
	@Deprecated 
	int MRIStepEvolve(Pointer arkode_mem, double tout, Pointer yout, DoubleByReference tret, int itask);
	/**
	 * Integrate the ODE over an interval in t<br>
	 * Original signature : <code>int MRIStepEvolve(void*, sunrealtype, N_Vector, sunrealtype*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:198</i>
	 */
	int MRIStepEvolve(Pointer arkode_mem, double tout, N_Vector yout, DoubleBuffer tret, int itask);
	/**
	 * Computes the kth derivative of the y function at time t<br>
	 * Original signature : <code>int MRIStepGetDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:202</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetDky(Pointer, double, int, N_Vector)} and {@link #MRIStepGetDky(Pointer, double, int, Pointer)} instead
	 */
	@Deprecated 
	int MRIStepGetDky(Pointer arkode_mem, double t, int k, Pointer dky);
	/**
	 * Computes the kth derivative of the y function at time t<br>
	 * Original signature : <code>int MRIStepGetDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:202</i>
	 */
	int MRIStepGetDky(Pointer arkode_mem, double t, int k, N_Vector dky);
	/**
	 * Utility function to update/compute y based on zcor<br>
	 * Original signature : <code>int MRIStepComputeState(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:206</i><br>
	 * @deprecated use the safer methods {@link #MRIStepComputeState(Pointer, N_Vector, N_Vector)} and {@link #MRIStepComputeState(Pointer, Pointer, Pointer)} instead
	 */
	@Deprecated 
	int MRIStepComputeState(Pointer arkode_mem, Pointer zcor, Pointer z);
	/**
	 * Utility function to update/compute y based on zcor<br>
	 * Original signature : <code>int MRIStepComputeState(void*, N_Vector, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:206</i>
	 */
	int MRIStepComputeState(Pointer arkode_mem, N_Vector zcor, N_Vector z);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int MRIStepGetNumRhsEvals(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:210</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNumRhsEvals(Pointer, LongBuffer, LongBuffer)} and {@link #MRIStepGetNumRhsEvals(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNumRhsEvals(Pointer arkode_mem, LongByReference nfse_evals, LongByReference nfsi_evals);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>int MRIStepGetNumRhsEvals(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:210</i>
	 */
	int MRIStepGetNumRhsEvals(Pointer arkode_mem, LongBuffer nfse_evals, LongBuffer nfsi_evals);
	/**
	 * Original signature : <code>int MRIStepGetNumLinSolvSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:212</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNumLinSolvSetups(Pointer, LongBuffer)} and {@link #MRIStepGetNumLinSolvSetups(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNumLinSolvSetups(Pointer arkode_mem, LongByReference nlinsetups);
	/**
	 * Original signature : <code>int MRIStepGetNumLinSolvSetups(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:212</i>
	 */
	int MRIStepGetNumLinSolvSetups(Pointer arkode_mem, LongBuffer nlinsetups);
	/**
	 * Original signature : <code>int MRIStepGetCurrentCoupling(void*, MRIStepCoupling*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:214</i><br>
	 * @deprecated use the safer method {@link #MRIStepGetCurrentCoupling(Pointer, MRIStepCouplingMem.ByReference[])} instead
	 */
	@Deprecated 
	int MRIStepGetCurrentCoupling(Pointer arkode_mem, PointerByReference MRIC);
	/**
	 * Original signature : <code>int MRIStepGetCurrentCoupling(void*, MRIStepCoupling*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:214</i>
	 */
	int MRIStepGetCurrentCoupling(Pointer arkode_mem, MRIStepCouplingMem.ByReference MRIC[]);
	/**
	 * Original signature : <code>int MRIStepGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:216</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #MRIStepGetWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetWorkSpace(Pointer arkode_mem, LongByReference lenrw, LongByReference leniw);
	/**
	 * Original signature : <code>int MRIStepGetWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:216</i>
	 */
	int MRIStepGetWorkSpace(Pointer arkode_mem, LongBuffer lenrw, LongBuffer leniw);
	/**
	 * Original signature : <code>int MRIStepGetNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:218</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNumSteps(Pointer, LongBuffer)} and {@link #MRIStepGetNumSteps(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNumSteps(Pointer arkode_mem, LongByReference nssteps);
	/**
	 * Original signature : <code>int MRIStepGetNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:218</i>
	 */
	int MRIStepGetNumSteps(Pointer arkode_mem, LongBuffer nssteps);
	/**
	 * Original signature : <code>int MRIStepGetLastStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:219</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetLastStep(Pointer, DoubleBuffer)} and {@link #MRIStepGetLastStep(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetLastStep(Pointer arkode_mem, DoubleByReference hlast);
	/**
	 * Original signature : <code>int MRIStepGetLastStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:219</i>
	 */
	int MRIStepGetLastStep(Pointer arkode_mem, DoubleBuffer hlast);
	/**
	 * Original signature : <code>int MRIStepGetCurrentTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:220</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetCurrentTime(Pointer, DoubleBuffer)} and {@link #MRIStepGetCurrentTime(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetCurrentTime(Pointer arkode_mem, DoubleByReference tcur);
	/**
	 * Original signature : <code>int MRIStepGetCurrentTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:220</i>
	 */
	int MRIStepGetCurrentTime(Pointer arkode_mem, DoubleBuffer tcur);
	/**
	 * Original signature : <code>int MRIStepGetCurrentState(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:221</i><br>
	 * @deprecated use the safer method {@link #MRIStepGetCurrentState(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetCurrentState(Pointer arkode_mem, Pointer state);
	/**
	 * Original signature : <code>int MRIStepGetCurrentState(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:221</i>
	 */
	int MRIStepGetCurrentState(Pointer arkode_mem, PointerByReference state);
	/**
	 * Original signature : <code>int MRIStepGetCurrentGamma(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:222</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetCurrentGamma(Pointer, DoubleBuffer)} and {@link #MRIStepGetCurrentGamma(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetCurrentGamma(Pointer arkode_mem, DoubleByReference gamma);
	/**
	 * Original signature : <code>int MRIStepGetCurrentGamma(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:222</i>
	 */
	int MRIStepGetCurrentGamma(Pointer arkode_mem, DoubleBuffer gamma);
	/**
	 * Original signature : <code>int MRIStepGetTolScaleFactor(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:223</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetTolScaleFactor(Pointer, DoubleBuffer)} and {@link #MRIStepGetTolScaleFactor(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetTolScaleFactor(Pointer arkode_mem, DoubleByReference tolsfac);
	/**
	 * Original signature : <code>int MRIStepGetTolScaleFactor(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:223</i>
	 */
	int MRIStepGetTolScaleFactor(Pointer arkode_mem, DoubleBuffer tolsfac);
	/**
	 * Original signature : <code>int MRIStepGetErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:225</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetErrWeights(Pointer, N_Vector)} and {@link #MRIStepGetErrWeights(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int MRIStepGetErrWeights(Pointer arkode_mem, Pointer eweight);
	/**
	 * Original signature : <code>int MRIStepGetErrWeights(void*, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:225</i>
	 */
	int MRIStepGetErrWeights(Pointer arkode_mem, N_Vector eweight);
	/**
	 * Original signature : <code>int MRIStepGetNumGEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:226</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNumGEvals(Pointer, LongBuffer)} and {@link #MRIStepGetNumGEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNumGEvals(Pointer arkode_mem, LongByReference ngevals);
	/**
	 * Original signature : <code>int MRIStepGetNumGEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:226</i>
	 */
	int MRIStepGetNumGEvals(Pointer arkode_mem, LongBuffer ngevals);
	/**
	 * Original signature : <code>int MRIStepGetRootInfo(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:227</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetRootInfo(Pointer, IntBuffer)} and {@link #MRIStepGetRootInfo(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetRootInfo(Pointer arkode_mem, IntByReference rootsfound);
	/**
	 * Original signature : <code>int MRIStepGetRootInfo(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:227</i>
	 */
	int MRIStepGetRootInfo(Pointer arkode_mem, IntBuffer rootsfound);
	/**
	 * Original signature : <code>int MRIStepGetLastInnerStepFlag(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:228</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetLastInnerStepFlag(Pointer, IntBuffer)} and {@link #MRIStepGetLastInnerStepFlag(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetLastInnerStepFlag(Pointer arkode_mem, IntByReference flag);
	/**
	 * Original signature : <code>int MRIStepGetLastInnerStepFlag(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:228</i>
	 */
	int MRIStepGetLastInnerStepFlag(Pointer arkode_mem, IntBuffer flag);
	/**
	 * Original signature : <code>int MRIStepGetUserData(void*, void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:229</i>
	 */
	int MRIStepGetUserData(Pointer arkode_mem, PointerByReference user_data);
	/**
	 * Original signature : <code>int MRIStepPrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:230</i><br>
	 * @deprecated use the safer method {@link #MRIStepPrintAllStats(Pointer, PointerByReference, int)} instead
	 */
	@Deprecated 
	int MRIStepPrintAllStats(Pointer arkode_mem, Pointer outfile, int fmt);
	/**
	 * Original signature : <code>int MRIStepPrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:230</i>
	 */
	int MRIStepPrintAllStats(Pointer arkode_mem, PointerByReference outfile, int fmt);
	/**
	 * Original signature : <code>char* MRIStepGetReturnFlagName(long long)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:232</i>
	 */
	Pointer MRIStepGetReturnFlagName(long flag);
	/**
	 * Original signature : <code>int MRIStepWriteParameters(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:234</i><br>
	 * @deprecated use the safer method {@link #MRIStepWriteParameters(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int MRIStepWriteParameters(Pointer arkode_mem, Pointer fp);
	/**
	 * Original signature : <code>int MRIStepWriteParameters(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:234</i>
	 */
	int MRIStepWriteParameters(Pointer arkode_mem, PointerByReference fp);
	/**
	 * Original signature : <code>int MRIStepWriteCoupling(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:236</i><br>
	 * @deprecated use the safer method {@link #MRIStepWriteCoupling(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int MRIStepWriteCoupling(Pointer arkode_mem, Pointer fp);
	/**
	 * Original signature : <code>int MRIStepWriteCoupling(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:236</i>
	 */
	int MRIStepWriteCoupling(Pointer arkode_mem, PointerByReference fp);
	/**
	 * Nonlinear solver optional output functions<br>
	 * Original signature : <code>int MRIStepGetNonlinearSystemData(void*, sunrealtype*, N_Vector*, N_Vector*, N_Vector*, sunrealtype*, N_Vector*, void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:239</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNonlinearSystemData(Pointer, DoubleBuffer, PointerByReference, PointerByReference, PointerByReference, DoubleBuffer, PointerByReference, PointerByReference)} and {@link #MRIStepGetNonlinearSystemData(Pointer, DoubleByReference, PointerByReference, PointerByReference, PointerByReference, DoubleByReference, PointerByReference, PointerByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNonlinearSystemData(Pointer arkode_mem, DoubleByReference tcur, Pointer zpred, Pointer z, Pointer F, DoubleByReference gamma, Pointer sdata, PointerByReference user_data);
	/**
	 * Nonlinear solver optional output functions<br>
	 * Original signature : <code>int MRIStepGetNonlinearSystemData(void*, sunrealtype*, N_Vector*, N_Vector*, N_Vector*, sunrealtype*, N_Vector*, void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:239</i>
	 */
	int MRIStepGetNonlinearSystemData(Pointer arkode_mem, DoubleBuffer tcur, PointerByReference zpred, PointerByReference z, PointerByReference F, DoubleBuffer gamma, PointerByReference sdata, PointerByReference user_data);
	/**
	 * Nonlinear solver optional output functions<br>
	 * Original signature : <code>int MRIStepGetNonlinearSystemData(void*, sunrealtype*, N_Vector*, N_Vector*, N_Vector*, sunrealtype*, N_Vector*, void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:239</i>
	 */
	int MRIStepGetNonlinearSystemData(Pointer arkode_mem, DoubleByReference tcur, PointerByReference zpred, PointerByReference z, PointerByReference F, DoubleByReference gamma, PointerByReference sdata, PointerByReference user_data);
	/**
	 * Original signature : <code>int MRIStepGetNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:242</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNumNonlinSolvIters(Pointer, LongBuffer)} and {@link #MRIStepGetNumNonlinSolvIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNumNonlinSolvIters(Pointer arkode_mem, LongByReference nniters);
	/**
	 * Original signature : <code>int MRIStepGetNumNonlinSolvIters(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:242</i>
	 */
	int MRIStepGetNumNonlinSolvIters(Pointer arkode_mem, LongBuffer nniters);
	/**
	 * Original signature : <code>int MRIStepGetNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:244</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNumNonlinSolvConvFails(Pointer, LongBuffer)} and {@link #MRIStepGetNumNonlinSolvConvFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNumNonlinSolvConvFails(Pointer arkode_mem, LongByReference nnfails);
	/**
	 * Original signature : <code>int MRIStepGetNumNonlinSolvConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:244</i>
	 */
	int MRIStepGetNumNonlinSolvConvFails(Pointer arkode_mem, LongBuffer nnfails);
	/**
	 * Original signature : <code>int MRIStepGetNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:246</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNonlinSolvStats(Pointer, LongBuffer, LongBuffer)} and {@link #MRIStepGetNonlinSolvStats(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNonlinSolvStats(Pointer arkode_mem, LongByReference nniters, LongByReference nnfails);
	/**
	 * Original signature : <code>int MRIStepGetNonlinSolvStats(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:246</i>
	 */
	int MRIStepGetNonlinSolvStats(Pointer arkode_mem, LongBuffer nniters, LongBuffer nnfails);
	/**
	 * Original signature : <code>int MRIStepGetNumStepSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:248</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNumStepSolveFails(Pointer, LongBuffer)} and {@link #MRIStepGetNumStepSolveFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNumStepSolveFails(Pointer arkode_mem, LongByReference nncfails);
	/**
	 * Original signature : <code>int MRIStepGetNumStepSolveFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:248</i>
	 */
	int MRIStepGetNumStepSolveFails(Pointer arkode_mem, LongBuffer nncfails);
	/**
	 * Linear solver optional output functions<br>
	 * Original signature : <code>int MRIStepGetJac(void*, SUNMatrix*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:252</i><br>
	 * @deprecated use the safer method {@link #MRIStepGetJac(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetJac(Pointer arkode_mem, Pointer J);
	/**
	 * Linear solver optional output functions<br>
	 * Original signature : <code>int MRIStepGetJac(void*, SUNMatrix*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:252</i>
	 */
	int MRIStepGetJac(Pointer arkode_mem, PointerByReference J);
	/**
	 * Original signature : <code>int MRIStepGetJacTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:253</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetJacTime(Pointer, DoubleBuffer)} and {@link #MRIStepGetJacTime(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetJacTime(Pointer arkode_mem, DoubleByReference t_J);
	/**
	 * Original signature : <code>int MRIStepGetJacTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:253</i>
	 */
	int MRIStepGetJacTime(Pointer arkode_mem, DoubleBuffer t_J);
	/**
	 * Original signature : <code>int MRIStepGetJacNumSteps(void*, long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:254</i>
	 */
	int MRIStepGetJacNumSteps(Pointer arkode_mem, NativeLongByReference nst_J);
	/**
	 * Original signature : <code>int MRIStepGetLinWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:255</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetLinWorkSpace(Pointer, LongBuffer, LongBuffer)} and {@link #MRIStepGetLinWorkSpace(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetLinWorkSpace(Pointer arkode_mem, LongByReference lenrwLS, LongByReference leniwLS);
	/**
	 * Original signature : <code>int MRIStepGetLinWorkSpace(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:255</i>
	 */
	int MRIStepGetLinWorkSpace(Pointer arkode_mem, LongBuffer lenrwLS, LongBuffer leniwLS);
	/**
	 * Original signature : <code>int MRIStepGetNumJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:257</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNumJacEvals(Pointer, LongBuffer)} and {@link #MRIStepGetNumJacEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNumJacEvals(Pointer arkode_mem, LongByReference njevals);
	/**
	 * Original signature : <code>int MRIStepGetNumJacEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:257</i>
	 */
	int MRIStepGetNumJacEvals(Pointer arkode_mem, LongBuffer njevals);
	/**
	 * Original signature : <code>int MRIStepGetNumPrecEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:258</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNumPrecEvals(Pointer, LongBuffer)} and {@link #MRIStepGetNumPrecEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNumPrecEvals(Pointer arkode_mem, LongByReference npevals);
	/**
	 * Original signature : <code>int MRIStepGetNumPrecEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:258</i>
	 */
	int MRIStepGetNumPrecEvals(Pointer arkode_mem, LongBuffer npevals);
	/**
	 * Original signature : <code>int MRIStepGetNumPrecSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:259</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNumPrecSolves(Pointer, LongBuffer)} and {@link #MRIStepGetNumPrecSolves(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNumPrecSolves(Pointer arkode_mem, LongByReference npsolves);
	/**
	 * Original signature : <code>int MRIStepGetNumPrecSolves(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:259</i>
	 */
	int MRIStepGetNumPrecSolves(Pointer arkode_mem, LongBuffer npsolves);
	/**
	 * Original signature : <code>int MRIStepGetNumLinIters(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:260</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNumLinIters(Pointer, LongBuffer)} and {@link #MRIStepGetNumLinIters(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNumLinIters(Pointer arkode_mem, LongByReference nliters);
	/**
	 * Original signature : <code>int MRIStepGetNumLinIters(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:260</i>
	 */
	int MRIStepGetNumLinIters(Pointer arkode_mem, LongBuffer nliters);
	/**
	 * Original signature : <code>int MRIStepGetNumLinConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:261</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNumLinConvFails(Pointer, LongBuffer)} and {@link #MRIStepGetNumLinConvFails(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNumLinConvFails(Pointer arkode_mem, LongByReference nlcfails);
	/**
	 * Original signature : <code>int MRIStepGetNumLinConvFails(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:261</i>
	 */
	int MRIStepGetNumLinConvFails(Pointer arkode_mem, LongBuffer nlcfails);
	/**
	 * Original signature : <code>int MRIStepGetNumJTSetupEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:263</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNumJTSetupEvals(Pointer, LongBuffer)} and {@link #MRIStepGetNumJTSetupEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNumJTSetupEvals(Pointer arkode_mem, LongByReference njtsetups);
	/**
	 * Original signature : <code>int MRIStepGetNumJTSetupEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:263</i>
	 */
	int MRIStepGetNumJTSetupEvals(Pointer arkode_mem, LongBuffer njtsetups);
	/**
	 * Original signature : <code>int MRIStepGetNumJtimesEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:265</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNumJtimesEvals(Pointer, LongBuffer)} and {@link #MRIStepGetNumJtimesEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNumJtimesEvals(Pointer arkode_mem, LongByReference njvevals);
	/**
	 * Original signature : <code>int MRIStepGetNumJtimesEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:265</i>
	 */
	int MRIStepGetNumJtimesEvals(Pointer arkode_mem, LongBuffer njvevals);
	/**
	 * Original signature : <code>int MRIStepGetNumLinRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:267</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetNumLinRhsEvals(Pointer, LongBuffer)} and {@link #MRIStepGetNumLinRhsEvals(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetNumLinRhsEvals(Pointer arkode_mem, LongByReference nfevalsLS);
	/**
	 * Original signature : <code>int MRIStepGetNumLinRhsEvals(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:267</i>
	 */
	int MRIStepGetNumLinRhsEvals(Pointer arkode_mem, LongBuffer nfevalsLS);
	/**
	 * Original signature : <code>int MRIStepGetLastLinFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:269</i><br>
	 * @deprecated use the safer methods {@link #MRIStepGetLastLinFlag(Pointer, LongBuffer)} and {@link #MRIStepGetLastLinFlag(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int MRIStepGetLastLinFlag(Pointer arkode_mem, LongByReference flag);
	/**
	 * Original signature : <code>int MRIStepGetLastLinFlag(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:269</i>
	 */
	int MRIStepGetLastLinFlag(Pointer arkode_mem, LongBuffer flag);
	/**
	 * Original signature : <code>char* MRIStepGetLinReturnFlagName(long long)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:271</i>
	 */
	Pointer MRIStepGetLinReturnFlagName(long flag);
	/**
	 * Free function<br>
	 * Original signature : <code>void MRIStepFree(void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:274</i>
	 */
	void MRIStepFree(PointerByReference arkode_mem);
	/**
	 * Output the MRIStep memory structure (useful when debugging)<br>
	 * Original signature : <code>void MRIStepPrintMem(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:277</i><br>
	 * @deprecated use the safer method {@link #MRIStepPrintMem(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	void MRIStepPrintMem(Pointer arkode_mem, Pointer outfile);
	/**
	 * Output the MRIStep memory structure (useful when debugging)<br>
	 * Original signature : <code>void MRIStepPrintMem(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:277</i>
	 */
	void MRIStepPrintMem(Pointer arkode_mem, PointerByReference outfile);
	/**
	 * Custom inner stepper functions<br>
	 * Original signature : <code>int MRIStepInnerStepper_Create(SUNContext, MRIStepInnerStepper*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:280</i><br>
	 * @deprecated use the safer methods {@link #MRIStepInnerStepper_Create(SUNContext, PointerByReference)} and {@link #MRIStepInnerStepper_Create(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int MRIStepInnerStepper_Create(Pointer sunctx, Pointer stepper);
	/**
	 * Custom inner stepper functions<br>
	 * Original signature : <code>int MRIStepInnerStepper_Create(SUNContext, MRIStepInnerStepper*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:280</i>
	 */
	int MRIStepInnerStepper_Create(SUNContext sunctx, PointerByReference stepper);
	/**
	 * Custom inner stepper functions<br>
	 * Original signature : <code>int MRIStepInnerStepper_Create(SUNContext, MRIStepInnerStepper*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:280</i>
	 */
	int MRIStepInnerStepper_Create(Pointer sunctx, PointerByReference stepper);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_Free(MRIStepInnerStepper*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:283</i><br>
	 * @deprecated use the safer method {@link #MRIStepInnerStepper_Free(PointerByReference)} instead
	 */
	@Deprecated 
	int MRIStepInnerStepper_Free(Pointer stepper);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_Free(MRIStepInnerStepper*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:283</i>
	 */
	int MRIStepInnerStepper_Free(PointerByReference stepper);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_SetContent(MRIStepInnerStepper, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:285</i><br>
	 * @deprecated use the safer methods {@link #MRIStepInnerStepper_SetContent(MRIStepInnerStepper, Pointer)} and {@link #MRIStepInnerStepper_SetContent(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int MRIStepInnerStepper_SetContent(Pointer stepper, Pointer content);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_SetContent(MRIStepInnerStepper, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:285</i>
	 */
	int MRIStepInnerStepper_SetContent(MRIStepInnerStepper stepper, Pointer content);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_GetContent(MRIStepInnerStepper, void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:288</i><br>
	 * @deprecated use the safer methods {@link #MRIStepInnerStepper_GetContent(MRIStepInnerStepper, PointerByReference)} and {@link #MRIStepInnerStepper_GetContent(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int MRIStepInnerStepper_GetContent(Pointer stepper, PointerByReference content);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_GetContent(MRIStepInnerStepper, void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:288</i>
	 */
	int MRIStepInnerStepper_GetContent(MRIStepInnerStepper stepper, PointerByReference content);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_SetEvolveFn(MRIStepInnerStepper, MRIStepInnerEvolveFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:291</i><br>
	 * @deprecated use the safer methods {@link #MRIStepInnerStepper_SetEvolveFn(MRIStepInnerStepper, MRIStepInnerEvolveFn)} and {@link #MRIStepInnerStepper_SetEvolveFn(Pointer, MRIStepInnerEvolveFn)} instead
	 */
	@Deprecated 
	int MRIStepInnerStepper_SetEvolveFn(Pointer stepper, MRIStepInnerEvolveFn fn);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_SetEvolveFn(MRIStepInnerStepper, MRIStepInnerEvolveFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:291</i>
	 */
	int MRIStepInnerStepper_SetEvolveFn(MRIStepInnerStepper stepper, MRIStepInnerEvolveFn fn);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_SetFullRhsFn(MRIStepInnerStepper, MRIStepInnerFullRhsFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:294</i><br>
	 * @deprecated use the safer methods {@link #MRIStepInnerStepper_SetFullRhsFn(MRIStepInnerStepper, MRIStepInnerFullRhsFn)} and {@link #MRIStepInnerStepper_SetFullRhsFn(Pointer, MRIStepInnerFullRhsFn)} instead
	 */
	@Deprecated 
	int MRIStepInnerStepper_SetFullRhsFn(Pointer stepper, MRIStepInnerFullRhsFn fn);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_SetFullRhsFn(MRIStepInnerStepper, MRIStepInnerFullRhsFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:294</i>
	 */
	int MRIStepInnerStepper_SetFullRhsFn(MRIStepInnerStepper stepper, MRIStepInnerFullRhsFn fn);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_SetResetFn(MRIStepInnerStepper, MRIStepInnerResetFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:297</i><br>
	 * @deprecated use the safer methods {@link #MRIStepInnerStepper_SetResetFn(MRIStepInnerStepper, MRIStepInnerResetFn)} and {@link #MRIStepInnerStepper_SetResetFn(Pointer, MRIStepInnerResetFn)} instead
	 */
	@Deprecated 
	int MRIStepInnerStepper_SetResetFn(Pointer stepper, MRIStepInnerResetFn fn);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_SetResetFn(MRIStepInnerStepper, MRIStepInnerResetFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:297</i>
	 */
	int MRIStepInnerStepper_SetResetFn(MRIStepInnerStepper stepper, MRIStepInnerResetFn fn);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_AddForcing(MRIStepInnerStepper, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:300</i><br>
	 * @deprecated use the safer methods {@link #MRIStepInnerStepper_AddForcing(MRIStepInnerStepper, double, N_Vector)} and {@link #MRIStepInnerStepper_AddForcing(Pointer, double, Pointer)} instead
	 */
	@Deprecated 
	int MRIStepInnerStepper_AddForcing(Pointer stepper, double t, Pointer f);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_AddForcing(MRIStepInnerStepper, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:300</i>
	 */
	int MRIStepInnerStepper_AddForcing(MRIStepInnerStepper stepper, double t, N_Vector f);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_GetForcingData(MRIStepInnerStepper, sunrealtype*, sunrealtype*, N_Vector**, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:303</i><br>
	 * @deprecated use the safer methods {@link #MRIStepInnerStepper_GetForcingData(MRIStepInnerStepper, DoubleBuffer, DoubleBuffer, PointerByReference, IntBuffer)} and {@link #MRIStepInnerStepper_GetForcingData(Pointer, DoubleByReference, DoubleByReference, PointerByReference, IntByReference)} instead
	 */
	@Deprecated 
	int MRIStepInnerStepper_GetForcingData(Pointer stepper, DoubleByReference tshift, DoubleByReference tscale, PointerByReference forcing, IntByReference nforcing);
	/**
	 * Original signature : <code>int MRIStepInnerStepper_GetForcingData(MRIStepInnerStepper, sunrealtype*, sunrealtype*, N_Vector**, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_mristep.h:303</i>
	 */
	int MRIStepInnerStepper_GetForcingData(MRIStepInnerStepper stepper, DoubleBuffer tshift, DoubleBuffer tscale, PointerByReference forcing, IntBuffer nforcing);
	/**
	 * Utility routines to allocate/free/output SPRK structures<br>
	 * Original signature : <code>ARKodeSPRKTable ARKodeSPRKTable_Create(int, int, const sunrealtype*, const sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprk.h:40</i><br>
	 * @deprecated use the safer methods {@link #ARKodeSPRKTable_Create(int, int, DoubleBuffer, DoubleBuffer)} and {@link #ARKodeSPRKTable_Create(int, int, DoubleByReference, DoubleByReference)} instead
	 */
	@Deprecated 
	ARKodeSPRKTableMem ARKodeSPRKTable_Create(int s, int q, DoubleByReference a, DoubleByReference ahat);
	/**
	 * Utility routines to allocate/free/output SPRK structures<br>
	 * Original signature : <code>ARKodeSPRKTable ARKodeSPRKTable_Create(int, int, const sunrealtype*, const sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprk.h:40</i>
	 */
	ARKodeSPRKTableMem ARKodeSPRKTable_Create(int s, int q, DoubleBuffer a, DoubleBuffer ahat);
	/**
	 * Original signature : <code>ARKodeSPRKTable ARKodeSPRKTable_Alloc(int)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprk.h:44</i>
	 */
	ARKodeSPRKTableMem ARKodeSPRKTable_Alloc(int stages);
	/**
	 * Original signature : <code>ARKodeSPRKTable ARKodeSPRKTable_Load(ARKODE_SPRKMethodID)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprk.h:47</i>
	 */
	ARKodeSPRKTableMem ARKodeSPRKTable_Load(int id);
	/**
	 * Original signature : <code>ARKodeSPRKTable ARKodeSPRKTable_LoadByName(const char*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprk.h:50</i><br>
	 * @deprecated use the safer methods {@link #ARKodeSPRKTable_LoadByName(String)} and {@link #ARKodeSPRKTable_LoadByName(Pointer)} instead
	 */
	@Deprecated 
	ARKodeSPRKTableMem ARKodeSPRKTable_LoadByName(Pointer method);
	/**
	 * Original signature : <code>ARKodeSPRKTable ARKodeSPRKTable_LoadByName(const char*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprk.h:50</i>
	 */
	ARKodeSPRKTableMem ARKodeSPRKTable_LoadByName(String method);
	/**
	 * Original signature : <code>ARKodeSPRKTable ARKodeSPRKTable_Copy(ARKodeSPRKTable)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprk.h:53</i>
	 */
	ARKodeSPRKTableMem ARKodeSPRKTable_Copy(ARKodeSPRKTableMem that_sprk_storage);
	/**
	 * Original signature : <code>void ARKodeSPRKTable_Write(ARKodeSPRKTable, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprk.h:56</i><br>
	 * @deprecated use the safer method {@link #ARKodeSPRKTable_Write(ARKodeSPRKTableMem, PointerByReference)} instead
	 */
	@Deprecated 
	void ARKodeSPRKTable_Write(ARKodeSPRKTableMem sprk_table, Pointer outfile);
	/**
	 * Original signature : <code>void ARKodeSPRKTable_Write(ARKodeSPRKTable, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprk.h:56</i>
	 */
	void ARKodeSPRKTable_Write(ARKodeSPRKTableMem sprk_table, PointerByReference outfile);
	/**
	 * Original signature : <code>void ARKodeSPRKTable_Space(ARKodeSPRKTable, sunindextype*, sunindextype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprk.h:59</i><br>
	 * @deprecated use the safer methods {@link #ARKodeSPRKTable_Space(ARKodeSPRKTableMem, LongBuffer, LongBuffer)} and {@link #ARKodeSPRKTable_Space(ARKodeSPRKTableMem, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	void ARKodeSPRKTable_Space(ARKodeSPRKTableMem sprk_storage, LongByReference liw, LongByReference lrw);
	/**
	 * Original signature : <code>void ARKodeSPRKTable_Space(ARKodeSPRKTable, sunindextype*, sunindextype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprk.h:59</i>
	 */
	void ARKodeSPRKTable_Space(ARKodeSPRKTableMem sprk_storage, LongBuffer liw, LongBuffer lrw);
	/**
	 * Original signature : <code>void ARKodeSPRKTable_Free(ARKodeSPRKTable)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprk.h:62</i>
	 */
	void ARKodeSPRKTable_Free(ARKodeSPRKTableMem sprk_storage);
	/**
	 * Original signature : <code>int ARKodeSPRKTable_ToButcher(ARKodeSPRKTable, ARKodeButcherTable*, ARKodeButcherTable*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprk.h:65</i><br>
	 * @deprecated use the safer method {@link #ARKodeSPRKTable_ToButcher(ARKodeSPRKTableMem, ARKodeButcherTableMem.ByReference[], ARKodeButcherTableMem.ByReference[])} instead
	 */
	@Deprecated 
	int ARKodeSPRKTable_ToButcher(ARKodeSPRKTableMem sprk_storage, PointerByReference a_ptr, PointerByReference b_ptr);
	/**
	 * Original signature : <code>int ARKodeSPRKTable_ToButcher(ARKodeSPRKTable, ARKodeButcherTable*, ARKodeButcherTable*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprk.h:65</i>
	 */
	int ARKodeSPRKTable_ToButcher(ARKodeSPRKTableMem sprk_storage, ARKodeButcherTableMem.ByReference a_ptr[], ARKodeButcherTableMem.ByReference b_ptr[]);
	/**
	 * Create, Resize, and Reinitialization functions<br>
	 * Original signature : <code>void* SPRKStepCreate(ARKRhsFn, ARKRhsFn, sunrealtype, N_Vector, SUNContext)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:44</i><br>
	 * @deprecated use the safer methods {@link #SPRKStepCreate(ARKRhsFn, ARKRhsFn, double, N_Vector, SUNContext)} and {@link #SPRKStepCreate(ARKRhsFn, ARKRhsFn, double, Pointer, Pointer)} instead
	 */
	@Deprecated 
	Pointer SPRKStepCreate(ARKRhsFn f1, ARKRhsFn f2, double t0, Pointer y0, Pointer sunctx);
	/**
	 * Create, Resize, and Reinitialization functions<br>
	 * Original signature : <code>void* SPRKStepCreate(ARKRhsFn, ARKRhsFn, sunrealtype, N_Vector, SUNContext)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:44</i>
	 */
	Pointer SPRKStepCreate(ARKRhsFn f1, ARKRhsFn f2, double t0, N_Vector y0, SUNContext sunctx);
	/**
	 * Original signature : <code>int SPRKStepReInit(void*, ARKRhsFn, ARKRhsFn, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:47</i><br>
	 * @deprecated use the safer methods {@link #SPRKStepReInit(Pointer, ARKRhsFn, ARKRhsFn, double, N_Vector)} and {@link #SPRKStepReInit(Pointer, ARKRhsFn, ARKRhsFn, double, Pointer)} instead
	 */
	@Deprecated 
	int SPRKStepReInit(Pointer arkode_mem, ARKRhsFn f1, ARKRhsFn f2, double t0, Pointer y0);
	/**
	 * Original signature : <code>int SPRKStepReInit(void*, ARKRhsFn, ARKRhsFn, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:47</i>
	 */
	int SPRKStepReInit(Pointer arkode_mem, ARKRhsFn f1, ARKRhsFn f2, double t0, N_Vector y0);
	/**
	 * Original signature : <code>int SPRKStepReset(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:50</i><br>
	 * @deprecated use the safer methods {@link #SPRKStepReset(Pointer, double, N_Vector)} and {@link #SPRKStepReset(Pointer, double, Pointer)} instead
	 */
	@Deprecated 
	int SPRKStepReset(Pointer arkode_mem, double tR, Pointer yR);
	/**
	 * Original signature : <code>int SPRKStepReset(void*, sunrealtype, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:50</i>
	 */
	int SPRKStepReset(Pointer arkode_mem, double tR, N_Vector yR);
	/**
	 * Rootfinding initialization<br>
	 * Original signature : <code>int SPRKStepRootInit(void*, int, ARKRootFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:55</i>
	 */
	int SPRKStepRootInit(Pointer arkode_mem, int nrtfn, ARKRootFn g);
	/**
	 * Optional input functions -- must be called AFTER SPRKStepCreate<br>
	 * Original signature : <code>int SPRKStepSetDefaults(void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:58</i>
	 */
	int SPRKStepSetDefaults(Pointer arkode_mem);
	/**
	 * Original signature : <code>int SPRKStepSetUseCompensatedSums(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:59</i>
	 */
	int SPRKStepSetUseCompensatedSums(Pointer arkode_mem, int onoff);
	/**
	 * Original signature : <code>int SPRKStepSetMethod(void*, ARKodeSPRKTable)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:61</i>
	 */
	int SPRKStepSetMethod(Pointer arkode_mem, ARKodeSPRKTableMem sprk_storage);
	/**
	 * Original signature : <code>int SPRKStepSetMethodName(void*, const char*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:63</i><br>
	 * @deprecated use the safer methods {@link #SPRKStepSetMethodName(Pointer, String)} and {@link #SPRKStepSetMethodName(Pointer, Pointer)} instead
	 */
	@Deprecated 
	int SPRKStepSetMethodName(Pointer arkode_mem, Pointer method);
	/**
	 * Original signature : <code>int SPRKStepSetMethodName(void*, const char*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:63</i>
	 */
	int SPRKStepSetMethodName(Pointer arkode_mem, String method);
	/**
	 * Original signature : <code>int SPRKStepSetOrder(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:64</i>
	 */
	int SPRKStepSetOrder(Pointer arkode_mem, int maxord);
	/**
	 * Original signature : <code>int SPRKStepSetInterpolantType(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:65</i>
	 */
	int SPRKStepSetInterpolantType(Pointer arkode_mem, int itype);
	/**
	 * Original signature : <code>int SPRKStepSetInterpolantDegree(void*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:66</i>
	 */
	int SPRKStepSetInterpolantDegree(Pointer arkode_mem, int degree);
	/**
	 * Original signature : <code>int SPRKStepSetMaxNumSteps(void*, long long)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:67</i>
	 */
	int SPRKStepSetMaxNumSteps(Pointer arkode_mem, long mxsteps);
	/**
	 * Original signature : <code>int SPRKStepSetStopTime(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:68</i>
	 */
	int SPRKStepSetStopTime(Pointer arkode_mem, double tstop);
	/**
	 * Original signature : <code>int SPRKStepSetFixedStep(void*, sunrealtype)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:69</i>
	 */
	int SPRKStepSetFixedStep(Pointer arkode_mem, double hfixed);
	/**
	 * Original signature : <code>int SPRKStepSetUserData(void*, void*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:70</i>
	 */
	int SPRKStepSetUserData(Pointer arkode_mem, Pointer user_data);
	/**
	 * Original signature : <code>int SPRKStepSetPostprocessStepFn(void*, ARKPostProcessFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:72</i>
	 */
	int SPRKStepSetPostprocessStepFn(Pointer arkode_mem, ARKPostProcessFn ProcessStep);
	/**
	 * Original signature : <code>int SPRKStepSetPostprocessStageFn(void*, ARKPostProcessFn)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:74</i>
	 */
	int SPRKStepSetPostprocessStageFn(Pointer arkode_mem, ARKPostProcessFn ProcessStage);
	/**
	 * Integrate the ODE over an interval in t<br>
	 * Original signature : <code>int SPRKStepEvolve(void*, sunrealtype, N_Vector, sunrealtype*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:78</i><br>
	 * @deprecated use the safer methods {@link #SPRKStepEvolve(Pointer, double, N_Vector, DoubleBuffer, int)} and {@link #SPRKStepEvolve(Pointer, double, Pointer, DoubleByReference, int)} instead
	 */
	@Deprecated 
	int SPRKStepEvolve(Pointer arkode_mem, double tout, Pointer yout, DoubleByReference tret, int itask);
	/**
	 * Integrate the ODE over an interval in t<br>
	 * Original signature : <code>int SPRKStepEvolve(void*, sunrealtype, N_Vector, sunrealtype*, int)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:78</i>
	 */
	int SPRKStepEvolve(Pointer arkode_mem, double tout, N_Vector yout, DoubleBuffer tret, int itask);
	/**
	 * Computes the kth derivative of the y function at time t<br>
	 * Original signature : <code>int SPRKStepGetDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:82</i><br>
	 * @deprecated use the safer methods {@link #SPRKStepGetDky(Pointer, double, int, N_Vector)} and {@link #SPRKStepGetDky(Pointer, double, int, Pointer)} instead
	 */
	@Deprecated 
	int SPRKStepGetDky(Pointer arkode_mem, double t, int k, Pointer dky);
	/**
	 * Computes the kth derivative of the y function at time t<br>
	 * Original signature : <code>int SPRKStepGetDky(void*, sunrealtype, int, N_Vector)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:82</i>
	 */
	int SPRKStepGetDky(Pointer arkode_mem, double t, int k, N_Vector dky);
	/**
	 * Optional output functions<br>
	 * Original signature : <code>char* SPRKStepGetReturnFlagName(long long)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:86</i>
	 */
	Pointer SPRKStepGetReturnFlagName(long flag);
	/**
	 * Original signature : <code>int SPRKStepGetCurrentMethod(void*, ARKodeSPRKTable*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:87</i><br>
	 * @deprecated use the safer method {@link #SPRKStepGetCurrentMethod(Pointer, ARKodeSPRKTableMem.ByReference[])} instead
	 */
	@Deprecated 
	int SPRKStepGetCurrentMethod(Pointer arkode_mem, PointerByReference sprk_storage);
	/**
	 * Original signature : <code>int SPRKStepGetCurrentMethod(void*, ARKodeSPRKTable*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:87</i>
	 */
	int SPRKStepGetCurrentMethod(Pointer arkode_mem, ARKodeSPRKTableMem.ByReference sprk_storage[]);
	/**
	 * Original signature : <code>int SPRKStepGetCurrentState(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:89</i><br>
	 * @deprecated use the safer method {@link #SPRKStepGetCurrentState(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int SPRKStepGetCurrentState(Pointer arkode_mem, Pointer state);
	/**
	 * Original signature : <code>int SPRKStepGetCurrentState(void*, N_Vector*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:89</i>
	 */
	int SPRKStepGetCurrentState(Pointer arkode_mem, PointerByReference state);
	/**
	 * Original signature : <code>int SPRKStepGetCurrentStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:90</i><br>
	 * @deprecated use the safer methods {@link #SPRKStepGetCurrentStep(Pointer, DoubleBuffer)} and {@link #SPRKStepGetCurrentStep(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int SPRKStepGetCurrentStep(Pointer arkode_mem, DoubleByReference hcur);
	/**
	 * Original signature : <code>int SPRKStepGetCurrentStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:90</i>
	 */
	int SPRKStepGetCurrentStep(Pointer arkode_mem, DoubleBuffer hcur);
	/**
	 * Original signature : <code>int SPRKStepGetCurrentTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:91</i><br>
	 * @deprecated use the safer methods {@link #SPRKStepGetCurrentTime(Pointer, DoubleBuffer)} and {@link #SPRKStepGetCurrentTime(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int SPRKStepGetCurrentTime(Pointer arkode_mem, DoubleByReference tcur);
	/**
	 * Original signature : <code>int SPRKStepGetCurrentTime(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:91</i>
	 */
	int SPRKStepGetCurrentTime(Pointer arkode_mem, DoubleBuffer tcur);
	/**
	 * Original signature : <code>int SPRKStepGetLastStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:92</i><br>
	 * @deprecated use the safer methods {@link #SPRKStepGetLastStep(Pointer, DoubleBuffer)} and {@link #SPRKStepGetLastStep(Pointer, DoubleByReference)} instead
	 */
	@Deprecated 
	int SPRKStepGetLastStep(Pointer arkode_mem, DoubleByReference hlast);
	/**
	 * Original signature : <code>int SPRKStepGetLastStep(void*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:92</i>
	 */
	int SPRKStepGetLastStep(Pointer arkode_mem, DoubleBuffer hlast);
	/**
	 * Original signature : <code>int SPRKStepGetNumRhsEvals(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:93</i><br>
	 * @deprecated use the safer methods {@link #SPRKStepGetNumRhsEvals(Pointer, LongBuffer, LongBuffer)} and {@link #SPRKStepGetNumRhsEvals(Pointer, LongByReference, LongByReference)} instead
	 */
	@Deprecated 
	int SPRKStepGetNumRhsEvals(Pointer arkode_mem, LongByReference nf1, LongByReference nf2);
	/**
	 * Original signature : <code>int SPRKStepGetNumRhsEvals(void*, long long*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:93</i>
	 */
	int SPRKStepGetNumRhsEvals(Pointer arkode_mem, LongBuffer nf1, LongBuffer nf2);
	/**
	 * Original signature : <code>int SPRKStepGetNumStepAttempts(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:95</i><br>
	 * @deprecated use the safer methods {@link #SPRKStepGetNumStepAttempts(Pointer, LongBuffer)} and {@link #SPRKStepGetNumStepAttempts(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int SPRKStepGetNumStepAttempts(Pointer arkode_mem, LongByReference step_attempts);
	/**
	 * Original signature : <code>int SPRKStepGetNumStepAttempts(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:95</i>
	 */
	int SPRKStepGetNumStepAttempts(Pointer arkode_mem, LongBuffer step_attempts);
	/**
	 * Original signature : <code>int SPRKStepGetNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:97</i><br>
	 * @deprecated use the safer methods {@link #SPRKStepGetNumSteps(Pointer, LongBuffer)} and {@link #SPRKStepGetNumSteps(Pointer, LongByReference)} instead
	 */
	@Deprecated 
	int SPRKStepGetNumSteps(Pointer arkode_mem, LongByReference nsteps);
	/**
	 * Original signature : <code>int SPRKStepGetNumSteps(void*, long long*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:97</i>
	 */
	int SPRKStepGetNumSteps(Pointer arkode_mem, LongBuffer nsteps);
	/**
	 * Original signature : <code>int SPRKStepGetRootInfo(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:98</i><br>
	 * @deprecated use the safer methods {@link #SPRKStepGetRootInfo(Pointer, IntBuffer)} and {@link #SPRKStepGetRootInfo(Pointer, IntByReference)} instead
	 */
	@Deprecated 
	int SPRKStepGetRootInfo(Pointer arkode_mem, IntByReference rootsfound);
	/**
	 * Original signature : <code>int SPRKStepGetRootInfo(void*, int*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:98</i>
	 */
	int SPRKStepGetRootInfo(Pointer arkode_mem, IntBuffer rootsfound);
	/**
	 * Original signature : <code>int SPRKStepGetUserData(void*, void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:99</i>
	 */
	int SPRKStepGetUserData(Pointer arkode_mem, PointerByReference user_data);
	/**
	 * Original signature : <code>int SPRKStepPrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:100</i><br>
	 * @deprecated use the safer method {@link #SPRKStepPrintAllStats(Pointer, PointerByReference, int)} instead
	 */
	@Deprecated 
	int SPRKStepPrintAllStats(Pointer arkode_mem, Pointer outfile, int fmt);
	/**
	 * Original signature : <code>int SPRKStepPrintAllStats(void*, FILE*, SUNOutputFormat)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:100</i>
	 */
	int SPRKStepPrintAllStats(Pointer arkode_mem, PointerByReference outfile, int fmt);
	/**
	 * Original signature : <code>int SPRKStepWriteParameters(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:102</i><br>
	 * @deprecated use the safer method {@link #SPRKStepWriteParameters(Pointer, PointerByReference)} instead
	 */
	@Deprecated 
	int SPRKStepWriteParameters(Pointer arkode_mem, Pointer fp);
	/**
	 * Original signature : <code>int SPRKStepWriteParameters(void*, FILE*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:102</i>
	 */
	int SPRKStepWriteParameters(Pointer arkode_mem, PointerByReference fp);
	/**
	 * Grouped optional output functions<br>
	 * Original signature : <code>int SPRKStepGetStepStats(void*, long long*, sunrealtype*, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:105</i><br>
	 * @deprecated use the safer methods {@link #SPRKStepGetStepStats(Pointer, LongBuffer, DoubleBuffer, DoubleBuffer, DoubleBuffer, DoubleBuffer)} and {@link #SPRKStepGetStepStats(Pointer, LongByReference, DoubleByReference, DoubleByReference, DoubleByReference, DoubleByReference)} instead
	 */
	@Deprecated 
	int SPRKStepGetStepStats(Pointer arkode_mem, LongByReference nsteps, DoubleByReference hinused, DoubleByReference hlast, DoubleByReference hcur, DoubleByReference tcur);
	/**
	 * Grouped optional output functions<br>
	 * Original signature : <code>int SPRKStepGetStepStats(void*, long long*, sunrealtype*, sunrealtype*, sunrealtype*, sunrealtype*)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:105</i>
	 */
	int SPRKStepGetStepStats(Pointer arkode_mem, LongBuffer nsteps, DoubleBuffer hinused, DoubleBuffer hlast, DoubleBuffer hcur, DoubleBuffer tcur);
	/**
	 * Free function<br>
	 * Original signature : <code>void SPRKStepFree(void**)</code><br>
	 * <i>native declaration : include\arkode\arkode_sprkstep.h:110</i>
	 */
	void SPRKStepFree(PointerByReference arkode_mem);
	public static class SUNMatrix extends PointerType {
		public SUNMatrix(Pointer address) {
			super(address);
		}
		public SUNMatrix() {
			super();
		}
	};
	public static class SUNLinearSolver extends PointerType {
		public SUNLinearSolver(Pointer address) {
			super(address);
		}
		public SUNLinearSolver() {
			super();
		}
	};
	public static class SUNNonlinearSolver extends PointerType {
		public SUNNonlinearSolver(Pointer address) {
			super(address);
		}
		public SUNNonlinearSolver() {
			super();
		}
	};
	public static class SUNContext extends PointerType {
		public SUNContext(Pointer address) {
			super(address);
		}
		public SUNContext() {
			super();
		}
	};
	public static class MRIStepInnerStepper extends PointerType {
		public MRIStepInnerStepper(Pointer address) {
			super(address);
		}
		public MRIStepInnerStepper() {
			super();
		}
	};
	public static class FILE extends PointerType {
		public FILE(Pointer address) {
			super(address);
		}
		public FILE() {
			super();
		}
	};
	public static class N_Vector extends PointerType {
		public N_Vector(Pointer address) {
			super(address);
		}
		public N_Vector() {
			super();
		}
	};
	public static class SUNAdaptController extends PointerType {
		public SUNAdaptController(Pointer address) {
			super(address);
		}
		public SUNAdaptController() {
			super();
		}
	};
}
